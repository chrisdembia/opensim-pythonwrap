/*
 * LoadPluginJPanel.java
 *
 * Created on January 18, 2009, 10:46 PM
 */

package org.opensim.view.actions;

import javax.swing.JCheckBox;
import javax.swing.JLabel;

/**
 *
 * @author  ayman
 */
public class LoadPluginJPanel extends javax.swing.JPanel {
    String pluginName;
    /** Creates new form LoadPluginJPanel */
    public LoadPluginJPanel(String pluginName) {
        this.pluginName = pluginName;
        initComponents();
        jLabel1.setText("Library "+pluginName+" has been loaded successfully.");
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        javax.swing.JCheckBox jLoadAlwaysCheckBox;

        jLabel1 = new JLabel("Library "+pluginName+" has been loaded successfully into OpenSim.");

        jLoadAlwaysCheckBox = new javax.swing.JCheckBox();

        jLabel1.setText("Library has been loaded successfully into OpenSim.");

        jLoadAlwaysCheckBox.setText("Always load this library on entry");
        jLoadAlwaysCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jLoadAlwaysCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jLoadAlwaysCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLoadAlwaysCheckBoxActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(34, 34, 34)
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(53, 53, 53)
                        .add(jLoadAlwaysCheckBox, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(55, 55, 55)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLoadAlwaysCheckBox)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jLoadAlwaysCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLoadAlwaysCheckBoxActionPerformed
// TODO add your handling code here:
        boolean newValue = ((JCheckBox)(evt.getSource())).isSelected();
        setPreloadAlways(newValue);
    }//GEN-LAST:event_jLoadAlwaysCheckBoxActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    private boolean preloadAlways=false;

    public boolean isPreloadAlways() {
        return preloadAlways;
    }

    public void setPreloadAlways(boolean preloadAlways) {
        this.preloadAlways = preloadAlways;
    }
    
}
