/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class PathActuator extends Actuator {
  private long swigCPtr;

  public PathActuator(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.PathActuator_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(PathActuator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimModelJNI.delete_PathActuator(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static PathActuator safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelJNI.PathActuator_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new PathActuator(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimModelJNI.PathActuator_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimModelJNI.PathActuator_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimModelJNI.PathActuator_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new PathActuator(cPtr, false);
  }

  public String getConcreteClassName() {
    return opensimModelJNI.PathActuator_getConcreteClassName(swigCPtr, this);
  }

  public void setPropertyIndex_GeometryPath(SWIGTYPE_p_PropertyIndex value) {
    opensimModelJNI.PathActuator_PropertyIndex_GeometryPath_set(swigCPtr, this, SWIGTYPE_p_PropertyIndex.getCPtr(value));
  }

  public SWIGTYPE_p_PropertyIndex getPropertyIndex_GeometryPath() {
    return new SWIGTYPE_p_PropertyIndex(opensimModelJNI.PathActuator_PropertyIndex_GeometryPath_get(swigCPtr, this), true);
  }

  public void copyProperty_GeometryPath(PathActuator source) {
    opensimModelJNI.PathActuator_copyProperty_GeometryPath(swigCPtr, this, PathActuator.getCPtr(source), source);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_OpenSim__GeometryPath_t getProperty_GeometryPath() {
    return new SWIGTYPE_p_OpenSim__PropertyT_OpenSim__GeometryPath_t(opensimModelJNI.PathActuator_getProperty_GeometryPath(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_OpenSim__GeometryPath_t updProperty_GeometryPath() {
    return new SWIGTYPE_p_OpenSim__PropertyT_OpenSim__GeometryPath_t(opensimModelJNI.PathActuator_updProperty_GeometryPath(swigCPtr, this), false);
  }

  public GeometryPath get_GeometryPath(int i) {
    return new GeometryPath(opensimModelJNI.PathActuator_get_GeometryPath__SWIG_0(swigCPtr, this, i), false);
  }

  public GeometryPath upd_GeometryPath(int i) {
    return new GeometryPath(opensimModelJNI.PathActuator_upd_GeometryPath__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_GeometryPath(int i, GeometryPath value) {
    opensimModelJNI.PathActuator_set_GeometryPath__SWIG_0(swigCPtr, this, i, GeometryPath.getCPtr(value), value);
  }

  public int append_GeometryPath(GeometryPath value) {
    return opensimModelJNI.PathActuator_append_GeometryPath(swigCPtr, this, GeometryPath.getCPtr(value), value);
  }

  public void constructProperty_GeometryPath(GeometryPath initValue) {
    opensimModelJNI.PathActuator_constructProperty_GeometryPath(swigCPtr, this, GeometryPath.getCPtr(initValue), initValue);
  }

  public GeometryPath get_GeometryPath() {
    return new GeometryPath(opensimModelJNI.PathActuator_get_GeometryPath__SWIG_1(swigCPtr, this), false);
  }

  public GeometryPath upd_GeometryPath() {
    return new GeometryPath(opensimModelJNI.PathActuator_upd_GeometryPath__SWIG_1(swigCPtr, this), false);
  }

  public void set_GeometryPath(GeometryPath value) {
    opensimModelJNI.PathActuator_set_GeometryPath__SWIG_1(swigCPtr, this, GeometryPath.getCPtr(value), value);
  }

  public void setPropertyIndex_optimal_force(SWIGTYPE_p_PropertyIndex value) {
    opensimModelJNI.PathActuator_PropertyIndex_optimal_force_set(swigCPtr, this, SWIGTYPE_p_PropertyIndex.getCPtr(value));
  }

  public SWIGTYPE_p_PropertyIndex getPropertyIndex_optimal_force() {
    return new SWIGTYPE_p_PropertyIndex(opensimModelJNI.PathActuator_PropertyIndex_optimal_force_get(swigCPtr, this), true);
  }

  public void copyProperty_optimal_force(PathActuator source) {
    opensimModelJNI.PathActuator_copyProperty_optimal_force(swigCPtr, this, PathActuator.getCPtr(source), source);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_double_t getProperty_optimal_force() {
    return new SWIGTYPE_p_OpenSim__PropertyT_double_t(opensimModelJNI.PathActuator_getProperty_optimal_force(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_double_t updProperty_optimal_force() {
    return new SWIGTYPE_p_OpenSim__PropertyT_double_t(opensimModelJNI.PathActuator_updProperty_optimal_force(swigCPtr, this), false);
  }

  public double get_optimal_force(int i) {
    return opensimModelJNI.PathActuator_get_optimal_force__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_optimal_force(int i) {
    return new SWIGTYPE_p_double(opensimModelJNI.PathActuator_upd_optimal_force__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_optimal_force(int i, double value) {
    opensimModelJNI.PathActuator_set_optimal_force__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_optimal_force(double value) {
    return opensimModelJNI.PathActuator_append_optimal_force(swigCPtr, this, value);
  }

  public void constructProperty_optimal_force(double initValue) {
    opensimModelJNI.PathActuator_constructProperty_optimal_force(swigCPtr, this, initValue);
  }

  public double get_optimal_force() {
    return opensimModelJNI.PathActuator_get_optimal_force__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_optimal_force() {
    return new SWIGTYPE_p_double(opensimModelJNI.PathActuator_upd_optimal_force__SWIG_1(swigCPtr, this), false);
  }

  public void set_optimal_force(double value) {
    opensimModelJNI.PathActuator_set_optimal_force__SWIG_1(swigCPtr, this, value);
  }

  public PathActuator() {
    this(opensimModelJNI.new_PathActuator(), true);
  }

  public GeometryPath updGeometryPath() {
    return new GeometryPath(opensimModelJNI.PathActuator_updGeometryPath(swigCPtr, this), false);
  }

  public GeometryPath getGeometryPath() {
    return new GeometryPath(opensimModelJNI.PathActuator_getGeometryPath(swigCPtr, this), false);
  }

  public boolean hasGeometryPath() {
    return opensimModelJNI.PathActuator_hasGeometryPath(swigCPtr, this);
  }

  public void setOptimalForce(double aOptimalForce) {
    opensimModelJNI.PathActuator_setOptimalForce(swigCPtr, this, aOptimalForce);
  }

  public double getOptimalForce() {
    return opensimModelJNI.PathActuator_getOptimalForce(swigCPtr, this);
  }

  public double getLength(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.PathActuator_getLength(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getLengtheningSpeed(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.PathActuator_getLengtheningSpeed(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getPower(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.PathActuator_getPower(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getStress(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.PathActuator_getStress(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public void addNewPathPoint(String proposedName, Body aBody, SWIGTYPE_p_SimTK__Vec3 aPositionOnBody) {
    opensimModelJNI.PathActuator_addNewPathPoint(swigCPtr, this, proposedName, Body.getCPtr(aBody), aBody, SWIGTYPE_p_SimTK__Vec3.getCPtr(aPositionOnBody));
  }

  public void computeForce(SWIGTYPE_p_SimTK__State state, SWIGTYPE_p_SimTK__Vector_T_SimTK__SpatialVec_t bodyForces, SWIGTYPE_p_SimTK__Vector mobilityForces) {
    opensimModelJNI.PathActuator_computeForce(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(state), SWIGTYPE_p_SimTK__Vector_T_SimTK__SpatialVec_t.getCPtr(bodyForces), SWIGTYPE_p_SimTK__Vector.getCPtr(mobilityForces));
  }

  public double computeActuation(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.PathActuator_computeActuation(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double computeMomentArm(SWIGTYPE_p_SimTK__State s, Coordinate aCoord) {
    return opensimModelJNI.PathActuator_computeMomentArm(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), Coordinate.getCPtr(aCoord), aCoord);
  }

  public void updateFromXMLNode(SWIGTYPE_p_SimTK__Xml__Element aNode, int versionNumber) {
    opensimModelJNI.PathActuator_updateFromXMLNode__SWIG_0(swigCPtr, this, SWIGTYPE_p_SimTK__Xml__Element.getCPtr(aNode), versionNumber);
  }

  public void updateFromXMLNode(SWIGTYPE_p_SimTK__Xml__Element aNode) {
    opensimModelJNI.PathActuator_updateFromXMLNode__SWIG_1(swigCPtr, this, SWIGTYPE_p_SimTK__Xml__Element.getCPtr(aNode));
  }

  public void preScale(SWIGTYPE_p_SimTK__State s, ScaleSet aScaleSet) {
    opensimModelJNI.PathActuator_preScale(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), ScaleSet.getCPtr(aScaleSet), aScaleSet);
  }

  public void scale(SWIGTYPE_p_SimTK__State s, ScaleSet aScaleSet) {
    opensimModelJNI.PathActuator_scale(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), ScaleSet.getCPtr(aScaleSet), aScaleSet);
  }

  public void postScale(SWIGTYPE_p_SimTK__State s, ScaleSet aScaleSet) {
    opensimModelJNI.PathActuator_postScale(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), ScaleSet.getCPtr(aScaleSet), aScaleSet);
  }

  public VisibleObject getDisplayer() {
    long cPtr = opensimModelJNI.PathActuator_getDisplayer(swigCPtr, this);
    return (cPtr == 0) ? null : new VisibleObject(cPtr, false);
  }

  public void updateDisplayer(SWIGTYPE_p_SimTK__State s) {
    opensimModelJNI.PathActuator_updateDisplayer(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

}
