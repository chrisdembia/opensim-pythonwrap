/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class Actuator_ extends Force {
  private long swigCPtr;

  public Actuator_(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.Actuator__SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Actuator_ obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimModelJNI.delete_Actuator_(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static Actuator_ safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelJNI.Actuator__safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new Actuator_(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimModelJNI.Actuator__assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimModelJNI.Actuator__getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimModelJNI.Actuator__clone(swigCPtr, this);
    return (cPtr == 0) ? null : new Actuator_(cPtr, false);
  }

  public String getConcreteClassName() {
    return opensimModelJNI.Actuator__getConcreteClassName(swigCPtr, this);
  }

  public int numControls() {
    return opensimModelJNI.Actuator__numControls(swigCPtr, this);
  }

  public SWIGTYPE_p_SimTK__Vector getDefaultControls() {
    return new SWIGTYPE_p_SimTK__Vector(opensimModelJNI.Actuator__getDefaultControls(swigCPtr, this), true);
  }

  public void getControls(SWIGTYPE_p_SimTK__Vector modelControls, SWIGTYPE_p_SimTK__Vector actuatorControls) {
    opensimModelJNI.Actuator__getControls(swigCPtr, this, SWIGTYPE_p_SimTK__Vector.getCPtr(modelControls), SWIGTYPE_p_SimTK__Vector.getCPtr(actuatorControls));
  }

  public void setControls(SWIGTYPE_p_SimTK__Vector actuatorControls, SWIGTYPE_p_SimTK__Vector modelControls) {
    opensimModelJNI.Actuator__setControls(swigCPtr, this, SWIGTYPE_p_SimTK__Vector.getCPtr(actuatorControls), SWIGTYPE_p_SimTK__Vector.getCPtr(modelControls));
  }

  public void addInControls(SWIGTYPE_p_SimTK__Vector actuatorControls, SWIGTYPE_p_SimTK__Vector modelControls) {
    opensimModelJNI.Actuator__addInControls(swigCPtr, this, SWIGTYPE_p_SimTK__Vector.getCPtr(actuatorControls), SWIGTYPE_p_SimTK__Vector.getCPtr(modelControls));
  }

  public double computeActuation(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Actuator__computeActuation(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public void computeEquilibrium(SWIGTYPE_p_SimTK__State s) {
    opensimModelJNI.Actuator__computeEquilibrium(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

}
