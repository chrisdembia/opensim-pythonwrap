/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class Millard2012EquilibriumMuscle extends Muscle {
  private long swigCPtr;

  public Millard2012EquilibriumMuscle(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.Millard2012EquilibriumMuscle_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Millard2012EquilibriumMuscle obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimModelJNI.delete_Millard2012EquilibriumMuscle(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static Millard2012EquilibriumMuscle safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelJNI.Millard2012EquilibriumMuscle_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new Millard2012EquilibriumMuscle(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimModelJNI.Millard2012EquilibriumMuscle_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimModelJNI.Millard2012EquilibriumMuscle_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimModelJNI.Millard2012EquilibriumMuscle_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new Millard2012EquilibriumMuscle(cPtr, false);
  }

  public String getConcreteClassName() {
    return opensimModelJNI.Millard2012EquilibriumMuscle_getConcreteClassName(swigCPtr, this);
  }

  public void setPropertyIndex_use_second_order_activation(SWIGTYPE_p_PropertyIndex value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_use_second_order_activation_set(swigCPtr, this, SWIGTYPE_p_PropertyIndex.getCPtr(value));
  }

  public SWIGTYPE_p_PropertyIndex getPropertyIndex_use_second_order_activation() {
    return new SWIGTYPE_p_PropertyIndex(opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_use_second_order_activation_get(swigCPtr, this), true);
  }

  public void copyProperty_use_second_order_activation(Millard2012EquilibriumMuscle source) {
    opensimModelJNI.Millard2012EquilibriumMuscle_copyProperty_use_second_order_activation(swigCPtr, this, Millard2012EquilibriumMuscle.getCPtr(source), source);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_bool_t getProperty_use_second_order_activation() {
    return new SWIGTYPE_p_OpenSim__PropertyT_bool_t(opensimModelJNI.Millard2012EquilibriumMuscle_getProperty_use_second_order_activation(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_bool_t updProperty_use_second_order_activation() {
    return new SWIGTYPE_p_OpenSim__PropertyT_bool_t(opensimModelJNI.Millard2012EquilibriumMuscle_updProperty_use_second_order_activation(swigCPtr, this), false);
  }

  public boolean get_use_second_order_activation(int i) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_get_use_second_order_activation__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_use_second_order_activation(int i) {
    return new SWIGTYPE_p_bool(opensimModelJNI.Millard2012EquilibriumMuscle_upd_use_second_order_activation__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_use_second_order_activation(int i, boolean value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_use_second_order_activation__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_use_second_order_activation(boolean value) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_append_use_second_order_activation(swigCPtr, this, value);
  }

  public void constructProperty_use_second_order_activation(boolean initValue) {
    opensimModelJNI.Millard2012EquilibriumMuscle_constructProperty_use_second_order_activation(swigCPtr, this, initValue);
  }

  public boolean get_use_second_order_activation() {
    return opensimModelJNI.Millard2012EquilibriumMuscle_get_use_second_order_activation__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_use_second_order_activation() {
    return new SWIGTYPE_p_bool(opensimModelJNI.Millard2012EquilibriumMuscle_upd_use_second_order_activation__SWIG_1(swigCPtr, this), false);
  }

  public void set_use_second_order_activation(boolean value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_use_second_order_activation__SWIG_1(swigCPtr, this, value);
  }

  public void setPropertyIndex_use_fiber_damping(SWIGTYPE_p_PropertyIndex value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_use_fiber_damping_set(swigCPtr, this, SWIGTYPE_p_PropertyIndex.getCPtr(value));
  }

  public SWIGTYPE_p_PropertyIndex getPropertyIndex_use_fiber_damping() {
    return new SWIGTYPE_p_PropertyIndex(opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_use_fiber_damping_get(swigCPtr, this), true);
  }

  public void copyProperty_use_fiber_damping(Millard2012EquilibriumMuscle source) {
    opensimModelJNI.Millard2012EquilibriumMuscle_copyProperty_use_fiber_damping(swigCPtr, this, Millard2012EquilibriumMuscle.getCPtr(source), source);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_bool_t getProperty_use_fiber_damping() {
    return new SWIGTYPE_p_OpenSim__PropertyT_bool_t(opensimModelJNI.Millard2012EquilibriumMuscle_getProperty_use_fiber_damping(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_bool_t updProperty_use_fiber_damping() {
    return new SWIGTYPE_p_OpenSim__PropertyT_bool_t(opensimModelJNI.Millard2012EquilibriumMuscle_updProperty_use_fiber_damping(swigCPtr, this), false);
  }

  public boolean get_use_fiber_damping(int i) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_get_use_fiber_damping__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_use_fiber_damping(int i) {
    return new SWIGTYPE_p_bool(opensimModelJNI.Millard2012EquilibriumMuscle_upd_use_fiber_damping__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_use_fiber_damping(int i, boolean value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_use_fiber_damping__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_use_fiber_damping(boolean value) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_append_use_fiber_damping(swigCPtr, this, value);
  }

  public void constructProperty_use_fiber_damping(boolean initValue) {
    opensimModelJNI.Millard2012EquilibriumMuscle_constructProperty_use_fiber_damping(swigCPtr, this, initValue);
  }

  public boolean get_use_fiber_damping() {
    return opensimModelJNI.Millard2012EquilibriumMuscle_get_use_fiber_damping__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_use_fiber_damping() {
    return new SWIGTYPE_p_bool(opensimModelJNI.Millard2012EquilibriumMuscle_upd_use_fiber_damping__SWIG_1(swigCPtr, this), false);
  }

  public void set_use_fiber_damping(boolean value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_use_fiber_damping__SWIG_1(swigCPtr, this, value);
  }

  public void setPropertyIndex_fiber_damping(SWIGTYPE_p_PropertyIndex value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_fiber_damping_set(swigCPtr, this, SWIGTYPE_p_PropertyIndex.getCPtr(value));
  }

  public SWIGTYPE_p_PropertyIndex getPropertyIndex_fiber_damping() {
    return new SWIGTYPE_p_PropertyIndex(opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_fiber_damping_get(swigCPtr, this), true);
  }

  public void copyProperty_fiber_damping(Millard2012EquilibriumMuscle source) {
    opensimModelJNI.Millard2012EquilibriumMuscle_copyProperty_fiber_damping(swigCPtr, this, Millard2012EquilibriumMuscle.getCPtr(source), source);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_double_t getProperty_fiber_damping() {
    return new SWIGTYPE_p_OpenSim__PropertyT_double_t(opensimModelJNI.Millard2012EquilibriumMuscle_getProperty_fiber_damping(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_double_t updProperty_fiber_damping() {
    return new SWIGTYPE_p_OpenSim__PropertyT_double_t(opensimModelJNI.Millard2012EquilibriumMuscle_updProperty_fiber_damping(swigCPtr, this), false);
  }

  public double get_fiber_damping(int i) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_get_fiber_damping__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_fiber_damping(int i) {
    return new SWIGTYPE_p_double(opensimModelJNI.Millard2012EquilibriumMuscle_upd_fiber_damping__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_fiber_damping(int i, double value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_fiber_damping__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_fiber_damping(double value) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_append_fiber_damping(swigCPtr, this, value);
  }

  public void constructProperty_fiber_damping(double initValue) {
    opensimModelJNI.Millard2012EquilibriumMuscle_constructProperty_fiber_damping(swigCPtr, this, initValue);
  }

  public double get_fiber_damping() {
    return opensimModelJNI.Millard2012EquilibriumMuscle_get_fiber_damping__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_fiber_damping() {
    return new SWIGTYPE_p_double(opensimModelJNI.Millard2012EquilibriumMuscle_upd_fiber_damping__SWIG_1(swigCPtr, this), false);
  }

  public void set_fiber_damping(double value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_fiber_damping__SWIG_1(swigCPtr, this, value);
  }

  public void setPropertyIndex_default_activation(SWIGTYPE_p_PropertyIndex value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_default_activation_set(swigCPtr, this, SWIGTYPE_p_PropertyIndex.getCPtr(value));
  }

  public SWIGTYPE_p_PropertyIndex getPropertyIndex_default_activation() {
    return new SWIGTYPE_p_PropertyIndex(opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_default_activation_get(swigCPtr, this), true);
  }

  public void copyProperty_default_activation(Millard2012EquilibriumMuscle source) {
    opensimModelJNI.Millard2012EquilibriumMuscle_copyProperty_default_activation(swigCPtr, this, Millard2012EquilibriumMuscle.getCPtr(source), source);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_double_t getProperty_default_activation() {
    return new SWIGTYPE_p_OpenSim__PropertyT_double_t(opensimModelJNI.Millard2012EquilibriumMuscle_getProperty_default_activation(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_double_t updProperty_default_activation() {
    return new SWIGTYPE_p_OpenSim__PropertyT_double_t(opensimModelJNI.Millard2012EquilibriumMuscle_updProperty_default_activation(swigCPtr, this), false);
  }

  public double get_default_activation(int i) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_get_default_activation__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_default_activation(int i) {
    return new SWIGTYPE_p_double(opensimModelJNI.Millard2012EquilibriumMuscle_upd_default_activation__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_default_activation(int i, double value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_default_activation__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_default_activation(double value) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_append_default_activation(swigCPtr, this, value);
  }

  public void constructProperty_default_activation(double initValue) {
    opensimModelJNI.Millard2012EquilibriumMuscle_constructProperty_default_activation(swigCPtr, this, initValue);
  }

  public double get_default_activation() {
    return opensimModelJNI.Millard2012EquilibriumMuscle_get_default_activation__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_default_activation() {
    return new SWIGTYPE_p_double(opensimModelJNI.Millard2012EquilibriumMuscle_upd_default_activation__SWIG_1(swigCPtr, this), false);
  }

  public void set_default_activation(double value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_default_activation__SWIG_1(swigCPtr, this, value);
  }

  public void setPropertyIndex_default_fiber_length(SWIGTYPE_p_PropertyIndex value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_default_fiber_length_set(swigCPtr, this, SWIGTYPE_p_PropertyIndex.getCPtr(value));
  }

  public SWIGTYPE_p_PropertyIndex getPropertyIndex_default_fiber_length() {
    return new SWIGTYPE_p_PropertyIndex(opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_default_fiber_length_get(swigCPtr, this), true);
  }

  public void copyProperty_default_fiber_length(Millard2012EquilibriumMuscle source) {
    opensimModelJNI.Millard2012EquilibriumMuscle_copyProperty_default_fiber_length(swigCPtr, this, Millard2012EquilibriumMuscle.getCPtr(source), source);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_double_t getProperty_default_fiber_length() {
    return new SWIGTYPE_p_OpenSim__PropertyT_double_t(opensimModelJNI.Millard2012EquilibriumMuscle_getProperty_default_fiber_length(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_double_t updProperty_default_fiber_length() {
    return new SWIGTYPE_p_OpenSim__PropertyT_double_t(opensimModelJNI.Millard2012EquilibriumMuscle_updProperty_default_fiber_length(swigCPtr, this), false);
  }

  public double get_default_fiber_length(int i) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_get_default_fiber_length__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_default_fiber_length(int i) {
    return new SWIGTYPE_p_double(opensimModelJNI.Millard2012EquilibriumMuscle_upd_default_fiber_length__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_default_fiber_length(int i, double value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_default_fiber_length__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_default_fiber_length(double value) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_append_default_fiber_length(swigCPtr, this, value);
  }

  public void constructProperty_default_fiber_length(double initValue) {
    opensimModelJNI.Millard2012EquilibriumMuscle_constructProperty_default_fiber_length(swigCPtr, this, initValue);
  }

  public double get_default_fiber_length() {
    return opensimModelJNI.Millard2012EquilibriumMuscle_get_default_fiber_length__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_default_fiber_length() {
    return new SWIGTYPE_p_double(opensimModelJNI.Millard2012EquilibriumMuscle_upd_default_fiber_length__SWIG_1(swigCPtr, this), false);
  }

  public void set_default_fiber_length(double value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_default_fiber_length__SWIG_1(swigCPtr, this, value);
  }

  public void setPropertyIndex_MuscleSecondOrderActivationDynamicModel(SWIGTYPE_p_PropertyIndex value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_MuscleSecondOrderActivationDynamicModel_set(swigCPtr, this, SWIGTYPE_p_PropertyIndex.getCPtr(value));
  }

  public SWIGTYPE_p_PropertyIndex getPropertyIndex_MuscleSecondOrderActivationDynamicModel() {
    return new SWIGTYPE_p_PropertyIndex(opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_MuscleSecondOrderActivationDynamicModel_get(swigCPtr, this), true);
  }

  public void copyProperty_MuscleSecondOrderActivationDynamicModel(Millard2012EquilibriumMuscle source) {
    opensimModelJNI.Millard2012EquilibriumMuscle_copyProperty_MuscleSecondOrderActivationDynamicModel(swigCPtr, this, Millard2012EquilibriumMuscle.getCPtr(source), source);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_MuscleSecondOrderActivationDynamicModel_t getProperty_MuscleSecondOrderActivationDynamicModel() {
    return new SWIGTYPE_p_OpenSim__PropertyT_MuscleSecondOrderActivationDynamicModel_t(opensimModelJNI.Millard2012EquilibriumMuscle_getProperty_MuscleSecondOrderActivationDynamicModel(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_MuscleSecondOrderActivationDynamicModel_t updProperty_MuscleSecondOrderActivationDynamicModel() {
    return new SWIGTYPE_p_OpenSim__PropertyT_MuscleSecondOrderActivationDynamicModel_t(opensimModelJNI.Millard2012EquilibriumMuscle_updProperty_MuscleSecondOrderActivationDynamicModel(swigCPtr, this), false);
  }

  public SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel get_MuscleSecondOrderActivationDynamicModel(int i) {
    return new SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel(opensimModelJNI.Millard2012EquilibriumMuscle_get_MuscleSecondOrderActivationDynamicModel__SWIG_0(swigCPtr, this, i), false);
  }

  public SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel upd_MuscleSecondOrderActivationDynamicModel(int i) {
    return new SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel(opensimModelJNI.Millard2012EquilibriumMuscle_upd_MuscleSecondOrderActivationDynamicModel__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_MuscleSecondOrderActivationDynamicModel(int i, SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_MuscleSecondOrderActivationDynamicModel__SWIG_0(swigCPtr, this, i, SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel.getCPtr(value));
  }

  public int append_MuscleSecondOrderActivationDynamicModel(SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel value) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_append_MuscleSecondOrderActivationDynamicModel(swigCPtr, this, SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel.getCPtr(value));
  }

  public void constructProperty_MuscleSecondOrderActivationDynamicModel(SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel initValue) {
    opensimModelJNI.Millard2012EquilibriumMuscle_constructProperty_MuscleSecondOrderActivationDynamicModel(swigCPtr, this, SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel.getCPtr(initValue));
  }

  public SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel get_MuscleSecondOrderActivationDynamicModel() {
    return new SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel(opensimModelJNI.Millard2012EquilibriumMuscle_get_MuscleSecondOrderActivationDynamicModel__SWIG_1(swigCPtr, this), false);
  }

  public SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel upd_MuscleSecondOrderActivationDynamicModel() {
    return new SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel(opensimModelJNI.Millard2012EquilibriumMuscle_upd_MuscleSecondOrderActivationDynamicModel__SWIG_1(swigCPtr, this), false);
  }

  public void set_MuscleSecondOrderActivationDynamicModel(SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_MuscleSecondOrderActivationDynamicModel__SWIG_1(swigCPtr, this, SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel.getCPtr(value));
  }

  public void setPropertyIndex_MuscleFirstOrderActivationDynamicModel(SWIGTYPE_p_PropertyIndex value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_MuscleFirstOrderActivationDynamicModel_set(swigCPtr, this, SWIGTYPE_p_PropertyIndex.getCPtr(value));
  }

  public SWIGTYPE_p_PropertyIndex getPropertyIndex_MuscleFirstOrderActivationDynamicModel() {
    return new SWIGTYPE_p_PropertyIndex(opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_MuscleFirstOrderActivationDynamicModel_get(swigCPtr, this), true);
  }

  public void copyProperty_MuscleFirstOrderActivationDynamicModel(Millard2012EquilibriumMuscle source) {
    opensimModelJNI.Millard2012EquilibriumMuscle_copyProperty_MuscleFirstOrderActivationDynamicModel(swigCPtr, this, Millard2012EquilibriumMuscle.getCPtr(source), source);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_MuscleFirstOrderActivationDynamicModel_t getProperty_MuscleFirstOrderActivationDynamicModel() {
    return new SWIGTYPE_p_OpenSim__PropertyT_MuscleFirstOrderActivationDynamicModel_t(opensimModelJNI.Millard2012EquilibriumMuscle_getProperty_MuscleFirstOrderActivationDynamicModel(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_MuscleFirstOrderActivationDynamicModel_t updProperty_MuscleFirstOrderActivationDynamicModel() {
    return new SWIGTYPE_p_OpenSim__PropertyT_MuscleFirstOrderActivationDynamicModel_t(opensimModelJNI.Millard2012EquilibriumMuscle_updProperty_MuscleFirstOrderActivationDynamicModel(swigCPtr, this), false);
  }

  public SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel get_MuscleFirstOrderActivationDynamicModel(int i) {
    return new SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel(opensimModelJNI.Millard2012EquilibriumMuscle_get_MuscleFirstOrderActivationDynamicModel__SWIG_0(swigCPtr, this, i), false);
  }

  public SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel upd_MuscleFirstOrderActivationDynamicModel(int i) {
    return new SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel(opensimModelJNI.Millard2012EquilibriumMuscle_upd_MuscleFirstOrderActivationDynamicModel__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_MuscleFirstOrderActivationDynamicModel(int i, SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_MuscleFirstOrderActivationDynamicModel__SWIG_0(swigCPtr, this, i, SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel.getCPtr(value));
  }

  public int append_MuscleFirstOrderActivationDynamicModel(SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel value) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_append_MuscleFirstOrderActivationDynamicModel(swigCPtr, this, SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel.getCPtr(value));
  }

  public void constructProperty_MuscleFirstOrderActivationDynamicModel(SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel initValue) {
    opensimModelJNI.Millard2012EquilibriumMuscle_constructProperty_MuscleFirstOrderActivationDynamicModel(swigCPtr, this, SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel.getCPtr(initValue));
  }

  public SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel get_MuscleFirstOrderActivationDynamicModel() {
    return new SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel(opensimModelJNI.Millard2012EquilibriumMuscle_get_MuscleFirstOrderActivationDynamicModel__SWIG_1(swigCPtr, this), false);
  }

  public SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel upd_MuscleFirstOrderActivationDynamicModel() {
    return new SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel(opensimModelJNI.Millard2012EquilibriumMuscle_upd_MuscleFirstOrderActivationDynamicModel__SWIG_1(swigCPtr, this), false);
  }

  public void set_MuscleFirstOrderActivationDynamicModel(SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_MuscleFirstOrderActivationDynamicModel__SWIG_1(swigCPtr, this, SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel.getCPtr(value));
  }

  public void setPropertyIndex_ActiveForceLengthCurve(SWIGTYPE_p_PropertyIndex value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_ActiveForceLengthCurve_set(swigCPtr, this, SWIGTYPE_p_PropertyIndex.getCPtr(value));
  }

  public SWIGTYPE_p_PropertyIndex getPropertyIndex_ActiveForceLengthCurve() {
    return new SWIGTYPE_p_PropertyIndex(opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_ActiveForceLengthCurve_get(swigCPtr, this), true);
  }

  public void copyProperty_ActiveForceLengthCurve(Millard2012EquilibriumMuscle source) {
    opensimModelJNI.Millard2012EquilibriumMuscle_copyProperty_ActiveForceLengthCurve(swigCPtr, this, Millard2012EquilibriumMuscle.getCPtr(source), source);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_ActiveForceLengthCurve_t getProperty_ActiveForceLengthCurve() {
    return new SWIGTYPE_p_OpenSim__PropertyT_ActiveForceLengthCurve_t(opensimModelJNI.Millard2012EquilibriumMuscle_getProperty_ActiveForceLengthCurve(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_ActiveForceLengthCurve_t updProperty_ActiveForceLengthCurve() {
    return new SWIGTYPE_p_OpenSim__PropertyT_ActiveForceLengthCurve_t(opensimModelJNI.Millard2012EquilibriumMuscle_updProperty_ActiveForceLengthCurve(swigCPtr, this), false);
  }

  public SWIGTYPE_p_ActiveForceLengthCurve get_ActiveForceLengthCurve(int i) {
    return new SWIGTYPE_p_ActiveForceLengthCurve(opensimModelJNI.Millard2012EquilibriumMuscle_get_ActiveForceLengthCurve__SWIG_0(swigCPtr, this, i), false);
  }

  public SWIGTYPE_p_ActiveForceLengthCurve upd_ActiveForceLengthCurve(int i) {
    return new SWIGTYPE_p_ActiveForceLengthCurve(opensimModelJNI.Millard2012EquilibriumMuscle_upd_ActiveForceLengthCurve__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ActiveForceLengthCurve(int i, SWIGTYPE_p_ActiveForceLengthCurve value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_ActiveForceLengthCurve__SWIG_0(swigCPtr, this, i, SWIGTYPE_p_ActiveForceLengthCurve.getCPtr(value));
  }

  public int append_ActiveForceLengthCurve(SWIGTYPE_p_ActiveForceLengthCurve value) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_append_ActiveForceLengthCurve(swigCPtr, this, SWIGTYPE_p_ActiveForceLengthCurve.getCPtr(value));
  }

  public void constructProperty_ActiveForceLengthCurve(SWIGTYPE_p_ActiveForceLengthCurve initValue) {
    opensimModelJNI.Millard2012EquilibriumMuscle_constructProperty_ActiveForceLengthCurve(swigCPtr, this, SWIGTYPE_p_ActiveForceLengthCurve.getCPtr(initValue));
  }

  public SWIGTYPE_p_ActiveForceLengthCurve get_ActiveForceLengthCurve() {
    return new SWIGTYPE_p_ActiveForceLengthCurve(opensimModelJNI.Millard2012EquilibriumMuscle_get_ActiveForceLengthCurve__SWIG_1(swigCPtr, this), false);
  }

  public SWIGTYPE_p_ActiveForceLengthCurve upd_ActiveForceLengthCurve() {
    return new SWIGTYPE_p_ActiveForceLengthCurve(opensimModelJNI.Millard2012EquilibriumMuscle_upd_ActiveForceLengthCurve__SWIG_1(swigCPtr, this), false);
  }

  public void set_ActiveForceLengthCurve(SWIGTYPE_p_ActiveForceLengthCurve value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_ActiveForceLengthCurve__SWIG_1(swigCPtr, this, SWIGTYPE_p_ActiveForceLengthCurve.getCPtr(value));
  }

  public void setPropertyIndex_ForceVelocityInverseCurve(SWIGTYPE_p_PropertyIndex value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_ForceVelocityInverseCurve_set(swigCPtr, this, SWIGTYPE_p_PropertyIndex.getCPtr(value));
  }

  public SWIGTYPE_p_PropertyIndex getPropertyIndex_ForceVelocityInverseCurve() {
    return new SWIGTYPE_p_PropertyIndex(opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_ForceVelocityInverseCurve_get(swigCPtr, this), true);
  }

  public void copyProperty_ForceVelocityInverseCurve(Millard2012EquilibriumMuscle source) {
    opensimModelJNI.Millard2012EquilibriumMuscle_copyProperty_ForceVelocityInverseCurve(swigCPtr, this, Millard2012EquilibriumMuscle.getCPtr(source), source);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_ForceVelocityInverseCurve_t getProperty_ForceVelocityInverseCurve() {
    return new SWIGTYPE_p_OpenSim__PropertyT_ForceVelocityInverseCurve_t(opensimModelJNI.Millard2012EquilibriumMuscle_getProperty_ForceVelocityInverseCurve(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_ForceVelocityInverseCurve_t updProperty_ForceVelocityInverseCurve() {
    return new SWIGTYPE_p_OpenSim__PropertyT_ForceVelocityInverseCurve_t(opensimModelJNI.Millard2012EquilibriumMuscle_updProperty_ForceVelocityInverseCurve(swigCPtr, this), false);
  }

  public SWIGTYPE_p_ForceVelocityInverseCurve get_ForceVelocityInverseCurve(int i) {
    return new SWIGTYPE_p_ForceVelocityInverseCurve(opensimModelJNI.Millard2012EquilibriumMuscle_get_ForceVelocityInverseCurve__SWIG_0(swigCPtr, this, i), false);
  }

  public SWIGTYPE_p_ForceVelocityInverseCurve upd_ForceVelocityInverseCurve(int i) {
    return new SWIGTYPE_p_ForceVelocityInverseCurve(opensimModelJNI.Millard2012EquilibriumMuscle_upd_ForceVelocityInverseCurve__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ForceVelocityInverseCurve(int i, SWIGTYPE_p_ForceVelocityInverseCurve value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_ForceVelocityInverseCurve__SWIG_0(swigCPtr, this, i, SWIGTYPE_p_ForceVelocityInverseCurve.getCPtr(value));
  }

  public int append_ForceVelocityInverseCurve(SWIGTYPE_p_ForceVelocityInverseCurve value) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_append_ForceVelocityInverseCurve(swigCPtr, this, SWIGTYPE_p_ForceVelocityInverseCurve.getCPtr(value));
  }

  public void constructProperty_ForceVelocityInverseCurve(SWIGTYPE_p_ForceVelocityInverseCurve initValue) {
    opensimModelJNI.Millard2012EquilibriumMuscle_constructProperty_ForceVelocityInverseCurve(swigCPtr, this, SWIGTYPE_p_ForceVelocityInverseCurve.getCPtr(initValue));
  }

  public SWIGTYPE_p_ForceVelocityInverseCurve get_ForceVelocityInverseCurve() {
    return new SWIGTYPE_p_ForceVelocityInverseCurve(opensimModelJNI.Millard2012EquilibriumMuscle_get_ForceVelocityInverseCurve__SWIG_1(swigCPtr, this), false);
  }

  public SWIGTYPE_p_ForceVelocityInverseCurve upd_ForceVelocityInverseCurve() {
    return new SWIGTYPE_p_ForceVelocityInverseCurve(opensimModelJNI.Millard2012EquilibriumMuscle_upd_ForceVelocityInverseCurve__SWIG_1(swigCPtr, this), false);
  }

  public void set_ForceVelocityInverseCurve(SWIGTYPE_p_ForceVelocityInverseCurve value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_ForceVelocityInverseCurve__SWIG_1(swigCPtr, this, SWIGTYPE_p_ForceVelocityInverseCurve.getCPtr(value));
  }

  public void setPropertyIndex_FiberForceLengthCurve(SWIGTYPE_p_PropertyIndex value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_FiberForceLengthCurve_set(swigCPtr, this, SWIGTYPE_p_PropertyIndex.getCPtr(value));
  }

  public SWIGTYPE_p_PropertyIndex getPropertyIndex_FiberForceLengthCurve() {
    return new SWIGTYPE_p_PropertyIndex(opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_FiberForceLengthCurve_get(swigCPtr, this), true);
  }

  public void copyProperty_FiberForceLengthCurve(Millard2012EquilibriumMuscle source) {
    opensimModelJNI.Millard2012EquilibriumMuscle_copyProperty_FiberForceLengthCurve(swigCPtr, this, Millard2012EquilibriumMuscle.getCPtr(source), source);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_FiberForceLengthCurve_t getProperty_FiberForceLengthCurve() {
    return new SWIGTYPE_p_OpenSim__PropertyT_FiberForceLengthCurve_t(opensimModelJNI.Millard2012EquilibriumMuscle_getProperty_FiberForceLengthCurve(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_FiberForceLengthCurve_t updProperty_FiberForceLengthCurve() {
    return new SWIGTYPE_p_OpenSim__PropertyT_FiberForceLengthCurve_t(opensimModelJNI.Millard2012EquilibriumMuscle_updProperty_FiberForceLengthCurve(swigCPtr, this), false);
  }

  public SWIGTYPE_p_FiberForceLengthCurve get_FiberForceLengthCurve(int i) {
    return new SWIGTYPE_p_FiberForceLengthCurve(opensimModelJNI.Millard2012EquilibriumMuscle_get_FiberForceLengthCurve__SWIG_0(swigCPtr, this, i), false);
  }

  public SWIGTYPE_p_FiberForceLengthCurve upd_FiberForceLengthCurve(int i) {
    return new SWIGTYPE_p_FiberForceLengthCurve(opensimModelJNI.Millard2012EquilibriumMuscle_upd_FiberForceLengthCurve__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_FiberForceLengthCurve(int i, SWIGTYPE_p_FiberForceLengthCurve value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_FiberForceLengthCurve__SWIG_0(swigCPtr, this, i, SWIGTYPE_p_FiberForceLengthCurve.getCPtr(value));
  }

  public int append_FiberForceLengthCurve(SWIGTYPE_p_FiberForceLengthCurve value) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_append_FiberForceLengthCurve(swigCPtr, this, SWIGTYPE_p_FiberForceLengthCurve.getCPtr(value));
  }

  public void constructProperty_FiberForceLengthCurve(SWIGTYPE_p_FiberForceLengthCurve initValue) {
    opensimModelJNI.Millard2012EquilibriumMuscle_constructProperty_FiberForceLengthCurve(swigCPtr, this, SWIGTYPE_p_FiberForceLengthCurve.getCPtr(initValue));
  }

  public SWIGTYPE_p_FiberForceLengthCurve get_FiberForceLengthCurve() {
    return new SWIGTYPE_p_FiberForceLengthCurve(opensimModelJNI.Millard2012EquilibriumMuscle_get_FiberForceLengthCurve__SWIG_1(swigCPtr, this), false);
  }

  public SWIGTYPE_p_FiberForceLengthCurve upd_FiberForceLengthCurve() {
    return new SWIGTYPE_p_FiberForceLengthCurve(opensimModelJNI.Millard2012EquilibriumMuscle_upd_FiberForceLengthCurve__SWIG_1(swigCPtr, this), false);
  }

  public void set_FiberForceLengthCurve(SWIGTYPE_p_FiberForceLengthCurve value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_FiberForceLengthCurve__SWIG_1(swigCPtr, this, SWIGTYPE_p_FiberForceLengthCurve.getCPtr(value));
  }

  public void setPropertyIndex_TendonForceLengthCurve(SWIGTYPE_p_PropertyIndex value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_TendonForceLengthCurve_set(swigCPtr, this, SWIGTYPE_p_PropertyIndex.getCPtr(value));
  }

  public SWIGTYPE_p_PropertyIndex getPropertyIndex_TendonForceLengthCurve() {
    return new SWIGTYPE_p_PropertyIndex(opensimModelJNI.Millard2012EquilibriumMuscle_PropertyIndex_TendonForceLengthCurve_get(swigCPtr, this), true);
  }

  public void copyProperty_TendonForceLengthCurve(Millard2012EquilibriumMuscle source) {
    opensimModelJNI.Millard2012EquilibriumMuscle_copyProperty_TendonForceLengthCurve(swigCPtr, this, Millard2012EquilibriumMuscle.getCPtr(source), source);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_TendonForceLengthCurve_t getProperty_TendonForceLengthCurve() {
    return new SWIGTYPE_p_OpenSim__PropertyT_TendonForceLengthCurve_t(opensimModelJNI.Millard2012EquilibriumMuscle_getProperty_TendonForceLengthCurve(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_TendonForceLengthCurve_t updProperty_TendonForceLengthCurve() {
    return new SWIGTYPE_p_OpenSim__PropertyT_TendonForceLengthCurve_t(opensimModelJNI.Millard2012EquilibriumMuscle_updProperty_TendonForceLengthCurve(swigCPtr, this), false);
  }

  public SWIGTYPE_p_TendonForceLengthCurve get_TendonForceLengthCurve(int i) {
    return new SWIGTYPE_p_TendonForceLengthCurve(opensimModelJNI.Millard2012EquilibriumMuscle_get_TendonForceLengthCurve__SWIG_0(swigCPtr, this, i), false);
  }

  public SWIGTYPE_p_TendonForceLengthCurve upd_TendonForceLengthCurve(int i) {
    return new SWIGTYPE_p_TendonForceLengthCurve(opensimModelJNI.Millard2012EquilibriumMuscle_upd_TendonForceLengthCurve__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_TendonForceLengthCurve(int i, SWIGTYPE_p_TendonForceLengthCurve value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_TendonForceLengthCurve__SWIG_0(swigCPtr, this, i, SWIGTYPE_p_TendonForceLengthCurve.getCPtr(value));
  }

  public int append_TendonForceLengthCurve(SWIGTYPE_p_TendonForceLengthCurve value) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_append_TendonForceLengthCurve(swigCPtr, this, SWIGTYPE_p_TendonForceLengthCurve.getCPtr(value));
  }

  public void constructProperty_TendonForceLengthCurve(SWIGTYPE_p_TendonForceLengthCurve initValue) {
    opensimModelJNI.Millard2012EquilibriumMuscle_constructProperty_TendonForceLengthCurve(swigCPtr, this, SWIGTYPE_p_TendonForceLengthCurve.getCPtr(initValue));
  }

  public SWIGTYPE_p_TendonForceLengthCurve get_TendonForceLengthCurve() {
    return new SWIGTYPE_p_TendonForceLengthCurve(opensimModelJNI.Millard2012EquilibriumMuscle_get_TendonForceLengthCurve__SWIG_1(swigCPtr, this), false);
  }

  public SWIGTYPE_p_TendonForceLengthCurve upd_TendonForceLengthCurve() {
    return new SWIGTYPE_p_TendonForceLengthCurve(opensimModelJNI.Millard2012EquilibriumMuscle_upd_TendonForceLengthCurve__SWIG_1(swigCPtr, this), false);
  }

  public void set_TendonForceLengthCurve(SWIGTYPE_p_TendonForceLengthCurve value) {
    opensimModelJNI.Millard2012EquilibriumMuscle_set_TendonForceLengthCurve__SWIG_1(swigCPtr, this, SWIGTYPE_p_TendonForceLengthCurve.getCPtr(value));
  }

  public Millard2012EquilibriumMuscle() {
    this(opensimModelJNI.new_Millard2012EquilibriumMuscle__SWIG_0(), true);
  }

  public Millard2012EquilibriumMuscle(String aName, double aMaxIsometricForce, double aOptimalFiberLength, double aTendonSlackLength, double aPennationAngle) {
    this(opensimModelJNI.new_Millard2012EquilibriumMuscle__SWIG_1(aName, aMaxIsometricForce, aOptimalFiberLength, aTendonSlackLength, aPennationAngle), true);
  }

  public double getTendonForceMultiplier(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_getTendonForceMultiplier(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel getFirstOrderActivationModel() {
    return new SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel(opensimModelJNI.Millard2012EquilibriumMuscle_getFirstOrderActivationModel(swigCPtr, this), false);
  }

  public SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel getSecondOrderActivationModel() {
    return new SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel(opensimModelJNI.Millard2012EquilibriumMuscle_getSecondOrderActivationModel(swigCPtr, this), false);
  }

  public SWIGTYPE_p_MuscleFixedWidthPennationModel getPennationModel() {
    return new SWIGTYPE_p_MuscleFixedWidthPennationModel(opensimModelJNI.Millard2012EquilibriumMuscle_getPennationModel(swigCPtr, this), false);
  }

  public SWIGTYPE_p_ActiveForceLengthCurve getActiveForceLengthCurve() {
    return new SWIGTYPE_p_ActiveForceLengthCurve(opensimModelJNI.Millard2012EquilibriumMuscle_getActiveForceLengthCurve(swigCPtr, this), false);
  }

  public SWIGTYPE_p_ForceVelocityInverseCurve getForceVelocityInverseCurve() {
    return new SWIGTYPE_p_ForceVelocityInverseCurve(opensimModelJNI.Millard2012EquilibriumMuscle_getForceVelocityInverseCurve(swigCPtr, this), false);
  }

  public SWIGTYPE_p_FiberForceLengthCurve getFiberForceLengthCurve() {
    return new SWIGTYPE_p_FiberForceLengthCurve(opensimModelJNI.Millard2012EquilibriumMuscle_getFiberForceLengthCurve(swigCPtr, this), false);
  }

  public SWIGTYPE_p_TendonForceLengthCurve getTendonForceLengthCurve() {
    return new SWIGTYPE_p_TendonForceLengthCurve(opensimModelJNI.Millard2012EquilibriumMuscle_getTendonForceLengthCurve(swigCPtr, this), false);
  }

  public double getFiberStiffnessAlongTendon(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_getFiberStiffnessAlongTendon(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getMinimumFiberLength() {
    return opensimModelJNI.Millard2012EquilibriumMuscle_getMinimumFiberLength(swigCPtr, this);
  }

  public double getMinimumFiberLengthAlongTendon() {
    return opensimModelJNI.Millard2012EquilibriumMuscle_getMinimumFiberLengthAlongTendon(swigCPtr, this);
  }

  public double getMinimumActivation() {
    return opensimModelJNI.Millard2012EquilibriumMuscle_getMinimumActivation(swigCPtr, this);
  }

  public double getMaximumPennationAngle() {
    return opensimModelJNI.Millard2012EquilibriumMuscle_getMaximumPennationAngle(swigCPtr, this);
  }

  public boolean getUseFiberDamping() {
    return opensimModelJNI.Millard2012EquilibriumMuscle_getUseFiberDamping(swigCPtr, this);
  }

  public boolean getUseSecondOrderActivationDynamics() {
    return opensimModelJNI.Millard2012EquilibriumMuscle_getUseSecondOrderActivationDynamics(swigCPtr, this);
  }

  public void setFirstOrderActivationModel(SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel aActivationMdl) {
    opensimModelJNI.Millard2012EquilibriumMuscle_setFirstOrderActivationModel(swigCPtr, this, SWIGTYPE_p_MuscleFirstOrderActivationDynamicModel.getCPtr(aActivationMdl));
  }

  public void setSecondOrderActivationModel(SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel aActivation2Mdl) {
    opensimModelJNI.Millard2012EquilibriumMuscle_setSecondOrderActivationModel(swigCPtr, this, SWIGTYPE_p_MuscleSecondOrderActivationDynamicModel.getCPtr(aActivation2Mdl));
  }

  public void setActiveForceLengthCurve(SWIGTYPE_p_ActiveForceLengthCurve aActiveForceLengthCurve) {
    opensimModelJNI.Millard2012EquilibriumMuscle_setActiveForceLengthCurve(swigCPtr, this, SWIGTYPE_p_ActiveForceLengthCurve.getCPtr(aActiveForceLengthCurve));
  }

  public void setForceVelocityInverseCurve(SWIGTYPE_p_ForceVelocityInverseCurve aForceVelocityInverseCurve) {
    opensimModelJNI.Millard2012EquilibriumMuscle_setForceVelocityInverseCurve(swigCPtr, this, SWIGTYPE_p_ForceVelocityInverseCurve.getCPtr(aForceVelocityInverseCurve));
  }

  public void setFiberForceLengthCurve(SWIGTYPE_p_FiberForceLengthCurve aFiberForceLengthCurve) {
    opensimModelJNI.Millard2012EquilibriumMuscle_setFiberForceLengthCurve(swigCPtr, this, SWIGTYPE_p_FiberForceLengthCurve.getCPtr(aFiberForceLengthCurve));
  }

  public void setTendonForceLengthCurve(SWIGTYPE_p_TendonForceLengthCurve aTendonForceLengthCurve) {
    opensimModelJNI.Millard2012EquilibriumMuscle_setTendonForceLengthCurve(swigCPtr, this, SWIGTYPE_p_TendonForceLengthCurve.getCPtr(aTendonForceLengthCurve));
  }

  public void setMuscleConfiguration(boolean ignoreTendonCompliance, boolean ignoreActivationDynamics, boolean useDamping, boolean useSecondOrderActivation) {
    opensimModelJNI.Millard2012EquilibriumMuscle_setMuscleConfiguration(swigCPtr, this, ignoreTendonCompliance, ignoreActivationDynamics, useDamping, useSecondOrderActivation);
  }

  public void setUseSecondOrderActivation(boolean use2ndOrderAct) {
    opensimModelJNI.Millard2012EquilibriumMuscle_setUseSecondOrderActivation(swigCPtr, this, use2ndOrderAct);
  }

  public double getDefaultActivation() {
    return opensimModelJNI.Millard2012EquilibriumMuscle_getDefaultActivation(swigCPtr, this);
  }

  public double getDefaultFiberLength() {
    return opensimModelJNI.Millard2012EquilibriumMuscle_getDefaultFiberLength(swigCPtr, this);
  }

  public double getActivationDerivative(SWIGTYPE_p_SimTK__State s, int order) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_getActivationDerivative(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), order);
  }

  public double getFiberVelocity(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_getFiberVelocity(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public void setDefaultActivation(double activation) {
    opensimModelJNI.Millard2012EquilibriumMuscle_setDefaultActivation(swigCPtr, this, activation);
  }

  public void setDefaultFiberLength(double fiberLength) {
    opensimModelJNI.Millard2012EquilibriumMuscle_setDefaultFiberLength(swigCPtr, this, fiberLength);
  }

  public void setActivation(SWIGTYPE_p_SimTK__State s, double activation) {
    opensimModelJNI.Millard2012EquilibriumMuscle_setActivation(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), activation);
  }

  public void setFiberLength(SWIGTYPE_p_SimTK__State s, double fiberLength) {
    opensimModelJNI.Millard2012EquilibriumMuscle_setFiberLength(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), fiberLength);
  }

  public ArrayStr getStateVariableNames() {
    return new ArrayStr(opensimModelJNI.Millard2012EquilibriumMuscle_getStateVariableNames(swigCPtr, this), true);
  }

  public SWIGTYPE_p_SimTK__SystemYIndex getStateVariableSystemIndex(String stateVariableName) {
    return new SWIGTYPE_p_SimTK__SystemYIndex(opensimModelJNI.Millard2012EquilibriumMuscle_getStateVariableSystemIndex(swigCPtr, this, stateVariableName), true);
  }

  public double computeActuation(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_computeActuation(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public void computeInitialFiberEquilibrium(SWIGTYPE_p_SimTK__State s) {
    opensimModelJNI.Millard2012EquilibriumMuscle_computeInitialFiberEquilibrium(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double calcActiveFiberForceAlongTendon(double activation, double fiberLength, double fiberVelocity) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_calcActiveFiberForceAlongTendon(swigCPtr, this, activation, fiberLength, fiberVelocity);
  }

  public double calcInextensibleTendonActiveFiberForce(SWIGTYPE_p_SimTK__State s, double aActivation) {
    return opensimModelJNI.Millard2012EquilibriumMuscle_calcInextensibleTendonActiveFiberForce(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), aActivation);
  }

}
