/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class PrescribedController extends Controller {
  private long swigCPtr;

  public PrescribedController(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.PrescribedController_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(PrescribedController obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimModelJNI.delete_PrescribedController(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public PrescribedController() {
    this(opensimModelJNI.new_PrescribedController__SWIG_0(), true);
  }

  public PrescribedController(Model aModel) {
    this(opensimModelJNI.new_PrescribedController__SWIG_1(Model.getCPtr(aModel), aModel), true);
  }

  public PrescribedController(String aFileName, boolean aUpdateFromXMLNode) {
    this(opensimModelJNI.new_PrescribedController__SWIG_2(aFileName, aUpdateFromXMLNode), true);
  }

  public PrescribedController(String aFileName) {
    this(opensimModelJNI.new_PrescribedController__SWIG_3(aFileName), true);
  }

  public PrescribedController(PrescribedController PrescribedController) {
    this(opensimModelJNI.new_PrescribedController__SWIG_4(PrescribedController.getCPtr(PrescribedController), PrescribedController), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.PrescribedController_copy__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public static boolean isKindOf(String type) {
    return opensimModelJNI.PrescribedController_isKindOf(type);
  }

  public boolean isA(String type) {
    return opensimModelJNI.PrescribedController_isA(swigCPtr, this, type);
  }

  public static PrescribedController safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelJNI.PrescribedController_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new PrescribedController(cPtr, false);
  }

  public void copy(OpenSimObject aObject) {
    opensimModelJNI.PrescribedController_copy__SWIG_1(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public void computeControls(SWIGTYPE_p_SimTK__State s, SWIGTYPE_p_SimTK__Vector controls) {
    opensimModelJNI.PrescribedController_computeControls(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), SWIGTYPE_p_SimTK__Vector.getCPtr(controls));
  }

  public void prescribeControlForActuator(int index, Function prescribedFunction) {
    opensimModelJNI.PrescribedController_prescribeControlForActuator__SWIG_0(swigCPtr, this, index, Function.getCPtr(prescribedFunction), prescribedFunction);
  }

  public void prescribeControlForActuator(String actName, Function prescribedFunction) {
    opensimModelJNI.PrescribedController_prescribeControlForActuator__SWIG_1(swigCPtr, this, actName, Function.getCPtr(prescribedFunction), prescribedFunction);
  }

}
