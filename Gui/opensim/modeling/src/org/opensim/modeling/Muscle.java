/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class Muscle extends PathActuator {
  private long swigCPtr;

  public Muscle(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.Muscle_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Muscle obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimModelJNI.delete_Muscle(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static Muscle safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelJNI.Muscle_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new Muscle(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimModelJNI.Muscle_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimModelJNI.Muscle_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimModelJNI.Muscle_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new Muscle(cPtr, false);
  }

  public String getConcreteClassName() {
    return opensimModelJNI.Muscle_getConcreteClassName(swigCPtr, this);
  }

  public double getMaxIsometricForce() {
    return opensimModelJNI.Muscle_getMaxIsometricForce(swigCPtr, this);
  }

  public void setMaxIsometricForce(double aMaxIsometricForce) {
    opensimModelJNI.Muscle_setMaxIsometricForce(swigCPtr, this, aMaxIsometricForce);
  }

  public double getOptimalFiberLength() {
    return opensimModelJNI.Muscle_getOptimalFiberLength(swigCPtr, this);
  }

  public void setOptimalFiberLength(double aOptimalFiberLength) {
    opensimModelJNI.Muscle_setOptimalFiberLength(swigCPtr, this, aOptimalFiberLength);
  }

  public double getTendonSlackLength() {
    return opensimModelJNI.Muscle_getTendonSlackLength(swigCPtr, this);
  }

  public void setTendonSlackLength(double aTendonSlackLength) {
    opensimModelJNI.Muscle_setTendonSlackLength(swigCPtr, this, aTendonSlackLength);
  }

  public double getPennationAngleAtOptimalFiberLength() {
    return opensimModelJNI.Muscle_getPennationAngleAtOptimalFiberLength(swigCPtr, this);
  }

  public void setPennationAngleAtOptimalFiberLength(double aPennationAngle) {
    opensimModelJNI.Muscle_setPennationAngleAtOptimalFiberLength(swigCPtr, this, aPennationAngle);
  }

  public double getMaxContractionVelocity() {
    return opensimModelJNI.Muscle_getMaxContractionVelocity(swigCPtr, this);
  }

  public void setMaxContractionVelocity(double aMaxContractionVelocity) {
    opensimModelJNI.Muscle_setMaxContractionVelocity(swigCPtr, this, aMaxContractionVelocity);
  }

  public boolean getIgnoreTendonCompliance(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getIgnoreTendonCompliance(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public void setIgnoreTendonCompliance(SWIGTYPE_p_SimTK__State s, boolean ignore) {
    opensimModelJNI.Muscle_setIgnoreTendonCompliance(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), ignore);
  }

  public boolean getIgnoreActivationDynamics(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getIgnoreActivationDynamics(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public void setIgnoreActivationDynamics(SWIGTYPE_p_SimTK__State s, boolean ignore) {
    opensimModelJNI.Muscle_setIgnoreActivationDynamics(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), ignore);
  }

  public double getActivation(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getActivation(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getFiberLength(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getFiberLength(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getPennationAngle(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getPennationAngle(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getTendonLength(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getTendonLength(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getNormalizedFiberLength(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getNormalizedFiberLength(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getFiberLengthAlongTendon(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getFiberLengthAlongTendon(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getTendonStrain(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getTendonStrain(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getFiberPotentialEnergy(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getFiberPotentialEnergy(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getTendonPotentialEnergy(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getTendonPotentialEnergy(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getMusclePotentialEnergy(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getMusclePotentialEnergy(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getPassiveForceMultiplier(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getPassiveForceMultiplier(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getActiveForceLengthMultiplier(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getActiveForceLengthMultiplier(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getFiberVelocity(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getFiberVelocity(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getNormalizedFiberVelocity(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getNormalizedFiberVelocity(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getFiberVelocityAlongTendon(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getFiberVelocityAlongTendon(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getPennationAngularVelocity(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getPennationAngularVelocity(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getTendonVelocity(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getTendonVelocity(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getForceVelocityMultiplier(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getForceVelocityMultiplier(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getFiberForce(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getFiberForce(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getActiveFiberForce(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getActiveFiberForce(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getPassiveFiberForce(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getPassiveFiberForce(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getActiveFiberForceAlongTendon(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getActiveFiberForceAlongTendon(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getPassiveFiberForceAlongTendon(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getPassiveFiberForceAlongTendon(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getTendonForce(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getTendonForce(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getFiberStiffness(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getFiberStiffness(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getTendonStiffness(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getTendonStiffness(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getMuscleStiffness(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getMuscleStiffness(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getFiberPower(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getFiberPower(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getTendonPower(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getTendonPower(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getMusclePower(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getMusclePower(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getStress(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getStress(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public void setExcitation(SWIGTYPE_p_SimTK__State s, double excitation) {
    opensimModelJNI.Muscle_setExcitation(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), excitation);
  }

  public double getExcitation(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_getExcitation(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public void setActivation(SWIGTYPE_p_SimTK__State s, double activation) {
    opensimModelJNI.Muscle_setActivation(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), activation);
  }

  public double computeActuation(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Muscle_computeActuation(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public void equilibrate(SWIGTYPE_p_SimTK__State s) {
    opensimModelJNI.Muscle_equilibrate(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public void updateFromXMLNode(SWIGTYPE_p_SimTK__Xml__Element aNode, int versionNumber) {
    opensimModelJNI.Muscle_updateFromXMLNode__SWIG_0(swigCPtr, this, SWIGTYPE_p_SimTK__Xml__Element.getCPtr(aNode), versionNumber);
  }

  public void updateFromXMLNode(SWIGTYPE_p_SimTK__Xml__Element aNode) {
    opensimModelJNI.Muscle_updateFromXMLNode__SWIG_1(swigCPtr, this, SWIGTYPE_p_SimTK__Xml__Element.getCPtr(aNode));
  }

}
