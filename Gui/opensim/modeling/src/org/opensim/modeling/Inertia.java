/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class Inertia {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public Inertia(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(Inertia obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimModelJNI.delete_Inertia(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Inertia() {
    this(opensimModelJNI.new_Inertia__SWIG_0(), true);
  }

  public Inertia(double moment) {
    this(opensimModelJNI.new_Inertia__SWIG_1(moment), true);
  }

  public Inertia(Vec3 p, double mass) {
    this(opensimModelJNI.new_Inertia__SWIG_2(Vec3.getCPtr(p), p, mass), true);
  }

  public Inertia(Vec3 moments, Vec3 products) {
    this(opensimModelJNI.new_Inertia__SWIG_3(Vec3.getCPtr(moments), moments, Vec3.getCPtr(products), products), true);
  }

  public Inertia(Vec3 moments) {
    this(opensimModelJNI.new_Inertia__SWIG_4(Vec3.getCPtr(moments), moments), true);
  }

  public Inertia(double xx, double yy, double zz) {
    this(opensimModelJNI.new_Inertia__SWIG_5(xx, yy, zz), true);
  }

  public Inertia(double xx, double yy, double zz, double xy, double xz, double yz) {
    this(opensimModelJNI.new_Inertia__SWIG_6(xx, yy, zz, xy, xz, yz), true);
  }

  public Vec3 getMoments() {
    return new Vec3(opensimModelJNI.Inertia_getMoments(swigCPtr, this), false);
  }

  public Vec3 getProducts() {
    return new Vec3(opensimModelJNI.Inertia_getProducts(swigCPtr, this), false);
  }

  public boolean isNaN() {
    return opensimModelJNI.Inertia_isNaN(swigCPtr, this);
  }

  public boolean isInf() {
    return opensimModelJNI.Inertia_isInf(swigCPtr, this);
  }

  public boolean isFinite() {
    return opensimModelJNI.Inertia_isFinite(swigCPtr, this);
  }

}
