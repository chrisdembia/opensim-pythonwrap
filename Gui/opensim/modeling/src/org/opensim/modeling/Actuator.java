/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class Actuator extends Actuator_ {
  private long swigCPtr;

  public Actuator(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.Actuator_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Actuator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimModelJNI.delete_Actuator(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static Actuator safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelJNI.Actuator_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new Actuator(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimModelJNI.Actuator_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimModelJNI.Actuator_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimModelJNI.Actuator_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new Actuator(cPtr, false);
  }

  public String getConcreteClassName() {
    return opensimModelJNI.Actuator_getConcreteClassName(swigCPtr, this);
  }

  public void setPropertyIndex_min_control(SWIGTYPE_p_PropertyIndex value) {
    opensimModelJNI.Actuator_PropertyIndex_min_control_set(swigCPtr, this, SWIGTYPE_p_PropertyIndex.getCPtr(value));
  }

  public SWIGTYPE_p_PropertyIndex getPropertyIndex_min_control() {
    return new SWIGTYPE_p_PropertyIndex(opensimModelJNI.Actuator_PropertyIndex_min_control_get(swigCPtr, this), true);
  }

  public void copyProperty_min_control(Actuator source) {
    opensimModelJNI.Actuator_copyProperty_min_control(swigCPtr, this, Actuator.getCPtr(source), source);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_double_t getProperty_min_control() {
    return new SWIGTYPE_p_OpenSim__PropertyT_double_t(opensimModelJNI.Actuator_getProperty_min_control(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_double_t updProperty_min_control() {
    return new SWIGTYPE_p_OpenSim__PropertyT_double_t(opensimModelJNI.Actuator_updProperty_min_control(swigCPtr, this), false);
  }

  public double get_min_control(int i) {
    return opensimModelJNI.Actuator_get_min_control__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_min_control(int i) {
    return new SWIGTYPE_p_double(opensimModelJNI.Actuator_upd_min_control__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_min_control(int i, double value) {
    opensimModelJNI.Actuator_set_min_control__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_min_control(double value) {
    return opensimModelJNI.Actuator_append_min_control(swigCPtr, this, value);
  }

  public void constructProperty_min_control(double initValue) {
    opensimModelJNI.Actuator_constructProperty_min_control(swigCPtr, this, initValue);
  }

  public double get_min_control() {
    return opensimModelJNI.Actuator_get_min_control__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_min_control() {
    return new SWIGTYPE_p_double(opensimModelJNI.Actuator_upd_min_control__SWIG_1(swigCPtr, this), false);
  }

  public void set_min_control(double value) {
    opensimModelJNI.Actuator_set_min_control__SWIG_1(swigCPtr, this, value);
  }

  public void setPropertyIndex_max_control(SWIGTYPE_p_PropertyIndex value) {
    opensimModelJNI.Actuator_PropertyIndex_max_control_set(swigCPtr, this, SWIGTYPE_p_PropertyIndex.getCPtr(value));
  }

  public SWIGTYPE_p_PropertyIndex getPropertyIndex_max_control() {
    return new SWIGTYPE_p_PropertyIndex(opensimModelJNI.Actuator_PropertyIndex_max_control_get(swigCPtr, this), true);
  }

  public void copyProperty_max_control(Actuator source) {
    opensimModelJNI.Actuator_copyProperty_max_control(swigCPtr, this, Actuator.getCPtr(source), source);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_double_t getProperty_max_control() {
    return new SWIGTYPE_p_OpenSim__PropertyT_double_t(opensimModelJNI.Actuator_getProperty_max_control(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__PropertyT_double_t updProperty_max_control() {
    return new SWIGTYPE_p_OpenSim__PropertyT_double_t(opensimModelJNI.Actuator_updProperty_max_control(swigCPtr, this), false);
  }

  public double get_max_control(int i) {
    return opensimModelJNI.Actuator_get_max_control__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_max_control(int i) {
    return new SWIGTYPE_p_double(opensimModelJNI.Actuator_upd_max_control__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_max_control(int i, double value) {
    opensimModelJNI.Actuator_set_max_control__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_max_control(double value) {
    return opensimModelJNI.Actuator_append_max_control(swigCPtr, this, value);
  }

  public void constructProperty_max_control(double initValue) {
    opensimModelJNI.Actuator_constructProperty_max_control(swigCPtr, this, initValue);
  }

  public double get_max_control() {
    return opensimModelJNI.Actuator_get_max_control__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_max_control() {
    return new SWIGTYPE_p_double(opensimModelJNI.Actuator_upd_max_control__SWIG_1(swigCPtr, this), false);
  }

  public void set_max_control(double value) {
    opensimModelJNI.Actuator_set_max_control__SWIG_1(swigCPtr, this, value);
  }

  public double getControl(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Actuator_getControl(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public int numControls() {
    return opensimModelJNI.Actuator_numControls(swigCPtr, this);
  }

  public void setForce(SWIGTYPE_p_SimTK__State s, double aForce) {
    opensimModelJNI.Actuator_setForce(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), aForce);
  }

  public double getForce(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Actuator_getForce(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public void setSpeed(SWIGTYPE_p_SimTK__State s, double aspeed) {
    opensimModelJNI.Actuator_setSpeed(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), aspeed);
  }

  public double getSpeed(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Actuator_getSpeed(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getPower(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Actuator_getPower(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getStress(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Actuator_getStress(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public double getOptimalForce() {
    return opensimModelJNI.Actuator_getOptimalForce(swigCPtr, this);
  }

  public void setMinControl(double aMinControl) {
    opensimModelJNI.Actuator_setMinControl(swigCPtr, this, aMinControl);
  }

  public double getMinControl() {
    return opensimModelJNI.Actuator_getMinControl(swigCPtr, this);
  }

  public void setMaxControl(double aMaxControl) {
    opensimModelJNI.Actuator_setMaxControl(swigCPtr, this, aMaxControl);
  }

  public double getMaxControl() {
    return opensimModelJNI.Actuator_getMaxControl(swigCPtr, this);
  }

  public void overrideForce(SWIGTYPE_p_SimTK__State s, boolean flag) {
    opensimModelJNI.Actuator_overrideForce(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), flag);
  }

  public boolean isForceOverriden(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Actuator_isForceOverriden(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

  public void setOverrideForce(SWIGTYPE_p_SimTK__State s, double value) {
    opensimModelJNI.Actuator_setOverrideForce(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), value);
  }

  public double getOverrideForce(SWIGTYPE_p_SimTK__State s) {
    return opensimModelJNI.Actuator_getOverrideForce(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s));
  }

}
