/*
 * CreateLabDialog.java
 *
 * Created on August 10, 2010, 7:21 PM
 */

package org.opensim.k12utils;

import java.beans.XMLDecoder;
import java.beans.XMLEncoder;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Hashtable;
import javax.swing.DefaultListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.opensim.k12.Lab;
import org.opensim.k12.LabOutput;
import org.opensim.k12.LabOutputsNode;
import org.opensim.k12.LabParameter;
import org.opensim.k12.LabParametersNode;
import org.opensim.modeling.Model;
import org.opensim.tools.serializers.ToolSerializer;
import org.opensim.utils.FileUtils;
import org.opensim.utils.TheApp;
import org.opensim.view.pub.OpenSimDB;
import org.opensim.view.pub.OpenSimDBDescriptor;

/**
 *
 * @author  ayman
 */
public class EditLabDialog extends javax.swing.JDialog implements ListSelectionListener{
    
    Lab lab;
    DefaultListModel inputListModel;
    DefaultListModel outputListModel;
    /** Creates new form CreateLabDialog */
    public EditLabDialog(String fileName) throws FileNotFoundException {
        super(TheApp.getAppFrame(), true);
        setTitle("Editing "+fileName);
         XMLDecoder decoder = new XMLDecoder(new BufferedInputStream(
                           new FileInputStream(fileName)));
        lab= (Lab)decoder.readObject();
        initComponents();
        populateTextFields();
        populateListModels();
        inputsList.addListSelectionListener(this);
        outputsList.addListSelectionListener(this);
        valueChanged(null);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        ModelSelectionbuttonGroup = new javax.swing.ButtonGroup();
        MotionSelectionbuttonGroup = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        addOutputPanel = new javax.swing.JPanel();
        labParameter1 = new org.opensim.k12.LabParameter();
        fileTextFieldAndChooser3 = new org.opensim.swingui.FileTextFieldAndChooser();
        motionSpecPanel = new javax.swing.JPanel();
        useCurrentMotionRadioButton = new javax.swing.JRadioButton();
        browseForMotionRadioButton = new javax.swing.JRadioButton();
        fileTextFieldAndChooser2 = new org.opensim.swingui.FileTextFieldAndChooser();
        noMotionRadioButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        labNameLabel = new javax.swing.JLabel();
        toolSpecPanel = new javax.swing.JPanel();
        toolSetupTextFieldAndChooser = new org.opensim.swingui.FileTextFieldAndChooser();
        jLabel3 = new javax.swing.JLabel();
        labNameTextField = new javax.swing.JTextField();
        modelSpecPanel = new javax.swing.JPanel();
        modelFileTextFieldAndChooser = new org.opensim.swingui.FileTextFieldAndChooser();
        useCurrentModelRadioButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        browseForModelRadioButton = new javax.swing.JRadioButton();
        inputsPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        inputsScrollPane = new javax.swing.JScrollPane();
        inputsList = new javax.swing.JList();
        addButton = new javax.swing.JButton();
        delButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        saveLabButton = new javax.swing.JButton();
        onputsPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        onputsScrollPane = new javax.swing.JScrollPane();
        outputsList = new javax.swing.JList();
        addButton1 = new javax.swing.JButton();
        delButton1 = new javax.swing.JButton();
        editButton1 = new javax.swing.JButton();
        instructionsPanel = new javax.swing.JPanel();
        instructionsTextFieldAndChooser = new org.opensim.swingui.FileTextFieldAndChooser();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jRunButtonTextField = new javax.swing.JTextField();

        jLabel5.setText("Instructions file");
        org.jdesktop.layout.GroupLayout addOutputPanelLayout = new org.jdesktop.layout.GroupLayout(addOutputPanel);
        addOutputPanel.setLayout(addOutputPanelLayout);
        addOutputPanelLayout.setHorizontalGroup(
            addOutputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );
        addOutputPanelLayout.setVerticalGroup(
            addOutputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        motionSpecPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        MotionSelectionbuttonGroup.add(useCurrentMotionRadioButton);
        useCurrentMotionRadioButton.setText("Use Current");
        useCurrentMotionRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        useCurrentMotionRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));

        MotionSelectionbuttonGroup.add(browseForMotionRadioButton);
        browseForMotionRadioButton.setText("Browse");
        browseForMotionRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        browseForMotionRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));

        fileTextFieldAndChooser2.setFileFilter(FileUtils.getFileFilter(".mot", "Motion file to load"));

        MotionSelectionbuttonGroup.add(noMotionRadioButton);
        noMotionRadioButton.setSelected(true);
        noMotionRadioButton.setText("No Motion Needed");
        noMotionRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        noMotionRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel2.setText("Motion:");

        org.jdesktop.layout.GroupLayout motionSpecPanelLayout = new org.jdesktop.layout.GroupLayout(motionSpecPanel);
        motionSpecPanel.setLayout(motionSpecPanelLayout);
        motionSpecPanelLayout.setHorizontalGroup(
            motionSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(motionSpecPanelLayout.createSequentialGroup()
                .add(motionSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(motionSpecPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(browseForMotionRadioButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(fileTextFieldAndChooser2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE))
                    .add(jLabel2)
                    .add(motionSpecPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(noMotionRadioButton))
                    .add(motionSpecPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(useCurrentMotionRadioButton)))
                .addContainerGap())
        );
        motionSpecPanelLayout.setVerticalGroup(
            motionSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, motionSpecPanelLayout.createSequentialGroup()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(noMotionRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(useCurrentMotionRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(motionSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(fileTextFieldAndChooser2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(browseForMotionRadioButton))
                .add(62, 62, 62))
        );

        labNameLabel.setText("Lab Name:");

        toolSpecPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        toolSetupTextFieldAndChooser.setFileFilter(FileUtils.getFileFilter(".xml", "Setup file to run tool"));

        jLabel3.setText("Tool setup file");

        org.jdesktop.layout.GroupLayout toolSpecPanelLayout = new org.jdesktop.layout.GroupLayout(toolSpecPanel);
        toolSpecPanel.setLayout(toolSpecPanelLayout);
        toolSpecPanelLayout.setHorizontalGroup(
            toolSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(toolSpecPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel3)
                .add(12, 12, 12)
                .add(toolSetupTextFieldAndChooser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addContainerGap())
        );
        toolSpecPanelLayout.setVerticalGroup(
            toolSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, toolSpecPanelLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(toolSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(toolSetupTextFieldAndChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .addContainerGap())
        );

        labNameTextField.setToolTipText("labName: Shows as wdinow title");

        modelSpecPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        modelFileTextFieldAndChooser.setCheckIfFileExists(true);
        modelFileTextFieldAndChooser.setFileFilter(FileUtils.getFileFilter(".osim", "Model file to load"));

        ModelSelectionbuttonGroup.add(useCurrentModelRadioButton);
        useCurrentModelRadioButton.setSelected(true);
        useCurrentModelRadioButton.setText("Use Current");
        useCurrentModelRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        useCurrentModelRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel1.setText("Model File:");

        ModelSelectionbuttonGroup.add(browseForModelRadioButton);
        browseForModelRadioButton.setText("Browse");
        browseForModelRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        browseForModelRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout modelSpecPanelLayout = new org.jdesktop.layout.GroupLayout(modelSpecPanel);
        modelSpecPanel.setLayout(modelSpecPanelLayout);
        modelSpecPanelLayout.setHorizontalGroup(
            modelSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(modelSpecPanelLayout.createSequentialGroup()
                .add(modelSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(modelSpecPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(browseForModelRadioButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(modelFileTextFieldAndChooser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE))
                    .add(modelSpecPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(useCurrentModelRadioButton)))
                .addContainerGap())
        );
        modelSpecPanelLayout.setVerticalGroup(
            modelSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(modelSpecPanelLayout.createSequentialGroup()
                .add(jLabel1)
                .add(7, 7, 7)
                .add(useCurrentModelRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(modelSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(modelFileTextFieldAndChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(browseForModelRadioButton))
                .addContainerGap())
        );

        inputsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel4.setText("Inputs");

        inputsScrollPane.setViewportView(inputsList);

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        delButton.setText("Del");
        delButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout inputsPanelLayout = new org.jdesktop.layout.GroupLayout(inputsPanel);
        inputsPanel.setLayout(inputsPanelLayout);
        inputsPanelLayout.setHorizontalGroup(
            inputsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(inputsPanelLayout.createSequentialGroup()
                .add(jLabel4)
                .add(18, 18, 18)
                .add(inputsScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(editButton, 0, 0, Short.MAX_VALUE)
                    .add(delButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(addButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        inputsPanelLayout.setVerticalGroup(
            inputsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(inputsPanelLayout.createSequentialGroup()
                .add(37, 37, 37)
                .add(jLabel4)
                .addContainerGap(71, Short.MAX_VALUE))
            .add(inputsPanelLayout.createSequentialGroup()
                .add(inputsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(inputsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(inputsScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, inputsPanelLayout.createSequentialGroup()
                        .add(19, 19, 19)
                        .add(addButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(editButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(delButton)))
                .addContainerGap())
        );

        saveLabButton.setText("Save...");
        saveLabButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveLabButtonActionPerformed(evt);
            }
        });

        onputsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel6.setText("Outputs   ");

        onputsScrollPane.setViewportView(outputsList);

        addButton1.setText("Add");
        addButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButton1ActionPerformed(evt);
            }
        });

        delButton1.setText("Del");
        delButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delButton1ActionPerformed(evt);
            }
        });

        editButton1.setText("Edit");
        editButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout onputsPanelLayout = new org.jdesktop.layout.GroupLayout(onputsPanel);
        onputsPanel.setLayout(onputsPanelLayout);
        onputsPanelLayout.setHorizontalGroup(
            onputsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(onputsPanelLayout.createSequentialGroup()
                .add(jLabel6)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(onputsScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(onputsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(addButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(editButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(delButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        onputsPanelLayout.setVerticalGroup(
            onputsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(onputsPanelLayout.createSequentialGroup()
                .add(37, 37, 37)
                .add(jLabel6)
                .addContainerGap(50, Short.MAX_VALUE))
            .add(onputsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(addButton1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(editButton1)
                .add(4, 4, 4)
                .add(delButton1)
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, onputsScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
        );

        instructionsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        instructionsTextFieldAndChooser.setFileFilter(FileUtils.getFileFilter(".html", "Html file with instructions. Will show in a separate window"));

        jLabel7.setText("Instructions file");

        org.jdesktop.layout.GroupLayout instructionsPanelLayout = new org.jdesktop.layout.GroupLayout(instructionsPanel);
        instructionsPanel.setLayout(instructionsPanelLayout);
        instructionsPanelLayout.setHorizontalGroup(
            instructionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(instructionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel7)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(instructionsTextFieldAndChooser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                .addContainerGap())
        );
        instructionsPanelLayout.setVerticalGroup(
            instructionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, instructionsPanelLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(instructionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel7)
                    .add(instructionsTextFieldAndChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel8.setText("Run button label");

        jRunButtonTextField.setText(" ");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel8)
                .add(5, 5, 5)
                .add(jRunButtonTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 203, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(23, 23, 23)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jRunButtonTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel8))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, inputsPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(motionSpecPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(modelSpecPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(labNameLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(labNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 199, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, instructionsPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, toolSpecPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, onputsPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(161, 161, 161)
                        .add(saveLabButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labNameLabel)
                    .add(labNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(modelSpecPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(motionSpecPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(instructionsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(toolSpecPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(onputsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(saveLabButton)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void delButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delButton1ActionPerformed
       LabOutput selected = (LabOutput) outputsList.getSelectedValue();
       ((LabOutputsNode)lab.getObject(Lab.OUTPUTS)).getOutputs().remove(selected);
       outputListModel.removeElement(selected);
// TODO add your handling code here:
    }//GEN-LAST:event_delButton1ActionPerformed

    private void editButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButton1ActionPerformed
       LabOutput selected = (LabOutput) outputsList.getSelectedValue();
       EditOutputTextPanel editOutputPanel = new EditOutputTextPanel(selected);
       DialogDescriptor dlg = new DialogDescriptor(editOutputPanel,"Edit Output");
       dlg.setClosingOptions(null);
       dlg.setModal(true);
       DialogDisplayer.getDefault().createDialog(dlg).setVisible(true);
       Object userInput = dlg.getValue();
       if (((Integer)userInput).compareTo((Integer)DialogDescriptor.OK_OPTION)==0){
           ((LabOutputsNode)lab.getObject(Lab.OUTPUTS)).getOutputs().remove(selected);
           outputListModel.removeElement(selected);
           ((LabOutputsNode)lab.getObject(Lab.OUTPUTS)).addOutput(editOutputPanel.getOutputDescription());
           outputListModel.addElement(editOutputPanel.getOutputDescription());
       }
// TODO add your handling code here:
    }//GEN-LAST:event_editButton1ActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
// TODO add your handling code here:
       LabParameter selected = (LabParameter) inputsList.getSelectedValue();
       EditInputPanel editInputPanel = new EditInputPanel(selected);
       DialogDescriptor dlg = new DialogDescriptor(editInputPanel,"Edit Input");
       dlg.setClosingOptions(null);
       dlg.setModal(true);
       DialogDisplayer.getDefault().createDialog(dlg).setVisible(true);
       Object userInput = dlg.getValue();
       if (((Integer)userInput).compareTo((Integer)DialogDescriptor.OK_OPTION)==0){
           //((LabParametersNode)lab.getObject(Lab.INPUTS)).addParameter(editInputPanel.getParm());
           editInputPanel.getParm();
       }
        
    }//GEN-LAST:event_editButtonActionPerformed

    private void addButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButton1ActionPerformed
       AddOutputTextPanel createOutputPanel = new AddOutputTextPanel();
       DialogDescriptor dlg = new DialogDescriptor(createOutputPanel,"Add Output");
       dlg.setClosingOptions(null);
       dlg.setModal(true);
       DialogDisplayer.getDefault().createDialog(dlg).setVisible(true);
       Object userInput = dlg.getValue();
       if (((Integer)userInput).compareTo((Integer)DialogDescriptor.OK_OPTION)==0){
           ((LabOutputsNode)lab.getObject(Lab.OUTPUTS)).addOutput(createOutputPanel.getOutputDescription());
           outputListModel.addElement(createOutputPanel.getOutputDescription());
       }
// TODO add your handling code here:
    }//GEN-LAST:event_addButton1ActionPerformed

    private void delButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delButtonActionPerformed
// TODO add your handling code here:
        Object obj=inputsList.getSelectedValue();
        LabParameter p = (LabParameter)obj;
        ((LabParametersNode)lab.getObject(Lab.INPUTS)).removeParameter(p);
        inputListModel.removeElement(p);
    }//GEN-LAST:event_delButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
// TODO add your handling code here:
        
       AddInputPanel createInputPanel = new AddInputPanel();
       DialogDescriptor dlg = new DialogDescriptor(createInputPanel,"Add Input");
       dlg.setClosingOptions(null);
       dlg.setModal(true);
       DialogDisplayer.getDefault().createDialog(dlg).setVisible(true);
       Object userInput = dlg.getValue();
       if (((Integer)userInput).compareTo((Integer)DialogDescriptor.OK_OPTION)==0){
           ((LabParametersNode)lab.getObject(Lab.INPUTS)).addParameter(createInputPanel.getParm());
           inputListModel.addElement(createInputPanel.getParm());
       }
    }//GEN-LAST:event_addButtonActionPerformed

    private void saveLabButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveLabButtonActionPerformed
// TODO add your handling code here:
        // Create a Lab object and write it to the specified file
        String fileName = FileUtils.getInstance().browseForFilenameToSave(
                FileUtils.getFileFilter(".oscript", "Script file"),
                true,
                "lab.oscript");
        if (fileName!= null) 
            try {saveLabToFile(fileName);
            } catch (FileNotFoundException ex) {
                  NotifyDescriptor.Message dlg =
                          new NotifyDescriptor.Message("Failed to save lab to file.. Existing.");
                  DialogDisplayer.getDefault().notify(dlg);
                ex.printStackTrace();
             } catch (IOException ex) {
                  NotifyDescriptor.Message dlg =
                          new NotifyDescriptor.Message("Missing file specified, please fix before saving Lab to file.. Existing.");
                  DialogDisplayer.getDefault().notify(dlg);
                ex.printStackTrace();
                
            }
    }//GEN-LAST:event_saveLabButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateLabDialog(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }

    private void saveLabToFile(String fileName) throws FileNotFoundException, IOException {
        XMLEncoder encoder = new XMLEncoder(new BufferedOutputStream(
                new FileOutputStream(fileName)));
        Hashtable<String, Object>  objects = lab.getStateObjects();
        objects.put(lab.LAB_NAME, labNameTextField.getText());
        if (useCurrentModelRadioButton.isSelected())
            objects.put(lab.DB, new OpenSimDBDescriptor(OpenSimDB.getInstance()));
        else if (browseForModelRadioButton.isSelected()){
            Object[] allModels=OpenSimDB.getInstance().getAllModels();
            boolean found = false;
            for(int i=0; i<allModels.length && !found; i++){
                Model nextModel = (Model)allModels[i];
                found= (nextModel.getInputFileName().equals(modelFileTextFieldAndChooser.getFileName()));
            }
            if (!found){
                Model loadModel = new Model(modelFileTextFieldAndChooser.getFileName());
                OpenSimDB.getInstance().addModel(loadModel);
                objects.put(lab.DB, new OpenSimDBDescriptor(OpenSimDB.getInstance()));
                OpenSimDB.getInstance().removeModel(loadModel);
            }
            else
                objects.put(lab.DB, new OpenSimDBDescriptor(OpenSimDB.getInstance()));
        }
        /*
        ButtonModel bModel=MotionSelectionbuttonGroup.getSelection();
        if (bModel.getActionCommand().equals(noMotionRadioButton.getActionCommand())){
            // No motions required
        }
        else if (MotionSelectionbuttonGroup.getSelection().getActionCommand().equals(useCurrentMotionRadioButton.getActionCommand())){
            // Current motion
            objects.put(lab.MOTIONS, new MotionsDBDescriptor(MotionsDB.getInstance()));
        }*/
        String label  =jRunButtonTextField.getText();
        objects.put(lab.RUN_LABEL, (label.length()==0?"Run...":label));
        ToolSerializer ts = new ToolSerializer();
        ts.setSetupFile(toolSetupTextFieldAndChooser.getFileName());
        objects.put(lab.TOOL, ts);
        /*
        LabOutputsNode outs = new LabOutputsNode();
        LabOutputTextToPanel lot = new LabOutputTextToPanel();
        lot.setHtmlTemplate("HTMLString");
        lot.setQuantitySpecfication("Analysis.StorageName.columnName");        
        outs.addOutput(lot);
        LabOutputPlot lop = new LabOutputPlot();
        lop.setPlotTitle("dTitle");
        lop.setXAxisTitle("dXTitle");
        lop.setYAxisTitle("dYTitle");
        outs.addOutput(lop);
         **/
        encoder.writeObject(lab); // This method serializes an object graph
        encoder.close();
        
    }

    private void populateListModels() {
        LabParametersNode params = (LabParametersNode)lab.getObject(Lab.INPUTS);
        if (params==null){
            params = new LabParametersNode();
            lab.addObject(Lab.INPUTS, params);
        }
        ArrayList<LabParameter> parms=params.getParameters();
        inputListModel = new DefaultListModel();
        for (int i=0; i<parms.size(); i++) 
            inputListModel.addElement(parms.get(i));
        inputsList.setModel(inputListModel);
        
        LabOutputsNode outs = (LabOutputsNode)lab.getObject(Lab.OUTPUTS);
        if (outs==null){
            outs = new LabOutputsNode();
            lab.addObject(Lab.OUTPUTS, outs);
        }
        ArrayList<LabOutput> outputs=outs.getOutputs();
        outputListModel = new DefaultListModel();
        for (int i=0; i<outputs.size(); i++) 
            outputListModel.addElement(outputs.get(i));
        outputsList.setModel(outputListModel);
        
    }

    private void populateTextFields() {
        String temp = (String)lab.getObject(lab.LAB_NAME);
        if (temp!=null) labNameTextField.setText(temp);
        temp = (String)lab.getObject(lab.RUN_LABEL);
        if (temp!=null) jRunButtonTextField.setText(temp);
        temp = (String)lab.getObject(lab.INSTRUCTIONS);
        if (temp!=null) instructionsTextFieldAndChooser.setFileName(temp);
        ToolSerializer ts = (ToolSerializer)lab.getObject(lab.TOOL);
        if (ts!=null) toolSetupTextFieldAndChooser.setFileName(ts.getSetupFile());
        OpenSimDBDescriptor db = (OpenSimDBDescriptor) lab.getObject(lab.DB);
        if (db!=null){
            // Not using current model
            browseForModelRadioButton.setSelected(true);
            modelFileTextFieldAndChooser.setFileName(db.getFileNames().get(0));
        }
    }

    public void valueChanged(ListSelectionEvent e) {
        // For both inputs and outputs list we
        //  enable Edit iff one item is selected,
        //  enable Delete iff one or more items are selected
        delButton.setEnabled(inputsList.getSelectedIndices().length ==1);
        editButton.setEnabled(inputsList.getSelectedIndices().length ==1);
        delButton1.setEnabled(outputsList.getSelectedIndices().length ==1);
        editButton1.setEnabled(outputsList.getSelectedIndices().length ==1);
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup ModelSelectionbuttonGroup;
    private javax.swing.ButtonGroup MotionSelectionbuttonGroup;
    private javax.swing.JButton addButton;
    private javax.swing.JButton addButton1;
    private javax.swing.JPanel addOutputPanel;
    private javax.swing.JRadioButton browseForModelRadioButton;
    private javax.swing.JRadioButton browseForMotionRadioButton;
    private javax.swing.JButton delButton;
    private javax.swing.JButton delButton1;
    private javax.swing.JButton editButton;
    private javax.swing.JButton editButton1;
    private org.opensim.swingui.FileTextFieldAndChooser fileTextFieldAndChooser2;
    private org.opensim.swingui.FileTextFieldAndChooser fileTextFieldAndChooser3;
    private javax.swing.JList inputsList;
    private javax.swing.JPanel inputsPanel;
    private javax.swing.JScrollPane inputsScrollPane;
    private javax.swing.JPanel instructionsPanel;
    private org.opensim.swingui.FileTextFieldAndChooser instructionsTextFieldAndChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jRunButtonTextField;
    private javax.swing.JLabel labNameLabel;
    private javax.swing.JTextField labNameTextField;
    private org.opensim.k12.LabParameter labParameter1;
    private org.opensim.swingui.FileTextFieldAndChooser modelFileTextFieldAndChooser;
    private javax.swing.JPanel modelSpecPanel;
    private javax.swing.JPanel motionSpecPanel;
    private javax.swing.JRadioButton noMotionRadioButton;
    private javax.swing.JPanel onputsPanel;
    private javax.swing.JScrollPane onputsScrollPane;
    private javax.swing.JList outputsList;
    private javax.swing.JButton saveLabButton;
    private org.opensim.swingui.FileTextFieldAndChooser toolSetupTextFieldAndChooser;
    private javax.swing.JPanel toolSpecPanel;
    private javax.swing.JRadioButton useCurrentModelRadioButton;
    private javax.swing.JRadioButton useCurrentMotionRadioButton;
    // End of variables declaration//GEN-END:variables
    
}
