<?xml version="1.0" encoding="UTF-8"?>
<OpenSimDocument Version="10600">
	<CMCTool name="block_hanging_from_muscle">
		<!--Name of the .osim file used to construct a model.-->
		<model_file> block_hanging_from_muscle.osim </model_file>
		<!--Replace the model's actuator set with sets specified in
			<actuator_set_files>? If false, the actuator set is appended to.-->
		<replace_actuator_set> false </replace_actuator_set>
		<!--List of xml files used to construct an actuator set for the model.-->
		<actuator_set_files> </actuator_set_files>
		<!--Directory used for writing results.-->
		<results_directory> CMCResultsSTATIC </results_directory>
		<!--Output precision.  It is 20 by default.-->
		<output_precision> 20 </output_precision>
		<!--Initial time for the simulation.-->
		<initial_time>       0.00000000000000000000 </initial_time>
		<!--Final time for the simulation.-->
		<final_time>      5.00000000000000000000 </final_time>
		<!--Maximum number of integrator steps.-->
		<maximum_number_of_integrator_steps> 30000 </maximum_number_of_integrator_steps>
		<!--Maximum integration step size.-->
		<maximum_integrator_step_size>       0.001000000000000000000 </maximum_integrator_step_size>
		<!--Minimum integration step size.-->
		<minimum_integrator_step_size>       0.0000000001000000000000 </minimum_integrator_step_size>
		<!--Integrator error tolerance. When the error is greater, the integrator
			step size is decreased.-->
		<integrator_error_tolerance>       1e-006 </integrator_error_tolerance>
		<!--Integrator fine tolerance. When the error is less, the integrator step
			size is increased.-->
		<integrator_fine_tolerance>       1e-008 </integrator_fine_tolerance>
		<!--Set of analyses to be run during the investigation.-->
		<AnalysisSet name="Analyses">
		 <objects>
			<Kinematics name="Kinematics">
				<!--Flag (true or false) specifying whether whether on. True by default.-->
				<on> true </on>
				<!--Specifies how often to store results during a simulation. More
					specifically, the interval (a positive integer) specifies how many
					successful integration steps should be taken before results are
					recorded again.-->
				<step_interval> 15 </step_interval>
				<!--Flag (true or false) indicating whether the results are in degrees or
					not.-->
				<in_degrees> true </in_degrees>
			</Kinematics>
			<Actuation name="Actuation">
				<!--Flag (true or false) specifying whether whether on. True by default.-->
				<on> true </on>
				<!--Specifies how often to store results during a simulation. More
					specifically, the interval (a positive integer) specifies how many
					successful integration steps should be taken before results are
					recorded again.-->
				<step_interval> 15 </step_interval>
				<!--Flag (true or false) indicating whether the results are in degrees or
					not.-->
				<in_degrees> true </in_degrees>
			</Actuation>
			<BodyKinematics name="BodyKinematics">
				<!--Flag (true or false) specifying whether whether on. True by default.-->
				<on> true </on>
				<!--Specifies how often to store results during a simulation. More
					specifically, the interval (a positive integer) specifies how many
					successful integration steps should be taken before results are
					recorded again.-->
				<step_interval> 15 </step_interval>
				<!--Flag (true or false) indicating whether the results are in degrees or
					not.-->
				<in_degrees> true </in_degrees>
			</BodyKinematics>
			<MuscleAnalysis name="MuscleAnalysis">
				<!--Flag (true or false) specifying whether whether on. True by default.-->
				<on> true </on>
				<!--Specifies how often to store results during a simulation. More
					specifically, the interval (a positive integer) specifies how many
					successful integration steps should be taken before results are
					recorded again.-->
				<step_interval> 15 </step_interval>
				<!--Flag (true or false) indicating whether the results are in degrees or
					not.-->
				<in_degrees> true </in_degrees>
			</MuscleAnalysis>
		 </objects>
		</AnalysisSet>
		<!--Storage file (.sto) containing the initial states for the forward
			simulation. This file often contains multiple rows of data, each row
			being a time-stamped array of states. The first column contains the
			time.  The rest of the columns contain the states in the order
			appropriate for the model. In a storage file, unlike a motion file
			(.mot), non-uniform time spacing is allowed.  If the user-specified
			initial time for a simulation does not correspond exactly to one of
			the time stamps in this file, inerpolation is NOT used because it is
			usually necessary to being a simulation from an exact set of states.
			Instead, the closest earlier set of states is used. Having a states
			file that contains the entire trajectory of a simulations allows for
			corrective springs for perturbation analysis to be added.-->
		<states_file> block_hanging_from_muscle_InitialStates.sto </states_file>
		<!--Motion (.mot) or storage (.sto) file containing the desired kinematic
		trajectories.-->
		<desired_kinematics_file> ForwardResultsSTATIC/block_hanging_from_muscle_Kinematics_q.mot </desired_kinematics_file>
		<!--Low-pass cut-off frequency for filtering the desired kinematics. A
			negative value results in no filtering. The default value is -1.0, so
			no filtering.-->
		<lowpass_cutoff_frequency>      -1.00000000000000000000 </lowpass_cutoff_frequency>
		<!--File containing the tracking tasks. Which coordinates are tracked and
			with what weights are specified here.-->
		<task_set_file> block_hanging_from_muscle_CMC_Tasks.xml </task_set_file>
		<!--Flag (true or false) indicating whether to use the fast CMC
			optimization target. The fast target requires the desired
			accelerations to be met. The optimizer fails if the acclerations
			constraints cannot be met, so the fast target can be less robust.  The
			regular target does not require the acceleration constraints to be
			met; it meets them as well as it can, but it is slower and less
			accurate.-->
		<use_fast_optimization_target> false </use_fast_optimization_target>
		<!--Perturbation size used by the optimizer to compute numerical
			derivatives. A value between 1.0e-4 and 1.0e-8 is usually
			approprieate.-->
		<optimizer_derivative_dx>       1.00000000000000000000 </optimizer_derivative_dx>
		<!--Convergence criterion for the optimizer. The smaller this value, the
			deeper the convergence. Decreasing this number can improve a solution,
			but will also likely increase computation time.-->
		<optimizer_convergence_criterion>       0.0010000000000000000000 </optimizer_convergence_criterion>
		<!--Maximum number of iterations for the optimizer.-->
		<optimizer_max_iterations> 2000 </optimizer_max_iterations>
		<!--Print level for the optimizer, 0 - 3. 0=no printing, 3=detailed
			printing, 2=in between-->
		<optimizer_print_level> 0 </optimizer_print_level>
		<!--Preferred optimizer algorithm (currently support "ipopt" or "cfsqp",
			the latter requiring the osimFSQP library.-->
		<optimizer_algorithm> ipopt </optimizer_algorithm>
		<!--Time window over which the desired actuator forces are achieved.
			Muscles forces cannot change instantaneously, so a finite time window
			must be allowed. The recommended time window for RRA is about 0.001
			sec, and for CMC is about 0.010 sec.-->
		<cmc_time_window>       0.04000000000000000000 </cmc_time_window>
		<!--Flag (true or false) indicating whether or not to use the curvature
			filter. Setting this flag to true can reduce oscillations in the
			computed muscle excitations.-->
		<use_curvature_filter> true </use_curvature_filter>  
		<!--True-false flag indicating whether or not to turn on verbose printing
			for cmc.-->
		<use_verbose_printing> false </use_verbose_printing>
	</CMCTool>
</OpenSimDocument>