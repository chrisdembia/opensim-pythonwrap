/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class ModelIntegrand extends Integrand {
  private long swigCPtr;

  public ModelIntegrand(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGStorageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(ModelIntegrand obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_ModelIntegrand(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public ModelIntegrand(AbstractModel aModel) {
    this(opensimModelJNI.new_ModelIntegrand(AbstractModel.getCPtr(aModel)), true);
  }

  public int getSize() {
    return opensimModelJNI.ModelIntegrand_getSize(swigCPtr);
  }

  public AbstractModel getModel() {
    long cPtr = opensimModelJNI.ModelIntegrand_getModel(swigCPtr);
    return (cPtr == 0) ? null : new AbstractModel(cPtr, false);
  }

  public void setControlSet(ControlSet aControlSet) {
    opensimModelJNI.ModelIntegrand_setControlSet(swigCPtr, ControlSet.getCPtr(aControlSet));
  }

  public ControlSet getControlSet() {
    long cPtr = opensimModelJNI.ModelIntegrand_getControlSet(swigCPtr);
    return (cPtr == 0) ? null : new ControlSet(cPtr, false);
  }

  public void setControlStorage(Storage aStorage) {
    opensimModelJNI.ModelIntegrand_setControlStorage(swigCPtr, Storage.getCPtr(aStorage));
  }

  public Storage getControlStorage() {
    long cPtr = opensimModelJNI.ModelIntegrand_getControlStorage(swigCPtr);
    return (cPtr == 0) ? null : new Storage(cPtr, false);
  }

  public void setStateStorage(Storage aStorage) {
    opensimModelJNI.ModelIntegrand_setStateStorage(swigCPtr, Storage.getCPtr(aStorage));
  }

  public Storage getStateStorage() {
    long cPtr = opensimModelJNI.ModelIntegrand_getStateStorage(swigCPtr);
    return (cPtr == 0) ? null : new Storage(cPtr, false);
  }

  public void setPseudoStateStorage(Storage aStorage) {
    opensimModelJNI.ModelIntegrand_setPseudoStateStorage(swigCPtr, Storage.getCPtr(aStorage));
  }

  public Storage getPseudoStateStorage() {
    long cPtr = opensimModelJNI.ModelIntegrand_getPseudoStateStorage(swigCPtr);
    return (cPtr == 0) ? null : new Storage(cPtr, false);
  }

  public void setController(Controller aController) {
    opensimModelJNI.ModelIntegrand_setController(swigCPtr, Controller.getCPtr(aController));
  }

  public Controller getController() {
    long cPtr = opensimModelJNI.ModelIntegrand_getController(swigCPtr);
    return (cPtr == 0) ? null : new Controller(cPtr, false);
  }

  public ControlSet constructControlSet() {
    long cPtr = opensimModelJNI.ModelIntegrand_constructControlSet(swigCPtr);
    return (cPtr == 0) ? null : new ControlSet(cPtr, false);
  }

  public void convertStatesIntegrandToModel(double t, double[] y, double[] yModel) {
    opensimModelJNI.ModelIntegrand_convertStatesIntegrandToModel(swigCPtr, t, y, yModel);
  }

  public void convertStatesModelToIntegrand(double[] yModel, double[] y) {
    opensimModelJNI.ModelIntegrand_convertStatesModelToIntegrand(swigCPtr, yModel, y);
  }

  public void setInitialStates(double ti, double[] yi) {
    opensimModelJNI.ModelIntegrand_setInitialStates(swigCPtr, ti, yi);
  }

  public void getInitialStates(double[] yi) {
    opensimModelJNI.ModelIntegrand_getInitialStates(swigCPtr, yi);
  }

  public void compute(double t, double[] y, double[] dydt) {
    opensimModelJNI.ModelIntegrand_compute(swigCPtr, t, y, dydt);
  }

  public void initialize(int step, SWIGTYPE_p_double dt, double ti, double tf, double[] y) {
    opensimModelJNI.ModelIntegrand_initialize(swigCPtr, step, SWIGTYPE_p_double.getCPtr(dt), ti, tf, y);
  }

  public void processAfterStep(int step, SWIGTYPE_p_double dt, double t, double[] y) {
    opensimModelJNI.ModelIntegrand_processAfterStep(swigCPtr, step, SWIGTYPE_p_double.getCPtr(dt), t, y);
  }

  public void finalize(int step, double t, double[] y) {
    opensimModelJNI.ModelIntegrand_finalize(swigCPtr, step, t, y);
  }

}
