/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class SetSimmMarker extends OpenSimObject {
  private long swigCPtr;

  public SetSimmMarker(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGStorageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(SetSimmMarker obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_SetSimmMarker(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public SetSimmMarker() {
    this(opensimModelJNI.new_SetSimmMarker__SWIG_0(), true);
  }

  public SetSimmMarker(String aFileName) {
    this(opensimModelJNI.new_SetSimmMarker__SWIG_1(aFileName), true);
  }

  public SetSimmMarker(SWIGTYPE_p_DOMElement aElement) {
    this(opensimModelJNI.new_SetSimmMarker__SWIG_2(SWIGTYPE_p_DOMElement.getCPtr(aElement)), true);
  }

  public SetSimmMarker(SetSimmMarker aSet) {
    this(opensimModelJNI.new_SetSimmMarker__SWIG_3(SetSimmMarker.getCPtr(aSet)), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.SetSimmMarker_copy(swigCPtr);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void setMemoryOwner(boolean aTrueFalse) {
    opensimModelJNI.SetSimmMarker_setMemoryOwner(swigCPtr, aTrueFalse);
  }

  public boolean getMemoryOwner() {
    return opensimModelJNI.SetSimmMarker_getMemoryOwner(swigCPtr);
  }

  public boolean computeNewCapacity(int aMinCapacity, SWIGTYPE_p_int rNewCapacity) {
    return opensimModelJNI.SetSimmMarker_computeNewCapacity(swigCPtr, aMinCapacity, SWIGTYPE_p_int.getCPtr(rNewCapacity));
  }

  public boolean ensureCapacity(int aCapacity) {
    return opensimModelJNI.SetSimmMarker_ensureCapacity(swigCPtr, aCapacity);
  }

  public void trim() {
    opensimModelJNI.SetSimmMarker_trim(swigCPtr);
  }

  public int getCapacity() {
    return opensimModelJNI.SetSimmMarker_getCapacity(swigCPtr);
  }

  public void setCapacityIncrement(int aIncrement) {
    opensimModelJNI.SetSimmMarker_setCapacityIncrement(swigCPtr, aIncrement);
  }

  public int getCapacityIncrement() {
    return opensimModelJNI.SetSimmMarker_getCapacityIncrement(swigCPtr);
  }

  public boolean setSize(int aSize) {
    return opensimModelJNI.SetSimmMarker_setSize(swigCPtr, aSize);
  }

  public int getSize() {
    return opensimModelJNI.SetSimmMarker_getSize(swigCPtr);
  }

  public int getIndex(SimmMarker aObject, int aStartIndex) {
    return opensimModelJNI.SetSimmMarker_getIndex__SWIG_0(swigCPtr, SimmMarker.getCPtr(aObject), aStartIndex);
  }

  public int getIndex(SimmMarker aObject) {
    return opensimModelJNI.SetSimmMarker_getIndex__SWIG_1(swigCPtr, SimmMarker.getCPtr(aObject));
  }

  public int getIndex(String aName, int aStartIndex) {
    return opensimModelJNI.SetSimmMarker_getIndex__SWIG_2(swigCPtr, aName, aStartIndex);
  }

  public int getIndex(String aName) {
    return opensimModelJNI.SetSimmMarker_getIndex__SWIG_3(swigCPtr, aName);
  }

  public boolean append(SimmMarker aObject) {
    return opensimModelJNI.SetSimmMarker_append__SWIG_0(swigCPtr, SimmMarker.getCPtr(aObject));
  }

  public boolean append(SWIGTYPE_p_OpenSim__ArrayPtrsTOpenSim__SimmMarker_t aArray) {
    return opensimModelJNI.SetSimmMarker_append__SWIG_1(swigCPtr, SWIGTYPE_p_OpenSim__ArrayPtrsTOpenSim__SimmMarker_t.getCPtr(aArray));
  }

  public boolean insert(int aIndex, SimmMarker aObject) {
    return opensimModelJNI.SetSimmMarker_insert(swigCPtr, aIndex, SimmMarker.getCPtr(aObject));
  }

  public boolean remove(int aIndex) {
    return opensimModelJNI.SetSimmMarker_remove__SWIG_0(swigCPtr, aIndex);
  }

  public boolean remove(SimmMarker aObject) {
    return opensimModelJNI.SetSimmMarker_remove__SWIG_1(swigCPtr, SimmMarker.getCPtr(aObject));
  }

  public boolean set(int aIndex, SimmMarker aObject) {
    return opensimModelJNI.SetSimmMarker_set(swigCPtr, aIndex, SimmMarker.getCPtr(aObject));
  }

  public SimmMarker get(int aIndex) {
    long cPtr = opensimModelJNI.SetSimmMarker_get__SWIG_0(swigCPtr, aIndex);
    return (cPtr == 0) ? null : new SimmMarker(cPtr, false);
  }

  public SimmMarker get(String aName) {
    long cPtr = opensimModelJNI.SetSimmMarker_get__SWIG_1(swigCPtr, aName);
    return (cPtr == 0) ? null : new SimmMarker(cPtr, false);
  }

  public SimmMarker getLast() {
    long cPtr = opensimModelJNI.SetSimmMarker_getLast(swigCPtr);
    return (cPtr == 0) ? null : new SimmMarker(cPtr, false);
  }

  public int searchBinary(SimmMarker aObject, boolean aFindFirst, int aLo, int aHi) {
    return opensimModelJNI.SetSimmMarker_searchBinary__SWIG_0(swigCPtr, SimmMarker.getCPtr(aObject), aFindFirst, aLo, aHi);
  }

  public int searchBinary(SimmMarker aObject, boolean aFindFirst, int aLo) {
    return opensimModelJNI.SetSimmMarker_searchBinary__SWIG_1(swigCPtr, SimmMarker.getCPtr(aObject), aFindFirst, aLo);
  }

  public int searchBinary(SimmMarker aObject, boolean aFindFirst) {
    return opensimModelJNI.SetSimmMarker_searchBinary__SWIG_2(swigCPtr, SimmMarker.getCPtr(aObject), aFindFirst);
  }

  public int searchBinary(SimmMarker aObject) {
    return opensimModelJNI.SetSimmMarker_searchBinary__SWIG_3(swigCPtr, SimmMarker.getCPtr(aObject));
  }

}
