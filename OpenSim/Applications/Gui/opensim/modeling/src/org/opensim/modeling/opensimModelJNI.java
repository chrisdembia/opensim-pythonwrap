/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;
import org.opensim.utils.TheApp;
public class opensimModelJNI {

  static {
      try{
        System.loadLibrary("osimJavaJNI");		// All OpenSim classes required for GUI operation.
        System.loadLibrary("osimSdfastEngine");	//to load sdfast based models
      }
      catch(UnsatisfiedLinkError e){
           TheApp.exitApp("Required library failed to load. Check that the dynamic library osimJavaJNI is in your PATH\n"+e);
      }
  }

  public final static native long new_OpenSimException__SWIG_0(String jarg1, String jarg2, int jarg3);
  public final static native long new_OpenSimException__SWIG_1(String jarg1, String jarg2);
  public final static native long new_OpenSimException__SWIG_2(String jarg1);
  public final static native long new_OpenSimException__SWIG_3();
  public final static native void delete_OpenSimException(long jarg1);
  public final static native void OpenSimException_setMessage(long jarg1, OpenSimException jarg1_, String jarg2);
  public final static native String OpenSimException_getMessage(long jarg1, OpenSimException jarg1_);
  public final static native void OpenSimException_print(long jarg1, OpenSimException jarg1_, long jarg2);
  public final static native int Array_CAPMIN_get();
  public final static native int Property_None_get();
  public final static native long Property_copy(long jarg1, Property jarg1_);
  public final static native void delete_Property(long jarg1);
  public final static native void Property_setNull(long jarg1, Property jarg1_);
  public final static native void Property_setType(long jarg1, Property jarg1_, int jarg2);
  public final static native int Property_getType(long jarg1, Property jarg1_);
  public final static native String Property_getTypeAsString(long jarg1, Property jarg1_);
  public final static native void Property_setName(long jarg1, Property jarg1_, String jarg2);
  public final static native String Property_getName(long jarg1, Property jarg1_);
  public final static native void Property_setComment(long jarg1, Property jarg1_, String jarg2);
  public final static native String Property_getComment(long jarg1, Property jarg1_);
  public final static native String Property_toString(long jarg1, Property jarg1_);
  public final static native void Property_setValue__SWIG_0(long jarg1, Property jarg1_, boolean jarg2);
  public final static native boolean Property_getValueBool(long jarg1, Property jarg1_);
  public final static native void Property_setValue__SWIG_1(long jarg1, Property jarg1_, int jarg2);
  public final static native int Property_getValueInt(long jarg1, Property jarg1_);
  public final static native void Property_setValue__SWIG_2(long jarg1, Property jarg1_, double jarg2);
  public final static native double Property_getValueDbl(long jarg1, Property jarg1_);
  public final static native void Property_setValue__SWIG_3(long jarg1, Property jarg1_, String jarg2);
  public final static native String Property_getValueStr(long jarg1, Property jarg1_);
  public final static native long Property_getValueObj(long jarg1, Property jarg1_);
  public final static native boolean Property_isValidObject(long jarg1, Property jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native void Property_setValue__SWIG_4(long jarg1, Property jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native long Property_getValueObjPtr(long jarg1, Property jarg1_);
  public final static native void Property_setValue__SWIG_5(long jarg1, Property jarg1_, int jarg2, boolean[] jarg3);
  public final static native void Property_setValue__SWIG_6(long jarg1, Property jarg1_, long jarg2, ArrayBool jarg2_);
  public final static native long Property_getValueBoolArray(long jarg1, Property jarg1_);
  public final static native void Property_setValue__SWIG_7(long jarg1, Property jarg1_, int jarg2, int[] jarg3);
  public final static native void Property_setValue__SWIG_8(long jarg1, Property jarg1_, long jarg2, ArrayInt jarg2_);
  public final static native long Property_getValueIntArray(long jarg1, Property jarg1_);
  public final static native void Property_setValue__SWIG_9(long jarg1, Property jarg1_, int jarg2, double[] jarg3);
  public final static native void Property_setValue__SWIG_10(long jarg1, Property jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native long Property_getValueDblArray(long jarg1, Property jarg1_);
  public final static native void Property_setValue__SWIG_11(long jarg1, Property jarg1_, int jarg2, long jarg3);
  public final static native void Property_setValue__SWIG_12(long jarg1, Property jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long Property_getValueStrArray(long jarg1, Property jarg1_);
  public final static native void Property_setValue__SWIG_13(long jarg1, Property jarg1_, int jarg2, long jarg3);
  public final static native void Property_setValue__SWIG_14(long jarg1, Property jarg1_, long jarg2, ArrayPtrsObj jarg2_);
  public final static native long Property_getValueObjArray(long jarg1, Property jarg1_);
  public final static native void Property_setUseDefault(long jarg1, Property jarg1_, boolean jarg2);
  public final static native boolean Property_getUseDefault(long jarg1, Property jarg1_);
  public final static native void delete_ArrayPtrsProperty(long jarg1);
  public final static native long new_ArrayPtrsProperty__SWIG_0(int jarg1);
  public final static native long new_ArrayPtrsProperty__SWIG_1();
  public final static native long new_ArrayPtrsProperty__SWIG_2(long jarg1, ArrayPtrsProperty jarg1_);
  public final static native void ArrayPtrsProperty_clearAndDestroy(long jarg1, ArrayPtrsProperty jarg1_);
  public final static native void ArrayPtrsProperty_setMemoryOwner(long jarg1, ArrayPtrsProperty jarg1_, boolean jarg2);
  public final static native boolean ArrayPtrsProperty_getMemoryOwner(long jarg1, ArrayPtrsProperty jarg1_);
  public final static native boolean ArrayPtrsProperty_computeNewCapacity(long jarg1, ArrayPtrsProperty jarg1_, int jarg2, long jarg3);
  public final static native boolean ArrayPtrsProperty_ensureCapacity(long jarg1, ArrayPtrsProperty jarg1_, int jarg2);
  public final static native void ArrayPtrsProperty_trim(long jarg1, ArrayPtrsProperty jarg1_);
  public final static native int ArrayPtrsProperty_getCapacity(long jarg1, ArrayPtrsProperty jarg1_);
  public final static native void ArrayPtrsProperty_setCapacityIncrement(long jarg1, ArrayPtrsProperty jarg1_, int jarg2);
  public final static native int ArrayPtrsProperty_getCapacityIncrement(long jarg1, ArrayPtrsProperty jarg1_);
  public final static native boolean ArrayPtrsProperty_setSize(long jarg1, ArrayPtrsProperty jarg1_, int jarg2);
  public final static native int ArrayPtrsProperty_getSize(long jarg1, ArrayPtrsProperty jarg1_);
  public final static native int ArrayPtrsProperty_getIndex__SWIG_0(long jarg1, ArrayPtrsProperty jarg1_, long jarg2, Property jarg2_, int jarg3);
  public final static native int ArrayPtrsProperty_getIndex__SWIG_1(long jarg1, ArrayPtrsProperty jarg1_, long jarg2, Property jarg2_);
  public final static native int ArrayPtrsProperty_getIndex__SWIG_2(long jarg1, ArrayPtrsProperty jarg1_, String jarg2, int jarg3);
  public final static native int ArrayPtrsProperty_getIndex__SWIG_3(long jarg1, ArrayPtrsProperty jarg1_, String jarg2);
  public final static native boolean ArrayPtrsProperty_append__SWIG_0(long jarg1, ArrayPtrsProperty jarg1_, long jarg2, Property jarg2_);
  public final static native boolean ArrayPtrsProperty_append__SWIG_1(long jarg1, ArrayPtrsProperty jarg1_, long jarg2, ArrayPtrsProperty jarg2_);
  public final static native boolean ArrayPtrsProperty_insert(long jarg1, ArrayPtrsProperty jarg1_, int jarg2, long jarg3, Property jarg3_);
  public final static native boolean ArrayPtrsProperty_remove__SWIG_0(long jarg1, ArrayPtrsProperty jarg1_, int jarg2);
  public final static native boolean ArrayPtrsProperty_remove__SWIG_1(long jarg1, ArrayPtrsProperty jarg1_, long jarg2, Property jarg2_);
  public final static native boolean ArrayPtrsProperty_set(long jarg1, ArrayPtrsProperty jarg1_, int jarg2, long jarg3, Property jarg3_);
  public final static native long ArrayPtrsProperty_get__SWIG_0(long jarg1, ArrayPtrsProperty jarg1_, int jarg2);
  public final static native long ArrayPtrsProperty_get__SWIG_1(long jarg1, ArrayPtrsProperty jarg1_, String jarg2);
  public final static native long ArrayPtrsProperty_getLast(long jarg1, ArrayPtrsProperty jarg1_);
  public final static native int ArrayPtrsProperty_searchBinary__SWIG_0(long jarg1, ArrayPtrsProperty jarg1_, long jarg2, Property jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int ArrayPtrsProperty_searchBinary__SWIG_1(long jarg1, ArrayPtrsProperty jarg1_, long jarg2, Property jarg2_, boolean jarg3, int jarg4);
  public final static native int ArrayPtrsProperty_searchBinary__SWIG_2(long jarg1, ArrayPtrsProperty jarg1_, long jarg2, Property jarg2_, boolean jarg3);
  public final static native int ArrayPtrsProperty_searchBinary__SWIG_3(long jarg1, ArrayPtrsProperty jarg1_, long jarg2, Property jarg2_);
  public final static native long new_PropertyGroup__SWIG_0();
  public final static native long new_PropertyGroup__SWIG_1(long jarg1);
  public final static native long new_PropertyGroup__SWIG_2(long jarg1, PropertyGroup jarg1_);
  public final static native void delete_PropertyGroup(long jarg1);
  public final static native long PropertyGroup_copy(long jarg1, PropertyGroup jarg1_);
  public final static native void PropertyGroup_copyData(long jarg1, PropertyGroup jarg1_, long jarg2, PropertyGroup jarg2_);
  public final static native void PropertyGroup_clear(long jarg1, PropertyGroup jarg1_);
  public final static native boolean PropertyGroup_contains(long jarg1, PropertyGroup jarg1_, String jarg2);
  public final static native void PropertyGroup_add(long jarg1, PropertyGroup jarg1_, long jarg2, Property jarg2_);
  public final static native void PropertyGroup_remove(long jarg1, PropertyGroup jarg1_, long jarg2, Property jarg2_);
  public final static native long PropertyGroup_getProperties(long jarg1, PropertyGroup jarg1_);
  public final static native long PropertyGroup_get(long jarg1, PropertyGroup jarg1_, int jarg2);
  public final static native int PropertyGroup_getPropertyIndex(long jarg1, PropertyGroup jarg1_, long jarg2, Property jarg2_);
  public final static native void PropertyGroup_setName(long jarg1, PropertyGroup jarg1_, String jarg2);
  public final static native String PropertyGroup_getName(long jarg1, PropertyGroup jarg1_);
  public final static native void delete_ArrayPtrsPropertyGroup(long jarg1);
  public final static native long new_ArrayPtrsPropertyGroup__SWIG_0(int jarg1);
  public final static native long new_ArrayPtrsPropertyGroup__SWIG_1();
  public final static native long new_ArrayPtrsPropertyGroup__SWIG_2(long jarg1, ArrayPtrsPropertyGroup jarg1_);
  public final static native void ArrayPtrsPropertyGroup_clearAndDestroy(long jarg1, ArrayPtrsPropertyGroup jarg1_);
  public final static native void ArrayPtrsPropertyGroup_setMemoryOwner(long jarg1, ArrayPtrsPropertyGroup jarg1_, boolean jarg2);
  public final static native boolean ArrayPtrsPropertyGroup_getMemoryOwner(long jarg1, ArrayPtrsPropertyGroup jarg1_);
  public final static native boolean ArrayPtrsPropertyGroup_computeNewCapacity(long jarg1, ArrayPtrsPropertyGroup jarg1_, int jarg2, long jarg3);
  public final static native boolean ArrayPtrsPropertyGroup_ensureCapacity(long jarg1, ArrayPtrsPropertyGroup jarg1_, int jarg2);
  public final static native void ArrayPtrsPropertyGroup_trim(long jarg1, ArrayPtrsPropertyGroup jarg1_);
  public final static native int ArrayPtrsPropertyGroup_getCapacity(long jarg1, ArrayPtrsPropertyGroup jarg1_);
  public final static native void ArrayPtrsPropertyGroup_setCapacityIncrement(long jarg1, ArrayPtrsPropertyGroup jarg1_, int jarg2);
  public final static native int ArrayPtrsPropertyGroup_getCapacityIncrement(long jarg1, ArrayPtrsPropertyGroup jarg1_);
  public final static native boolean ArrayPtrsPropertyGroup_setSize(long jarg1, ArrayPtrsPropertyGroup jarg1_, int jarg2);
  public final static native int ArrayPtrsPropertyGroup_getSize(long jarg1, ArrayPtrsPropertyGroup jarg1_);
  public final static native int ArrayPtrsPropertyGroup_getIndex__SWIG_0(long jarg1, ArrayPtrsPropertyGroup jarg1_, long jarg2, PropertyGroup jarg2_, int jarg3);
  public final static native int ArrayPtrsPropertyGroup_getIndex__SWIG_1(long jarg1, ArrayPtrsPropertyGroup jarg1_, long jarg2, PropertyGroup jarg2_);
  public final static native int ArrayPtrsPropertyGroup_getIndex__SWIG_2(long jarg1, ArrayPtrsPropertyGroup jarg1_, String jarg2, int jarg3);
  public final static native int ArrayPtrsPropertyGroup_getIndex__SWIG_3(long jarg1, ArrayPtrsPropertyGroup jarg1_, String jarg2);
  public final static native boolean ArrayPtrsPropertyGroup_append__SWIG_0(long jarg1, ArrayPtrsPropertyGroup jarg1_, long jarg2, PropertyGroup jarg2_);
  public final static native boolean ArrayPtrsPropertyGroup_append__SWIG_1(long jarg1, ArrayPtrsPropertyGroup jarg1_, long jarg2, ArrayPtrsPropertyGroup jarg2_);
  public final static native boolean ArrayPtrsPropertyGroup_insert(long jarg1, ArrayPtrsPropertyGroup jarg1_, int jarg2, long jarg3, PropertyGroup jarg3_);
  public final static native boolean ArrayPtrsPropertyGroup_remove__SWIG_0(long jarg1, ArrayPtrsPropertyGroup jarg1_, int jarg2);
  public final static native boolean ArrayPtrsPropertyGroup_remove__SWIG_1(long jarg1, ArrayPtrsPropertyGroup jarg1_, long jarg2, PropertyGroup jarg2_);
  public final static native boolean ArrayPtrsPropertyGroup_set(long jarg1, ArrayPtrsPropertyGroup jarg1_, int jarg2, long jarg3, PropertyGroup jarg3_);
  public final static native long ArrayPtrsPropertyGroup_get__SWIG_0(long jarg1, ArrayPtrsPropertyGroup jarg1_, int jarg2);
  public final static native long ArrayPtrsPropertyGroup_get__SWIG_1(long jarg1, ArrayPtrsPropertyGroup jarg1_, String jarg2);
  public final static native long ArrayPtrsPropertyGroup_getLast(long jarg1, ArrayPtrsPropertyGroup jarg1_);
  public final static native int ArrayPtrsPropertyGroup_searchBinary__SWIG_0(long jarg1, ArrayPtrsPropertyGroup jarg1_, long jarg2, PropertyGroup jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int ArrayPtrsPropertyGroup_searchBinary__SWIG_1(long jarg1, ArrayPtrsPropertyGroup jarg1_, long jarg2, PropertyGroup jarg2_, boolean jarg3, int jarg4);
  public final static native int ArrayPtrsPropertyGroup_searchBinary__SWIG_2(long jarg1, ArrayPtrsPropertyGroup jarg1_, long jarg2, PropertyGroup jarg2_, boolean jarg3);
  public final static native int ArrayPtrsPropertyGroup_searchBinary__SWIG_3(long jarg1, ArrayPtrsPropertyGroup jarg1_, long jarg2, PropertyGroup jarg2_);
  public final static native void PropertySet__array_set(long jarg1, PropertySet jarg1_, long jarg2, ArrayPtrsProperty jarg2_);
  public final static native long PropertySet__array_get(long jarg1, PropertySet jarg1_);
  public final static native long new_PropertySet__SWIG_0();
  public final static native long new_PropertySet__SWIG_1(long jarg1, PropertySet jarg1_);
  public final static native void delete_PropertySet(long jarg1);
  public final static native boolean PropertySet_isEmpty(long jarg1, PropertySet jarg1_);
  public final static native int PropertySet_getSize(long jarg1, PropertySet jarg1_);
  public final static native long PropertySet_get__SWIG_0(long jarg1, PropertySet jarg1_, int jarg2) throws java.io.IOException;
  public final static native long PropertySet_get__SWIG_1(long jarg1, PropertySet jarg1_, String jarg2) throws java.io.IOException;
  public final static native void PropertySet_append__SWIG_0(long jarg1, PropertySet jarg1_, long jarg2, Property jarg2_);
  public final static native void PropertySet_append__SWIG_1(long jarg1, PropertySet jarg1_, long jarg2, Property jarg2_, String jarg3);
  public final static native void PropertySet_remove(long jarg1, PropertySet jarg1_, String jarg2);
  public final static native void PropertySet_clear(long jarg1, PropertySet jarg1_);
  public final static native long PropertySet_addGroup(long jarg1, PropertySet jarg1_, String jarg2);
  public final static native void PropertySet_addPropertyToGroup__SWIG_0(long jarg1, PropertySet jarg1_, String jarg2, String jarg3);
  public final static native void PropertySet_addPropertyToGroup__SWIG_1(long jarg1, PropertySet jarg1_, long jarg2, PropertyGroup jarg2_, String jarg3);
  public final static native void PropertySet_addPropertyToGroup__SWIG_2(long jarg1, PropertySet jarg1_, long jarg2, PropertyGroup jarg2_, long jarg3, Property jarg3_);
  public final static native void PropertySet_addPropertyToGroup__SWIG_3(long jarg1, PropertySet jarg1_, String jarg2, long jarg3, Property jarg3_);
  public final static native long PropertySet_getGroups(long jarg1, PropertySet jarg1_);
  public final static native long PropertySet_getGroupContaining(long jarg1, PropertySet jarg1_, long jarg2, Property jarg2_);
  public final static native int PropertySet_getGroupIndexContaining(long jarg1, PropertySet jarg1_, long jarg2, Property jarg2_);
  public final static native String ObjectDEFAULT_NAME_get();
  public final static native void delete_OpenSimObject(long jarg1);
  public final static native long new_OpenSimObject__SWIG_0();
  public final static native long new_OpenSimObject__SWIG_1(String jarg1, boolean jarg2) throws java.io.IOException;
  public final static native long new_OpenSimObject__SWIG_2(String jarg1) throws java.io.IOException;
  public final static native long new_OpenSimObject__SWIG_3(long jarg1);
  public final static native long new_OpenSimObject__SWIG_4(long jarg1);
  public final static native long new_OpenSimObject__SWIG_5(long jarg1, OpenSimObject jarg1_);
  public final static native long OpenSimObject_copy__SWIG_0(long jarg1, OpenSimObject jarg1_);
  public final static native long OpenSimObject_copy__SWIG_1(long jarg1, OpenSimObject jarg1_, long jarg2);
  public final static native void OpenSimObject_copy__SWIG_2(long jarg1, OpenSimObject jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native long OpenSimObject_SafeCopy(long jarg1, OpenSimObject jarg1_);
  public final static native long OpenSimObject_getDisplayer(long jarg1, OpenSimObject jarg1_);
  public final static native String OpenSimObject_getType(long jarg1, OpenSimObject jarg1_);
  public final static native void OpenSimObject_setName(long jarg1, OpenSimObject jarg1_, String jarg2);
  public final static native String OpenSimObject_getName(long jarg1, OpenSimObject jarg1_);
  public final static native void OpenSimObject_setDescription(long jarg1, OpenSimObject jarg1_, String jarg2);
  public final static native String OpenSimObject_getDescription(long jarg1, OpenSimObject jarg1_);
  public final static native String OpenSimObject_toString(long jarg1, OpenSimObject jarg1_);
  public final static native long OpenSimObject_getPropertySet(long jarg1, OpenSimObject jarg1_);
  public final static native void OpenSimObject_RegisterType(long jarg1, OpenSimObject jarg1_);
  public final static native long OpenSimObject_makeObjectFromFile(String jarg1);
  public final static native long OpenSimObject_newInstanceOfType(String jarg1);
  public final static native void OpenSimObject_getRegisteredTypenames(long jarg1, ArrayStr jarg1_);
  public final static native boolean OpenSimObject_isValidDefaultType(long jarg1, OpenSimObject jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native void OpenSimObject_updateFromXMLNode(long jarg1, OpenSimObject jarg1_);
  public final static native void OpenSimObject_updateDefaultObjectsFromXMLNode(long jarg1, OpenSimObject jarg1_);
  public final static native void OpenSimObject_updateXMLNode(long jarg1, OpenSimObject jarg1_, long jarg2);
  public final static native void OpenSimObject_updateDefaultObjectsXMLNode(long jarg1, OpenSimObject jarg1_, long jarg2);
  public final static native void OpenSimObject_generateXMLNode(long jarg1, OpenSimObject jarg1_, long jarg2);
  public final static native boolean OpenSimObject_getInlined(long jarg1, OpenSimObject jarg1_);
  public final static native long OpenSimObject_getDocument(long jarg1, OpenSimObject jarg1_);
  public final static native String OpenSimObject_getDocumentFileName(long jarg1, OpenSimObject jarg1_);
  public final static native long OpenSimObject_getXMLNode(long jarg1, OpenSimObject jarg1_);
  public final static native boolean OpenSimObject_print(long jarg1, OpenSimObject jarg1_, String jarg2);
  public final static native void OpenSimObject_PrintPropertyInfo__SWIG_0(long jarg1, String jarg2);
  public final static native void OpenSimObject_PrintPropertyInfo__SWIG_1(long jarg1, String jarg2, String jarg3);
  public final static native void OpenSimObject_addObserver(long jarg1, OpenSimObject jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native void OpenSimObject_deleteObserver(long jarg1, OpenSimObject jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native void OpenSimObject_addObserverEvent(long jarg1, OpenSimObject jarg1_, long jarg2, OpenSimObject jarg2_, long jarg3);
  public final static native void OpenSimObject_notifyObservers(long jarg1, OpenSimObject jarg1_, long jarg2);
  public final static native void OpenSimObject_deleteObservers(long jarg1, OpenSimObject jarg1_);
  public final static native int OpenSimObject_countObservers(long jarg1, OpenSimObject jarg1_);
  public final static native void OpenSimObject_update(long jarg1, OpenSimObject jarg1_, long jarg2, OpenSimObject jarg2_, long jarg3);
  public final static native void OpenSimObject_setSerializeAllDefaults(boolean jarg1);
  public final static native boolean OpenSimObject_getSerializeAllDefaults();
  public final static native boolean OpenSimObject_isKindOf(String jarg1);
  public final static native boolean OpenSimObject_isA(long jarg1, OpenSimObject jarg1_, String jarg2);
  public final static native long new_ObjectGroup__SWIG_0();
  public final static native long new_ObjectGroup__SWIG_1(String jarg1);
  public final static native long new_ObjectGroup__SWIG_2(long jarg1, ObjectGroup jarg1_);
  public final static native void delete_ObjectGroup(long jarg1);
  public final static native long ObjectGroup_copy__SWIG_0(long jarg1, ObjectGroup jarg1_);
  public final static native void ObjectGroup_copyData(long jarg1, ObjectGroup jarg1_, long jarg2, ObjectGroup jarg2_);
  public final static native boolean ObjectGroup_contains(long jarg1, ObjectGroup jarg1_, String jarg2);
  public final static native void ObjectGroup_add(long jarg1, ObjectGroup jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native void ObjectGroup_remove(long jarg1, ObjectGroup jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native void ObjectGroup_setup(long jarg1, ObjectGroup jarg1_, long jarg2, ArrayPtrsObj jarg2_);
  public final static native long ObjectGroup_getMembers(long jarg1, ObjectGroup jarg1_);
  public final static native void ObjectGroup_peteTest(long jarg1, ObjectGroup jarg1_);
  public final static native boolean ObjectGroup_isKindOf(String jarg1);
  public final static native boolean ObjectGroup_isA(long jarg1, ObjectGroup jarg1_, String jarg2);
  public final static native long ObjectGroup_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void ObjectGroup_copy__SWIG_1(long jarg1, ObjectGroup jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native void Material__propTranslucency_set(long jarg1, Material jarg1_, long jarg2);
  public final static native long Material__propTranslucency_get(long jarg1, Material jarg1_);
  public final static native void Material__propAmbientColor_set(long jarg1, Material jarg1_, long jarg2);
  public final static native long Material__propAmbientColor_get(long jarg1, Material jarg1_);
  public final static native void Material__propDiffuseColor_set(long jarg1, Material jarg1_, long jarg2);
  public final static native long Material__propDiffuseColor_get(long jarg1, Material jarg1_);
  public final static native void Material__propSpecularColor_set(long jarg1, Material jarg1_, long jarg2);
  public final static native long Material__propSpecularColor_get(long jarg1, Material jarg1_);
  public final static native void Material__translucency_set(long jarg1, Material jarg1_, long jarg2);
  public final static native long Material__translucency_get(long jarg1, Material jarg1_);
  public final static native void Material__ambientColor_set(long jarg1, Material jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native long Material__ambientColor_get(long jarg1, Material jarg1_);
  public final static native void Material__diffuseColor_set(long jarg1, Material jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native long Material__diffuseColor_get(long jarg1, Material jarg1_);
  public final static native void Material__specularColor_set(long jarg1, Material jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native long Material__specularColor_get(long jarg1, Material jarg1_);
  public final static native void Material__defaultMaterial_set(long jarg1, Material jarg1_);
  public final static native long Material__defaultMaterial_get();
  public final static native long new_Material__SWIG_0();
  public final static native long new_Material__SWIG_1(String jarg1);
  public final static native long new_Material__SWIG_2(long jarg1, Material jarg1_);
  public final static native void delete_Material(long jarg1);
  public final static native long Material_copy(long jarg1, Material jarg1_);
  public final static native void Material_setTranslucency(long jarg1, Material jarg1_, double jarg2);
  public final static native double Material_getTranslucency(long jarg1, Material jarg1_);
  public final static native void Material_setAmbientColor(long jarg1, Material jarg1_, double[] jarg2);
  public final static native long Material_getAmbientColor(long jarg1, Material jarg1_);
  public final static native void Material_setDiffuseColor(long jarg1, Material jarg1_, double[] jarg2);
  public final static native long Material_getDiffuseColor(long jarg1, Material jarg1_);
  public final static native void Material_setSpecularColor(long jarg1, Material jarg1_, double[] jarg2);
  public final static native long Material_getSpecularColor(long jarg1, Material jarg1_);
  public final static native String Material_GetDefaultMaterialName();
  public final static native long Material_GetDefaultMaterial();
  public final static native int VisibleProperties_None_get();
  public final static native int VisibleProperties_WireFrame_get();
  public final static native int VisibleProperties_SolidFill_get();
  public final static native int VisibleProperties_FlatShaded_get();
  public final static native int VisibleProperties_GouraudShaded_get();
  public final static native int VisibleProperties_PhongShaded_get();
  public final static native int VisibleProperties_BoundingBox_get();
  public final static native long new_VisibleProperties__SWIG_0();
  public final static native long new_VisibleProperties__SWIG_1(String jarg1);
  public final static native long new_VisibleProperties__SWIG_2(long jarg1);
  public final static native long new_VisibleProperties__SWIG_3(long jarg1, VisibleProperties jarg1_);
  public final static native void delete_VisibleProperties(long jarg1);
  public final static native long VisibleProperties_copy(long jarg1, VisibleProperties jarg1_);
  public final static native void VisibleProperties_setDisplayPreference(long jarg1, VisibleProperties jarg1_, int jarg2);
  public final static native int VisibleProperties_getDisplayPreference(long jarg1, VisibleProperties jarg1_);
  public final static native void VisibleProperties_setShowNormals(long jarg1, VisibleProperties jarg1_, boolean jarg2);
  public final static native boolean VisibleProperties_getShowNormals(long jarg1, VisibleProperties jarg1_);
  public final static native void VisibleProperties_setShowAxes(long jarg1, VisibleProperties jarg1_, boolean jarg2);
  public final static native boolean VisibleProperties_getShowAxes(long jarg1, VisibleProperties jarg1_);
  public final static native void VisibleProperties_setMaterialName(long jarg1, VisibleProperties jarg1_, String jarg2);
  public final static native String VisibleProperties_getMaterialName(long jarg1, VisibleProperties jarg1_);
  public final static native void VisibleProperties_getColor(long jarg1, VisibleProperties jarg1_, double[] jarg2);
  public final static native void VisibleProperties_setColor(long jarg1, VisibleProperties jarg1_, double[] jarg2);
  public final static native int Transform_X_get();
  public final static native int Transform_Y_get();
  public final static native int Transform_Z_get();
  public final static native int Transform_W_get();
  public final static native int Transform_NoAxis_get();
  public final static native int Transform_XYZ_get();
  public final static native int Transform_XZY_get();
  public final static native int Transform_YXZ_get();
  public final static native int Transform_YZX_get();
  public final static native int Transform_ZXY_get();
  public final static native int Transform_ZYX_get();
  public final static native long new_Transform__SWIG_0();
  public final static native long new_Transform__SWIG_1(long jarg1, Transform jarg1_);
  public final static native long new_Transform__SWIG_2(double jarg1, int jarg2, double[] jarg3);
  public final static native void delete_Transform(long jarg1);
  public final static native long Transform_copy(long jarg1, Transform jarg1_);
  public final static native void Transform_printMatrix(long jarg1, Transform jarg1_);
  public final static native void Transform_getPosition(long jarg1, Transform jarg1_, double[] jarg2);
  public final static native void Transform_setPosition(long jarg1, Transform jarg1_, double[] jarg2);
  public final static native void Transform_getOrientation(long jarg1, Transform jarg1_, long jarg2);
  public final static native void Transform_setOrientation(long jarg1, Transform jarg1_, long jarg2);
  public final static native void Transform_setIdentity(long jarg1, Transform jarg1_);
  public final static native void Transform_rotate(long jarg1, Transform jarg1_, double[] jarg2, int jarg3, int jarg4);
  public final static native void Transform_rotateX(long jarg1, Transform jarg1_, double jarg2, int jarg3);
  public final static native void Transform_rotateY(long jarg1, Transform jarg1_, double jarg2, int jarg3);
  public final static native void Transform_rotateZ(long jarg1, Transform jarg1_, double jarg2, int jarg3);
  public final static native void Transform_rotateAxis(long jarg1, Transform jarg1_, double jarg2, int jarg3, double[] jarg4);
  public final static native void Transform_rotateXBodyFixed(long jarg1, Transform jarg1_, double jarg2, int jarg3);
  public final static native void Transform_rotateYBodyFixed(long jarg1, Transform jarg1_, double jarg2, int jarg3);
  public final static native void Transform_rotateZBodyFixed(long jarg1, Transform jarg1_, double jarg2, int jarg3);
  public final static native void Transform_translateX(long jarg1, Transform jarg1_, double jarg2);
  public final static native void Transform_translateY(long jarg1, Transform jarg1_, double jarg2);
  public final static native void Transform_translateZ(long jarg1, Transform jarg1_, double jarg2);
  public final static native void Transform_translate(long jarg1, Transform jarg1_, double[] jarg2);
  public final static native void Transform_transformPoint__SWIG_0(long jarg1, Transform jarg1_, double[] jarg2);
  public final static native void Transform_transformPoint__SWIG_1(long jarg1, Transform jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void Transform_transformVector__SWIG_0(long jarg1, Transform jarg1_, double[] jarg2);
  public final static native void Transform_transformVector__SWIG_1(long jarg1, Transform jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native long Transform_getMatrix__SWIG_0(long jarg1, Transform jarg1_);
  public final static native void Transform_getMatrix__SWIG_1(long jarg1, Transform jarg1_, double[] jarg2);
  public final static native void Transform_setRotationSubmatrix(long jarg1, Transform jarg1_, long jarg2);
  public final static native long new_Geometry();
  public final static native void delete_Geometry(long jarg1);
  public final static native int Geometry_getShape(long jarg1, Geometry jarg1_);
  public final static native boolean Geometry_isAnalytic(long jarg1, Geometry jarg1_);
  public final static native void Geometry_setFixed(long jarg1, Geometry jarg1_, boolean jarg2);
  public final static native boolean Geometry_getFixed(long jarg1, Geometry jarg1_);
  public final static native long new_LineGeometry__SWIG_0(double[] jarg1, double[] jarg2);
  public final static native long new_LineGeometry__SWIG_1();
  public final static native void delete_LineGeometry(long jarg1);
  public final static native void LineGeometry_getPoints(long jarg1, LineGeometry jarg1_, double[] jarg2, double[] jarg3);
  public final static native void LineGeometry_setPoints(long jarg1, LineGeometry jarg1_, double[] jarg2, double[] jarg3);
  public final static native long LineGeometry_dynamic_cast(long jarg1, Geometry jarg1_);
  public final static native long new_ArrowGeometry(double[] jarg1, double[] jarg2, double jarg3);
  public final static native void delete_ArrowGeometry(long jarg1);
  public final static native long new_AnalyticGeometry(int jarg1);
  public final static native void delete_AnalyticGeometry(long jarg1);
  public final static native void AnalyticGeometry_setQuadrants(long jarg1, AnalyticGeometry jarg1_, boolean[] jarg2);
  public final static native void AnalyticGeometry_getQuadrants(long jarg1, AnalyticGeometry jarg1_, boolean[] jarg2);
  public final static native boolean AnalyticGeometry_isPiece(long jarg1, AnalyticGeometry jarg1_);
  public final static native long AnalyticGeometry_dynamic_cast(long jarg1, Geometry jarg1_);
  public final static native long new_AnalyticSphere__SWIG_0();
  public final static native long new_AnalyticSphere__SWIG_1(double jarg1);
  public final static native void delete_AnalyticSphere(long jarg1);
  public final static native double AnalyticSphere_getRadius(long jarg1, AnalyticSphere jarg1_);
  public final static native void AnalyticSphere_setSphereRadius(long jarg1, AnalyticSphere jarg1_, double jarg2);
  public final static native long AnalyticSphere_createSphere(double jarg1);
  public final static native long AnalyticSphere_dynamic_cast(long jarg1, Geometry jarg1_);
  public final static native long new_AnalyticEllipsoid__SWIG_0();
  public final static native long new_AnalyticEllipsoid__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native void delete_AnalyticEllipsoid(long jarg1);
  public final static native void AnalyticEllipsoid_setEllipsoidParams(long jarg1, AnalyticEllipsoid jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void AnalyticEllipsoid_getEllipsoidParams(long jarg1, AnalyticEllipsoid jarg1_, double[] jarg2);
  public final static native long AnalyticEllipsoid_dynamic_cast(long jarg1, Geometry jarg1_);
  public final static native long new_AnalyticCylinder__SWIG_0();
  public final static native long new_AnalyticCylinder__SWIG_1(double jarg1, double jarg2);
  public final static native void delete_AnalyticCylinder(long jarg1);
  public final static native void AnalyticCylinder_getCylinderParams(long jarg1, AnalyticCylinder jarg1_, double[] jarg2);
  public final static native long AnalyticCylinder_dynamic_cast(long jarg1, Geometry jarg1_);
  public final static native long new_AnalyticTorus__SWIG_0();
  public final static native long new_AnalyticTorus__SWIG_1(double jarg1, double jarg2);
  public final static native void delete_AnalyticTorus(long jarg1);
  public final static native void AnalyticTorus_getTorusParams(long jarg1, AnalyticTorus jarg1_, double[] jarg2);
  public final static native long AnalyticTorus_dynamic_cast(long jarg1, Geometry jarg1_);
  public final static native long new_PolyhedralGeometry(String jarg1);
  public final static native String PolyhedralGeometry_getGeometryFilename(long jarg1, PolyhedralGeometry jarg1_);
  public final static native void delete_PolyhedralGeometry(long jarg1);
  public final static native long new_VisibleObject__SWIG_0();
  public final static native long new_VisibleObject__SWIG_1(String jarg1);
  public final static native long new_VisibleObject__SWIG_2(long jarg1, VisibleObject jarg1_);
  public final static native void delete_VisibleObject(long jarg1);
  public final static native long VisibleObject_copy(long jarg1, VisibleObject jarg1_);
  public final static native void VisibleObject_setup(long jarg1, VisibleObject jarg1_, long jarg2, AbstractDynamicsEngine jarg2_);
  public final static native void VisibleObject_setOwner(long jarg1, VisibleObject jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native long VisibleObject_getOwner(long jarg1, VisibleObject jarg1_);
  public final static native void VisibleObject_setNumGeometryFiles(long jarg1, VisibleObject jarg1_, int jarg2);
  public final static native void VisibleObject_setGeometryFileName(long jarg1, VisibleObject jarg1_, int jarg2, String jarg3);
  public final static native int VisibleObject_getNumGeometryFiles(long jarg1, VisibleObject jarg1_);
  public final static native String VisibleObject_getGeometryFileName(long jarg1, VisibleObject jarg1_, int jarg2);
  public final static native void VisibleObject_setVisibleProperties(long jarg1, VisibleObject jarg1_, long jarg2, VisibleProperties jarg2_);
  public final static native long VisibleObject_getVisibleProperties(long jarg1, VisibleObject jarg1_);
  public final static native void VisibleObject_setTransform(long jarg1, VisibleObject jarg1_, long jarg2, Transform jarg2_);
  public final static native long VisibleObject_getTransform(long jarg1, VisibleObject jarg1_);
  public final static native void VisibleObject_setScaleFactors(long jarg1, VisibleObject jarg1_, double[] jarg2);
  public final static native void VisibleObject_getScaleFactors(long jarg1, VisibleObject jarg1_, double[] jarg2);
  public final static native void VisibleObject_rotateRadians__SWIG_0(long jarg1, VisibleObject jarg1_, double[] jarg2);
  public final static native void VisibleObject_rotateRadians__SWIG_1(long jarg1, VisibleObject jarg1_, double[] jarg2, int jarg3);
  public final static native void VisibleObject_rotateRadiansX(long jarg1, VisibleObject jarg1_, double jarg2);
  public final static native void VisibleObject_rotateRadiansY(long jarg1, VisibleObject jarg1_, double jarg2);
  public final static native void VisibleObject_rotateRadiansZ(long jarg1, VisibleObject jarg1_, double jarg2);
  public final static native void VisibleObject_rotateRadiansAxis(long jarg1, VisibleObject jarg1_, double jarg2, double[] jarg3);
  public final static native void VisibleObject_rotateDegrees__SWIG_0(long jarg1, VisibleObject jarg1_, double[] jarg2);
  public final static native void VisibleObject_rotateDegrees__SWIG_1(long jarg1, VisibleObject jarg1_, double[] jarg2, int jarg3);
  public final static native void VisibleObject_rotateDegreesX(long jarg1, VisibleObject jarg1_, double jarg2);
  public final static native void VisibleObject_rotateDegreesY(long jarg1, VisibleObject jarg1_, double jarg2);
  public final static native void VisibleObject_rotateDegreesZ(long jarg1, VisibleObject jarg1_, double jarg2);
  public final static native void VisibleObject_rotateDegreesAxis(long jarg1, VisibleObject jarg1_, double jarg2, double[] jarg3);
  public final static native void VisibleObject_translate(long jarg1, VisibleObject jarg1_, double[] jarg2);
  public final static native void VisibleObject_addDependent(long jarg1, VisibleObject jarg1_, long jarg2, VisibleObject jarg2_);
  public final static native boolean VisibleObject_hasDependent(long jarg1, VisibleObject jarg1_, long jarg2, VisibleObject jarg2_);
  public final static native void VisibleObject_removeDependent(long jarg1, VisibleObject jarg1_, long jarg2, VisibleObject jarg2_);
  public final static native int VisibleObject_countDependents(long jarg1, VisibleObject jarg1_);
  public final static native long VisibleObject_getDependent(long jarg1, VisibleObject jarg1_, int jarg2);
  public final static native void VisibleObject_addGeometry(long jarg1, VisibleObject jarg1_, long jarg2, Geometry jarg2_);
  public final static native void VisibleObject_removeGeometry(long jarg1, VisibleObject jarg1_, long jarg2, Geometry jarg2_);
  public final static native void VisibleObject_freeGeometry(long jarg1, VisibleObject jarg1_);
  public final static native long VisibleObject_getGeometry(long jarg1, VisibleObject jarg1_, int jarg2);
  public final static native int VisibleObject_countGeometry(long jarg1, VisibleObject jarg1_);
  public final static native long VisibleObject_getDefaultGeometry(long jarg1, VisibleObject jarg1_);
  public final static native void VisibleObject_updateGeometry(long jarg1, VisibleObject jarg1_);
  public final static native void VisibleObject_setupProperties(long jarg1, VisibleObject jarg1_);
  public final static native void delete_SetMaterials(long jarg1);
  public final static native long new_SetMaterials__SWIG_0();
  public final static native long new_SetMaterials__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_SetMaterials__SWIG_2(String jarg1);
  public final static native long new_SetMaterials__SWIG_3(long jarg1, SetMaterials jarg1_);
  public final static native long SetMaterials_copy(long jarg1, SetMaterials jarg1_);
  public final static native void SetMaterials_setup(long jarg1, SetMaterials jarg1_);
  public final static native void SetMaterials_setMemoryOwner(long jarg1, SetMaterials jarg1_, boolean jarg2);
  public final static native boolean SetMaterials_getMemoryOwner(long jarg1, SetMaterials jarg1_);
  public final static native boolean SetMaterials_computeNewCapacity(long jarg1, SetMaterials jarg1_, int jarg2, long jarg3);
  public final static native boolean SetMaterials_ensureCapacity(long jarg1, SetMaterials jarg1_, int jarg2);
  public final static native void SetMaterials_trim(long jarg1, SetMaterials jarg1_);
  public final static native int SetMaterials_getCapacity(long jarg1, SetMaterials jarg1_);
  public final static native void SetMaterials_setCapacityIncrement(long jarg1, SetMaterials jarg1_, int jarg2);
  public final static native int SetMaterials_getCapacityIncrement(long jarg1, SetMaterials jarg1_);
  public final static native boolean SetMaterials_setSize(long jarg1, SetMaterials jarg1_, int jarg2);
  public final static native int SetMaterials_getSize(long jarg1, SetMaterials jarg1_);
  public final static native int SetMaterials_getIndex__SWIG_0(long jarg1, SetMaterials jarg1_, long jarg2, Material jarg2_, int jarg3);
  public final static native int SetMaterials_getIndex__SWIG_1(long jarg1, SetMaterials jarg1_, long jarg2, Material jarg2_);
  public final static native int SetMaterials_getIndex__SWIG_2(long jarg1, SetMaterials jarg1_, String jarg2, int jarg3);
  public final static native int SetMaterials_getIndex__SWIG_3(long jarg1, SetMaterials jarg1_, String jarg2);
  public final static native void SetMaterials_getGroupNamesContaining(long jarg1, SetMaterials jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetMaterials_append__SWIG_0(long jarg1, SetMaterials jarg1_, long jarg2, Material jarg2_);
  public final static native boolean SetMaterials_append__SWIG_1(long jarg1, SetMaterials jarg1_, long jarg2);
  public final static native boolean SetMaterials_insert(long jarg1, SetMaterials jarg1_, int jarg2, long jarg3, Material jarg3_);
  public final static native boolean SetMaterials_remove__SWIG_0(long jarg1, SetMaterials jarg1_, int jarg2);
  public final static native boolean SetMaterials_remove__SWIG_1(long jarg1, SetMaterials jarg1_, long jarg2, Material jarg2_);
  public final static native void SetMaterials_clearAndDestroy(long jarg1, SetMaterials jarg1_);
  public final static native boolean SetMaterials_set(long jarg1, SetMaterials jarg1_, int jarg2, long jarg3, Material jarg3_);
  public final static native long SetMaterials_get__SWIG_0(long jarg1, SetMaterials jarg1_, int jarg2);
  public final static native long SetMaterials_get__SWIG_1(long jarg1, SetMaterials jarg1_, String jarg2);
  public final static native void SetMaterials_getNames(long jarg1, SetMaterials jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetMaterials_getLast(long jarg1, SetMaterials jarg1_);
  public final static native int SetMaterials_searchBinary__SWIG_0(long jarg1, SetMaterials jarg1_, long jarg2, Material jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int SetMaterials_searchBinary__SWIG_1(long jarg1, SetMaterials jarg1_, long jarg2, Material jarg2_, boolean jarg3, int jarg4);
  public final static native int SetMaterials_searchBinary__SWIG_2(long jarg1, SetMaterials jarg1_, long jarg2, Material jarg2_, boolean jarg3);
  public final static native int SetMaterials_searchBinary__SWIG_3(long jarg1, SetMaterials jarg1_, long jarg2, Material jarg2_);
  public final static native int SetMaterials_getNumGroups(long jarg1, SetMaterials jarg1_);
  public final static native void SetMaterials_addGroup(long jarg1, SetMaterials jarg1_, String jarg2);
  public final static native void SetMaterials_removeGroup(long jarg1, SetMaterials jarg1_, String jarg2);
  public final static native void SetMaterials_renameGroup(long jarg1, SetMaterials jarg1_, String jarg2, String jarg3);
  public final static native void SetMaterials_addObjectToGroup(long jarg1, SetMaterials jarg1_, String jarg2, String jarg3);
  public final static native void SetMaterials_getGroupNames(long jarg1, SetMaterials jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetMaterials_getGroup__SWIG_0(long jarg1, SetMaterials jarg1_, String jarg2);
  public final static native long SetMaterials_getGroup__SWIG_1(long jarg1, SetMaterials jarg1_, int jarg2);
  public final static native long new_MaterialSet__SWIG_0();
  public final static native long new_MaterialSet__SWIG_1(String jarg1);
  public final static native long new_MaterialSet__SWIG_2(long jarg1, MaterialSet jarg1_);
  public final static native void delete_MaterialSet(long jarg1);
  public final static native boolean MaterialSet_addMaterial(long jarg1, MaterialSet jarg1_, long jarg2, Material jarg2_);
  public final static native boolean MaterialSet_updateMaterial(long jarg1, MaterialSet jarg1_, long jarg2, Material jarg2_);
  public final static native boolean MaterialSet_removeMaterial(long jarg1, MaterialSet jarg1_, long jarg2, Material jarg2_);
  public final static native boolean MaterialSet_materialExists(long jarg1, MaterialSet jarg1_, String jarg2);
  public final static native int MaterialSet_getNumberOfMaterials(long jarg1, MaterialSet jarg1_);
  public final static native long MaterialSet_getMaterialByIndex(long jarg1, MaterialSet jarg1_, int jarg2);
  public final static native long MaterialSet_getMaterialByName(long jarg1, MaterialSet jarg1_, String jarg2);
  public final static native long new_StateVector__SWIG_0(double jarg1, int jarg2, long jarg3);
  public final static native long new_StateVector__SWIG_1(double jarg1, int jarg2);
  public final static native long new_StateVector__SWIG_2(double jarg1);
  public final static native long new_StateVector__SWIG_3();
  public final static native long new_StateVector__SWIG_4(long jarg1, StateVector jarg1_);
  public final static native void delete_StateVector(long jarg1);
  public final static native void StateVector_setStates(long jarg1, StateVector jarg1_, double jarg2, int jarg3, double[] jarg4);
  public final static native int StateVector_getSize(long jarg1, StateVector jarg1_);
  public final static native void StateVector_setTime(long jarg1, StateVector jarg1_, double jarg2);
  public final static native double StateVector_getTime(long jarg1, StateVector jarg1_);
  public final static native int StateVector_getDataValue(long jarg1, StateVector jarg1_, int jarg2, long jarg3);
  public final static native void StateVector_setDataValue(long jarg1, StateVector jarg1_, int jarg2, long jarg3);
  public final static native long StateVector_getData(long jarg1, StateVector jarg1_);
  public final static native void StateVector_shiftTime(long jarg1, StateVector jarg1_, double jarg2);
  public final static native void StateVector_scaleTime(long jarg1, StateVector jarg1_, double jarg2);
  public final static native void StateVector_add__SWIG_0(long jarg1, StateVector jarg1_, double jarg2);
  public final static native void StateVector_add__SWIG_1(long jarg1, StateVector jarg1_, int jarg2, double[] jarg3);
  public final static native void StateVector_add__SWIG_2(long jarg1, StateVector jarg1_, int jarg2, double jarg3);
  public final static native void StateVector_add__SWIG_3(long jarg1, StateVector jarg1_, long jarg2, StateVector jarg2_);
  public final static native void StateVector_subtract__SWIG_0(long jarg1, StateVector jarg1_, double jarg2);
  public final static native void StateVector_subtract__SWIG_1(long jarg1, StateVector jarg1_, int jarg2, double[] jarg3);
  public final static native void StateVector_subtract__SWIG_2(long jarg1, StateVector jarg1_, long jarg2, StateVector jarg2_);
  public final static native void StateVector_multiply__SWIG_0(long jarg1, StateVector jarg1_, double jarg2);
  public final static native void StateVector_multiply__SWIG_1(long jarg1, StateVector jarg1_, int jarg2, double[] jarg3);
  public final static native void StateVector_multiply__SWIG_2(long jarg1, StateVector jarg1_, long jarg2, StateVector jarg2_);
  public final static native void StateVector_divide__SWIG_0(long jarg1, StateVector jarg1_, double jarg2);
  public final static native void StateVector_divide__SWIG_1(long jarg1, StateVector jarg1_, int jarg2, double[] jarg3);
  public final static native void StateVector_divide__SWIG_2(long jarg1, StateVector jarg1_, long jarg2, StateVector jarg2_);
  public final static native void StateVector_print__SWIG_0(long jarg1, StateVector jarg1_);
  public final static native int StateVector_print__SWIG_1(long jarg1, StateVector jarg1_, long jarg2);
  public final static native int Storage_DEFAULT_CAPACITY_get();
  public final static native double Storage_LARGE_NEGATIVE_get();
  public final static native double Storage_LARGE_POSITIVE_get();
  public final static native void Storage_DEFAULT_HEADER_TOKEN_set(String jarg1);
  public final static native String Storage_DEFAULT_HEADER_TOKEN_get();
  public final static native void Storage_DEFAULT_HEADER_SEPARATOR_set(String jarg1);
  public final static native String Storage_DEFAULT_HEADER_SEPARATOR_get();
  public final static native long new_Storage__SWIG_0(int jarg1, String jarg2);
  public final static native long new_Storage__SWIG_1(int jarg1);
  public final static native long new_Storage__SWIG_2();
  public final static native long new_Storage__SWIG_3(String jarg1);
  public final static native long new_Storage__SWIG_4(long jarg1, Storage jarg1_, boolean jarg2);
  public final static native long new_Storage__SWIG_5(long jarg1, Storage jarg1_);
  public final static native long new_Storage__SWIG_6(long jarg1, Storage jarg1_, int jarg2, int jarg3, String jarg4);
  public final static native long new_Storage__SWIG_7(long jarg1, Storage jarg1_, int jarg2, int jarg3);
  public final static native long Storage_copy(long jarg1, Storage jarg1_);
  public final static native void delete_Storage(long jarg1);
  public final static native int Storage_getSize(long jarg1, Storage jarg1_);
  public final static native int Storage_getSmallestNumberOfStates(long jarg1, Storage jarg1_);
  public final static native long Storage_getStateVector(long jarg1, Storage jarg1_, int jarg2);
  public final static native long Storage_getLastStateVector(long jarg1, Storage jarg1_);
  public final static native double Storage_getFirstTime(long jarg1, Storage jarg1_);
  public final static native double Storage_getLastTime(long jarg1, Storage jarg1_);
  public final static native int Storage_getTime__SWIG_0(long jarg1, Storage jarg1_, int jarg2, long jarg3, int jarg4);
  public final static native int Storage_getTime__SWIG_1(long jarg1, Storage jarg1_, int jarg2, long jarg3);
  public final static native int Storage_getTimeColumn__SWIG_0(long jarg1, Storage jarg1_, long jarg2, int jarg3);
  public final static native int Storage_getTimeColumn__SWIG_1(long jarg1, Storage jarg1_, long jarg2);
  public final static native void Storage_getTimeColumn__SWIG_2(long jarg1, Storage jarg1_, long jarg2, ArrayDouble jarg2_, double jarg3);
  public final static native void Storage_getTimeColumn__SWIG_3(long jarg1, Storage jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void Storage_addKeyValuePair(long jarg1, Storage jarg1_, String jarg2, String jarg3);
  public final static native void Storage_getValueForKey(long jarg1, Storage jarg1_, String jarg2, long jarg3);
  public final static native boolean Storage_hasKey(long jarg1, Storage jarg1_, String jarg2);
  public final static native int Storage_getData__SWIG_0(long jarg1, Storage jarg1_, int jarg2, int jarg3, long jarg4);
  public final static native int Storage_getData__SWIG_1(long jarg1, Storage jarg1_, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native int Storage_getData__SWIG_2(long jarg1, Storage jarg1_, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native int Storage_getData__SWIG_3(long jarg1, Storage jarg1_, int jarg2, int jarg3, long jarg4);
  public final static native int Storage_getDataAtTime__SWIG_0(long jarg1, Storage jarg1_, double jarg2, int jarg3, long jarg4);
  public final static native int Storage_getDataAtTime__SWIG_1(long jarg1, Storage jarg1_, double jarg2, int jarg3, long jarg4);
  public final static native int Storage_getDataColumn__SWIG_0(long jarg1, Storage jarg1_, int jarg2, long jarg3);
  public final static native void Storage_setDataColumn(long jarg1, Storage jarg1_, int jarg2, long jarg3, ArrayDouble jarg3_);
  public final static native int Storage_getDataColumn__SWIG_1(long jarg1, Storage jarg1_, String jarg2, long jarg3);
  public final static native void Storage_getDataColumn__SWIG_2(long jarg1, Storage jarg1_, String jarg2, long jarg3, ArrayDouble jarg3_, double jarg4);
  public final static native void Storage_getDataColumn__SWIG_3(long jarg1, Storage jarg1_, String jarg2, long jarg3, ArrayDouble jarg3_);
  public final static native void Storage_setStepInterval(long jarg1, Storage jarg1_, int jarg2);
  public final static native int Storage_getStepInterval(long jarg1, Storage jarg1_);
  public final static native void Storage_setCapacityIncrement(long jarg1, Storage jarg1_, int jarg2);
  public final static native int Storage_getCapacityIncrement(long jarg1, Storage jarg1_);
  public final static native void Storage_setWriteSIMMHeader(long jarg1, Storage jarg1_, boolean jarg2);
  public final static native boolean Storage_getWriteSIMMHeader(long jarg1, Storage jarg1_);
  public final static native void Storage_setHeaderToken(long jarg1, Storage jarg1_, String jarg2);
  public final static native String Storage_getHeaderToken(long jarg1, Storage jarg1_);
  public final static native int Storage_getStateIndex__SWIG_0(long jarg1, Storage jarg1_, String jarg2, int jarg3);
  public final static native int Storage_getStateIndex__SWIG_1(long jarg1, Storage jarg1_, String jarg2);
  public final static native void Storage_setColumnLabels(long jarg1, Storage jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long Storage_getColumnLabels(long jarg1, Storage jarg1_);
  public final static native int Storage_reset__SWIG_0(long jarg1, Storage jarg1_, int jarg2);
  public final static native int Storage_reset__SWIG_1(long jarg1, Storage jarg1_);
  public final static native int Storage_reset__SWIG_2(long jarg1, Storage jarg1_, double jarg2);
  public final static native int Storage_append__SWIG_0(long jarg1, Storage jarg1_, long jarg2, StateVector jarg2_, boolean jarg3);
  public final static native int Storage_append__SWIG_1(long jarg1, Storage jarg1_, long jarg2, StateVector jarg2_);
  public final static native int Storage_append__SWIG_2(long jarg1, Storage jarg1_, long jarg2);
  public final static native int Storage_append__SWIG_3(long jarg1, Storage jarg1_, double jarg2, int jarg3, long jarg4, boolean jarg5);
  public final static native int Storage_append__SWIG_4(long jarg1, Storage jarg1_, double jarg2, int jarg3, long jarg4);
  public final static native int Storage_store(long jarg1, Storage jarg1_, int jarg2, double jarg3, int jarg4, long jarg5);
  public final static native void Storage_shiftTime(long jarg1, Storage jarg1_, double jarg2);
  public final static native void Storage_scaleTime(long jarg1, Storage jarg1_, double jarg2);
  public final static native void Storage_add__SWIG_0(long jarg1, Storage jarg1_, double jarg2);
  public final static native void Storage_add__SWIG_1(long jarg1, Storage jarg1_, int jarg2, double[] jarg3);
  public final static native void Storage_add__SWIG_2(long jarg1, Storage jarg1_, int jarg2, double jarg3);
  public final static native void Storage_add__SWIG_3(long jarg1, Storage jarg1_, long jarg2, StateVector jarg2_);
  public final static native void Storage_add__SWIG_4(long jarg1, Storage jarg1_, long jarg2, Storage jarg2_);
  public final static native void Storage_subtract__SWIG_0(long jarg1, Storage jarg1_, double jarg2);
  public final static native void Storage_subtract__SWIG_1(long jarg1, Storage jarg1_, int jarg2, double[] jarg3);
  public final static native void Storage_subtract__SWIG_2(long jarg1, Storage jarg1_, long jarg2, StateVector jarg2_);
  public final static native void Storage_subtract__SWIG_3(long jarg1, Storage jarg1_, long jarg2, Storage jarg2_);
  public final static native void Storage_multiply__SWIG_0(long jarg1, Storage jarg1_, double jarg2);
  public final static native void Storage_multiplyColumn(long jarg1, Storage jarg1_, int jarg2, double jarg3);
  public final static native void Storage_multiply__SWIG_1(long jarg1, Storage jarg1_, int jarg2, double[] jarg3);
  public final static native void Storage_multiply__SWIG_2(long jarg1, Storage jarg1_, long jarg2, StateVector jarg2_);
  public final static native void Storage_multiply__SWIG_3(long jarg1, Storage jarg1_, long jarg2, Storage jarg2_);
  public final static native void Storage_divide__SWIG_0(long jarg1, Storage jarg1_, double jarg2);
  public final static native void Storage_divide__SWIG_1(long jarg1, Storage jarg1_, int jarg2, double[] jarg3);
  public final static native void Storage_divide__SWIG_2(long jarg1, Storage jarg1_, long jarg2, StateVector jarg2_);
  public final static native void Storage_divide__SWIG_3(long jarg1, Storage jarg1_, long jarg2, Storage jarg2_);
  public final static native long Storage_integrate__SWIG_0(long jarg1, Storage jarg1_, int jarg2, int jarg3);
  public final static native long Storage_integrate__SWIG_1(long jarg1, Storage jarg1_, int jarg2);
  public final static native long Storage_integrate__SWIG_2(long jarg1, Storage jarg1_);
  public final static native long Storage_integrate__SWIG_3(long jarg1, Storage jarg1_, double jarg2, double jarg3);
  public final static native int Storage_computeArea__SWIG_0(long jarg1, Storage jarg1_, int jarg2, long jarg3);
  public final static native int Storage_computeArea__SWIG_1(long jarg1, Storage jarg1_, double jarg2, double jarg3, int jarg4, long jarg5);
  public final static native int Storage_computeAverage__SWIG_0(long jarg1, Storage jarg1_, int jarg2, long jarg3);
  public final static native int Storage_computeAverage__SWIG_1(long jarg1, Storage jarg1_, double jarg2, double jarg3, int jarg4, long jarg5);
  public final static native void Storage_pad(long jarg1, Storage jarg1_, int jarg2);
  public final static native void Storage_lowpassFIR(long jarg1, Storage jarg1_, int jarg2, double jarg3);
  public final static native void Storage_addToRdStorage(long jarg1, Storage jarg1_, long jarg2, Storage jarg2_, double jarg3, double jarg4);
  public final static native int Storage_findIndex__SWIG_0(long jarg1, Storage jarg1_, double jarg2);
  public final static native int Storage_findIndex__SWIG_1(long jarg1, Storage jarg1_, int jarg2, double jarg3);
  public final static native void Storage_resample(long jarg1, Storage jarg1_, double jarg2, int jarg3);
  public final static native void Storage_print__SWIG_0(long jarg1, Storage jarg1_);
  public final static native boolean Storage_print__SWIG_1(long jarg1, Storage jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native boolean Storage_print__SWIG_2(long jarg1, Storage jarg1_, String jarg2, String jarg3);
  public final static native boolean Storage_print__SWIG_3(long jarg1, Storage jarg1_, String jarg2);
  public final static native int Storage_print__SWIG_4(long jarg1, Storage jarg1_, String jarg2, double jarg3, String jarg4);
  public final static native int Storage_print__SWIG_5(long jarg1, Storage jarg1_, String jarg2, double jarg3);
  public final static native void Storage_printResult(long jarg1, Storage jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native double AbstractActuator_LARGE_get();
  public final static native void delete_AbstractActuator(long jarg1);
  public final static native long AbstractActuator_copy__SWIG_0(long jarg1, AbstractActuator jarg1_);
  public final static native void AbstractActuator_copy__SWIG_1(long jarg1, AbstractActuator jarg1_, long jarg2, AbstractActuator jarg2_);
  public final static native void AbstractActuator_setup(long jarg1, AbstractActuator jarg1_, long jarg2, Model jarg2_);
  public final static native void AbstractActuator_setModel(long jarg1, AbstractActuator jarg1_, long jarg2, Model jarg2_);
  public final static native long AbstractActuator_getModel(long jarg1, AbstractActuator jarg1_);
  public final static native int AbstractActuator_getNumControls(long jarg1, AbstractActuator jarg1_);
  public final static native String AbstractActuator_getControlName(long jarg1, AbstractActuator jarg1_, int jarg2);
  public final static native int AbstractActuator_getControlIndex(long jarg1, AbstractActuator jarg1_, String jarg2);
  public final static native void AbstractActuator_setControl(long jarg1, AbstractActuator jarg1_, int jarg2, double jarg3);
  public final static native void AbstractActuator_setControls(long jarg1, AbstractActuator jarg1_, double[] jarg2);
  public final static native double AbstractActuator_getControl(long jarg1, AbstractActuator jarg1_, int jarg2);
  public final static native void AbstractActuator_getControls(long jarg1, AbstractActuator jarg1_, double[] jarg2);
  public final static native int AbstractActuator_getNumStates(long jarg1, AbstractActuator jarg1_);
  public final static native String AbstractActuator_getStateName(long jarg1, AbstractActuator jarg1_, int jarg2);
  public final static native int AbstractActuator_getStateIndex(long jarg1, AbstractActuator jarg1_, String jarg2);
  public final static native void AbstractActuator_setState(long jarg1, AbstractActuator jarg1_, int jarg2, double jarg3);
  public final static native void AbstractActuator_setStates(long jarg1, AbstractActuator jarg1_, double[] jarg2);
  public final static native double AbstractActuator_getState(long jarg1, AbstractActuator jarg1_, int jarg2);
  public final static native void AbstractActuator_getStates(long jarg1, AbstractActuator jarg1_, double[] jarg2);
  public final static native int AbstractActuator_getNumPseudoStates(long jarg1, AbstractActuator jarg1_);
  public final static native String AbstractActuator_getPseudoStateName(long jarg1, AbstractActuator jarg1_, int jarg2);
  public final static native int AbstractActuator_getPseudoStateIndex(long jarg1, AbstractActuator jarg1_, String jarg2);
  public final static native void AbstractActuator_setPseudoState(long jarg1, AbstractActuator jarg1_, int jarg2, double jarg3);
  public final static native void AbstractActuator_setPseudoStates(long jarg1, AbstractActuator jarg1_, double[] jarg2);
  public final static native double AbstractActuator_getPseudoState(long jarg1, AbstractActuator jarg1_, int jarg2);
  public final static native void AbstractActuator_getPseudoStates(long jarg1, AbstractActuator jarg1_, double[] jarg2);
  public final static native long AbstractActuator_getDisplayer(long jarg1, AbstractActuator jarg1_);
  public final static native void AbstractActuator_updateGeometry(long jarg1, AbstractActuator jarg1_);
  public final static native boolean AbstractActuator_isKindOf(String jarg1);
  public final static native boolean AbstractActuator_isA(long jarg1, AbstractActuator jarg1_, String jarg2);
  public final static native long AbstractActuator_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void AbstractActuator_copy__SWIG_2(long jarg1, AbstractActuator jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native boolean AbstractActuator_getAppliesForce(long jarg1, AbstractActuator jarg1_);
  public final static native void AbstractActuator_setForce(long jarg1, AbstractActuator jarg1_, double jarg2);
  public final static native double AbstractActuator_getForce(long jarg1, AbstractActuator jarg1_);
  public final static native double AbstractActuator_getSpeed(long jarg1, AbstractActuator jarg1_);
  public final static native double AbstractActuator_getPower(long jarg1, AbstractActuator jarg1_);
  public final static native double AbstractActuator_getStress(long jarg1, AbstractActuator jarg1_);
  public final static native void AbstractActuator_promoteControlsToStates(long jarg1, AbstractActuator jarg1_, double[] jarg2, double jarg3);
  public final static native void AbstractActuator_computeActuation(long jarg1, AbstractActuator jarg1_);
  public final static native void AbstractActuator_computeStateDerivatives(long jarg1, AbstractActuator jarg1_, double[] jarg2);
  public final static native void AbstractActuator_computeEquilibrium(long jarg1, AbstractActuator jarg1_);
  public final static native void AbstractActuator_updatePseudoStates(long jarg1, AbstractActuator jarg1_);
  public final static native void AbstractActuator_apply(long jarg1, AbstractActuator jarg1_);
  public final static native boolean AbstractActuator_check(long jarg1, AbstractActuator jarg1_);
  public final static native void AbstractActuator_preScale(long jarg1, AbstractActuator jarg1_, long jarg2);
  public final static native void AbstractActuator_scale(long jarg1, AbstractActuator jarg1_, long jarg2);
  public final static native void AbstractActuator_postScale(long jarg1, AbstractActuator jarg1_, long jarg2);
  public final static native void delete_SetActuators(long jarg1);
  public final static native long new_SetActuators__SWIG_0();
  public final static native long new_SetActuators__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_SetActuators__SWIG_2(String jarg1);
  public final static native long new_SetActuators__SWIG_3(long jarg1, SetActuators jarg1_);
  public final static native long SetActuators_copy(long jarg1, SetActuators jarg1_);
  public final static native void SetActuators_setup(long jarg1, SetActuators jarg1_);
  public final static native void SetActuators_setMemoryOwner(long jarg1, SetActuators jarg1_, boolean jarg2);
  public final static native boolean SetActuators_getMemoryOwner(long jarg1, SetActuators jarg1_);
  public final static native boolean SetActuators_computeNewCapacity(long jarg1, SetActuators jarg1_, int jarg2, long jarg3);
  public final static native boolean SetActuators_ensureCapacity(long jarg1, SetActuators jarg1_, int jarg2);
  public final static native void SetActuators_trim(long jarg1, SetActuators jarg1_);
  public final static native int SetActuators_getCapacity(long jarg1, SetActuators jarg1_);
  public final static native void SetActuators_setCapacityIncrement(long jarg1, SetActuators jarg1_, int jarg2);
  public final static native int SetActuators_getCapacityIncrement(long jarg1, SetActuators jarg1_);
  public final static native boolean SetActuators_setSize(long jarg1, SetActuators jarg1_, int jarg2);
  public final static native int SetActuators_getSize(long jarg1, SetActuators jarg1_);
  public final static native int SetActuators_getIndex__SWIG_0(long jarg1, SetActuators jarg1_, long jarg2, AbstractActuator jarg2_, int jarg3);
  public final static native int SetActuators_getIndex__SWIG_1(long jarg1, SetActuators jarg1_, long jarg2, AbstractActuator jarg2_);
  public final static native int SetActuators_getIndex__SWIG_2(long jarg1, SetActuators jarg1_, String jarg2, int jarg3);
  public final static native int SetActuators_getIndex__SWIG_3(long jarg1, SetActuators jarg1_, String jarg2);
  public final static native void SetActuators_getGroupNamesContaining(long jarg1, SetActuators jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetActuators_append__SWIG_0(long jarg1, SetActuators jarg1_, long jarg2, AbstractActuator jarg2_);
  public final static native boolean SetActuators_append__SWIG_1(long jarg1, SetActuators jarg1_, long jarg2);
  public final static native boolean SetActuators_insert(long jarg1, SetActuators jarg1_, int jarg2, long jarg3, AbstractActuator jarg3_);
  public final static native boolean SetActuators_remove__SWIG_0(long jarg1, SetActuators jarg1_, int jarg2);
  public final static native boolean SetActuators_remove__SWIG_1(long jarg1, SetActuators jarg1_, long jarg2, AbstractActuator jarg2_);
  public final static native void SetActuators_clearAndDestroy(long jarg1, SetActuators jarg1_);
  public final static native boolean SetActuators_set(long jarg1, SetActuators jarg1_, int jarg2, long jarg3, AbstractActuator jarg3_);
  public final static native long SetActuators_get__SWIG_0(long jarg1, SetActuators jarg1_, int jarg2);
  public final static native long SetActuators_get__SWIG_1(long jarg1, SetActuators jarg1_, String jarg2);
  public final static native void SetActuators_getNames(long jarg1, SetActuators jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetActuators_getLast(long jarg1, SetActuators jarg1_);
  public final static native int SetActuators_searchBinary__SWIG_0(long jarg1, SetActuators jarg1_, long jarg2, AbstractActuator jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int SetActuators_searchBinary__SWIG_1(long jarg1, SetActuators jarg1_, long jarg2, AbstractActuator jarg2_, boolean jarg3, int jarg4);
  public final static native int SetActuators_searchBinary__SWIG_2(long jarg1, SetActuators jarg1_, long jarg2, AbstractActuator jarg2_, boolean jarg3);
  public final static native int SetActuators_searchBinary__SWIG_3(long jarg1, SetActuators jarg1_, long jarg2, AbstractActuator jarg2_);
  public final static native int SetActuators_getNumGroups(long jarg1, SetActuators jarg1_);
  public final static native void SetActuators_addGroup(long jarg1, SetActuators jarg1_, String jarg2);
  public final static native void SetActuators_removeGroup(long jarg1, SetActuators jarg1_, String jarg2);
  public final static native void SetActuators_renameGroup(long jarg1, SetActuators jarg1_, String jarg2, String jarg3);
  public final static native void SetActuators_addObjectToGroup(long jarg1, SetActuators jarg1_, String jarg2, String jarg3);
  public final static native void SetActuators_getGroupNames(long jarg1, SetActuators jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetActuators_getGroup__SWIG_0(long jarg1, SetActuators jarg1_, String jarg2);
  public final static native long SetActuators_getGroup__SWIG_1(long jarg1, SetActuators jarg1_, int jarg2);
  public final static native long new_ActuatorSet__SWIG_0();
  public final static native long new_ActuatorSet__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_ActuatorSet__SWIG_2(String jarg1);
  public final static native long new_ActuatorSet__SWIG_3(long jarg1, ActuatorSet jarg1_);
  public final static native void delete_ActuatorSet(long jarg1);
  public final static native long ActuatorSet_copy(long jarg1, ActuatorSet jarg1_);
  public final static native void ActuatorSet_copyData(long jarg1, ActuatorSet jarg1_, long jarg2, ActuatorSet jarg2_);
  public final static native void ActuatorSet_setup(long jarg1, ActuatorSet jarg1_, long jarg2, Model jarg2_);
  public final static native void ActuatorSet_updateGeometry(long jarg1, ActuatorSet jarg1_);
  public final static native void ActuatorSet_setModel(long jarg1, ActuatorSet jarg1_, long jarg2, Model jarg2_);
  public final static native long ActuatorSet_getModel(long jarg1, ActuatorSet jarg1_);
  public final static native boolean ActuatorSet_remove(long jarg1, ActuatorSet jarg1_, int jarg2);
  public final static native boolean ActuatorSet_append__SWIG_0(long jarg1, ActuatorSet jarg1_, long jarg2, AbstractActuator jarg2_);
  public final static native boolean ActuatorSet_append__SWIG_1(long jarg1, ActuatorSet jarg1_, long jarg2, ActuatorSet jarg2_, boolean jarg3);
  public final static native boolean ActuatorSet_append__SWIG_2(long jarg1, ActuatorSet jarg1_, long jarg2, ActuatorSet jarg2_);
  public final static native boolean ActuatorSet_set(long jarg1, ActuatorSet jarg1_, int jarg2, long jarg3, AbstractActuator jarg3_);
  public final static native void ActuatorSet_changeActuatorType(long jarg1, ActuatorSet jarg1_, long jarg2, AbstractActuator jarg2_, String jarg3);
  public final static native int ActuatorSet_getNumControls(long jarg1, ActuatorSet jarg1_);
  public final static native int ActuatorSet_mapActuatorToControl(long jarg1, ActuatorSet jarg1_, int jarg2);
  public final static native int ActuatorSet_mapControlToActuator__SWIG_0(long jarg1, ActuatorSet jarg1_, int jarg2);
  public final static native long ActuatorSet_mapControlToActuator__SWIG_1(long jarg1, ActuatorSet jarg1_, int jarg2, long jarg3);
  public final static native int ActuatorSet_getControlIndex(long jarg1, ActuatorSet jarg1_, String jarg2);
  public final static native String ActuatorSet_getControlName(long jarg1, ActuatorSet jarg1_, int jarg2);
  public final static native void ActuatorSet_setControl__SWIG_0(long jarg1, ActuatorSet jarg1_, int jarg2, double jarg3);
  public final static native void ActuatorSet_setControl__SWIG_1(long jarg1, ActuatorSet jarg1_, String jarg2, double jarg3);
  public final static native void ActuatorSet_setControls(long jarg1, ActuatorSet jarg1_, double[] jarg2);
  public final static native double ActuatorSet_getControl__SWIG_0(long jarg1, ActuatorSet jarg1_, int jarg2);
  public final static native double ActuatorSet_getControl__SWIG_1(long jarg1, ActuatorSet jarg1_, String jarg2);
  public final static native void ActuatorSet_getControls(long jarg1, ActuatorSet jarg1_, double[] jarg2);
  public final static native int ActuatorSet_getNumStates(long jarg1, ActuatorSet jarg1_);
  public final static native int ActuatorSet_mapActuatorToState(long jarg1, ActuatorSet jarg1_, int jarg2);
  public final static native int ActuatorSet_mapStateToActuator__SWIG_0(long jarg1, ActuatorSet jarg1_, int jarg2);
  public final static native long ActuatorSet_mapStateToActuator__SWIG_1(long jarg1, ActuatorSet jarg1_, int jarg2, long jarg3);
  public final static native int ActuatorSet_getStateIndex(long jarg1, ActuatorSet jarg1_, String jarg2);
  public final static native String ActuatorSet_getStateName(long jarg1, ActuatorSet jarg1_, int jarg2);
  public final static native void ActuatorSet_getStateNames(long jarg1, ActuatorSet jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native void ActuatorSet_setState__SWIG_0(long jarg1, ActuatorSet jarg1_, int jarg2, double jarg3);
  public final static native void ActuatorSet_setState__SWIG_1(long jarg1, ActuatorSet jarg1_, String jarg2, double jarg3);
  public final static native void ActuatorSet_setStates(long jarg1, ActuatorSet jarg1_, double[] jarg2);
  public final static native double ActuatorSet_getState__SWIG_0(long jarg1, ActuatorSet jarg1_, int jarg2);
  public final static native double ActuatorSet_getState__SWIG_1(long jarg1, ActuatorSet jarg1_, String jarg2);
  public final static native void ActuatorSet_getStates(long jarg1, ActuatorSet jarg1_, double[] jarg2);
  public final static native int ActuatorSet_getNumPseudoStates(long jarg1, ActuatorSet jarg1_);
  public final static native int ActuatorSet_mapActuatorToPseudoState(long jarg1, ActuatorSet jarg1_, int jarg2);
  public final static native int ActuatorSet_mapPseudoStateToActuator__SWIG_0(long jarg1, ActuatorSet jarg1_, int jarg2);
  public final static native long ActuatorSet_mapPseudoStateToActuator__SWIG_1(long jarg1, ActuatorSet jarg1_, int jarg2, long jarg3);
  public final static native int ActuatorSet_getPseudoStateIndex(long jarg1, ActuatorSet jarg1_, String jarg2);
  public final static native String ActuatorSet_getPseudoStateName(long jarg1, ActuatorSet jarg1_, int jarg2);
  public final static native void ActuatorSet_setPseudoState__SWIG_0(long jarg1, ActuatorSet jarg1_, int jarg2, double jarg3);
  public final static native void ActuatorSet_setPseudoState__SWIG_1(long jarg1, ActuatorSet jarg1_, String jarg2, double jarg3);
  public final static native void ActuatorSet_setPseudoStates(long jarg1, ActuatorSet jarg1_, double[] jarg2);
  public final static native double ActuatorSet_getPseudoState__SWIG_0(long jarg1, ActuatorSet jarg1_, int jarg2);
  public final static native double ActuatorSet_getPseudoState__SWIG_1(long jarg1, ActuatorSet jarg1_, String jarg2);
  public final static native void ActuatorSet_getPseudoStates(long jarg1, ActuatorSet jarg1_, double[] jarg2);
  public final static native void ActuatorSet_setComputeActuationEnabled(long jarg1, ActuatorSet jarg1_, boolean jarg2);
  public final static native void ActuatorSet_promoteControlsToStates(long jarg1, ActuatorSet jarg1_, double[] jarg2, double jarg3);
  public final static native void ActuatorSet_computeActuation(long jarg1, ActuatorSet jarg1_);
  public final static native void ActuatorSet_computeStateDerivatives(long jarg1, ActuatorSet jarg1_, double[] jarg2);
  public final static native void ActuatorSet_computeEquilibrium(long jarg1, ActuatorSet jarg1_);
  public final static native void ActuatorSet_updatePseudoStates(long jarg1, ActuatorSet jarg1_);
  public final static native void ActuatorSet_apply(long jarg1, ActuatorSet jarg1_);
  public final static native boolean ActuatorSet_check(long jarg1, ActuatorSet jarg1_);
  public final static native void ActuatorSet_peteTest(long jarg1, ActuatorSet jarg1_);
  public final static native long new_ContactForceSet__SWIG_0();
  public final static native long new_ContactForceSet__SWIG_1(String jarg1);
  public final static native long new_ContactForceSet__SWIG_2(long jarg1, ContactForceSet jarg1_);
  public final static native void delete_ContactForceSet(long jarg1);
  public final static native long ContactForceSet_copy(long jarg1, ContactForceSet jarg1_);
  public final static native void ContactForceSet_copyData(long jarg1, ContactForceSet jarg1_, long jarg2, ContactForceSet jarg2_);
  public final static native boolean ContactForceSet_append(long jarg1, ContactForceSet jarg1_, long jarg2);
  public final static native boolean ContactForceSet_set(long jarg1, ContactForceSet jarg1_, int jarg2, long jarg3);
  public final static native long ContactForceSet_getContactBodyA(long jarg1, ContactForceSet jarg1_, int jarg2);
  public final static native long ContactForceSet_getContactBodyB(long jarg1, ContactForceSet jarg1_, int jarg2);
  public final static native void ContactForceSet_setContactPointA(long jarg1, ContactForceSet jarg1_, int jarg2, double[] jarg3);
  public final static native void ContactForceSet_getContactPointA(long jarg1, ContactForceSet jarg1_, int jarg2, double[] jarg3);
  public final static native void ContactForceSet_setContactPointB(long jarg1, ContactForceSet jarg1_, int jarg2, double[] jarg3);
  public final static native void ContactForceSet_getContactPointB(long jarg1, ContactForceSet jarg1_, int jarg2, double[] jarg3);
  public final static native void ContactForceSet_getContactForce__SWIG_0(long jarg1, ContactForceSet jarg1_, int jarg2, double[] jarg3);
  public final static native void ContactForceSet_getContactNormalForce(long jarg1, ContactForceSet jarg1_, int jarg2, double[] jarg3, double[] jarg4, double[] jarg5);
  public final static native void ContactForceSet_getContactTangentForce(long jarg1, ContactForceSet jarg1_, int jarg2, double[] jarg3, double[] jarg4, double[] jarg5);
  public final static native void ContactForceSet_getContactStiffness(long jarg1, ContactForceSet jarg1_, int jarg2, double[] jarg3, double[] jarg4);
  public final static native void ContactForceSet_getContactViscosity(long jarg1, ContactForceSet jarg1_, int jarg2, double[] jarg3, double[] jarg4);
  public final static native void ContactForceSet_getContactFrictionCorrection(long jarg1, ContactForceSet jarg1_, int jarg2, double[] jarg3);
  public final static native double ContactForceSet_getContactForce__SWIG_1(long jarg1, ContactForceSet jarg1_, int jarg2);
  public final static native double ContactForceSet_getContactSpeed(long jarg1, ContactForceSet jarg1_, int jarg2);
  public final static native double ContactForceSet_getContactPower(long jarg1, ContactForceSet jarg1_, int jarg2);
  public final static native void ContactForceSet_computeContact(long jarg1, ContactForceSet jarg1_);
  public final static native void ContactForceSet_updatePseudoStates(long jarg1, ContactForceSet jarg1_);
  public final static native void ContactForceSet_apply(long jarg1, ContactForceSet jarg1_);
  public final static native boolean ContactForceSet_check(long jarg1, ContactForceSet jarg1_);
  public final static native long new_Callback__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_Callback__SWIG_1();
  public final static native long new_Callback__SWIG_2(long jarg1, Callback jarg1_);
  public final static native long new_Callback__SWIG_3(String jarg1, boolean jarg2);
  public final static native long new_Callback__SWIG_4(String jarg1);
  public final static native void delete_Callback(long jarg1);
  public final static native long Callback_copy(long jarg1, Callback jarg1_);
  public final static native void Callback_setModel(long jarg1, Callback jarg1_, long jarg2, Model jarg2_);
  public final static native long Callback_getModel(long jarg1, Callback jarg1_);
  public final static native void Callback_setOn(long jarg1, Callback jarg1_, boolean jarg2);
  public final static native boolean Callback_getOn(long jarg1, Callback jarg1_);
  public final static native void Callback_setStartTime(long jarg1, Callback jarg1_, double jarg2);
  public final static native double Callback_getStartTime(long jarg1, Callback jarg1_);
  public final static native void Callback_setEndTime(long jarg1, Callback jarg1_, double jarg2);
  public final static native double Callback_getEndTime(long jarg1, Callback jarg1_);
  public final static native void delete_SetCallback(long jarg1);
  public final static native long new_SetCallback__SWIG_0();
  public final static native long new_SetCallback__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_SetCallback__SWIG_2(String jarg1);
  public final static native long new_SetCallback__SWIG_3(long jarg1, SetCallback jarg1_);
  public final static native long SetCallback_copy(long jarg1, SetCallback jarg1_);
  public final static native void SetCallback_setup(long jarg1, SetCallback jarg1_);
  public final static native void SetCallback_setMemoryOwner(long jarg1, SetCallback jarg1_, boolean jarg2);
  public final static native boolean SetCallback_getMemoryOwner(long jarg1, SetCallback jarg1_);
  public final static native boolean SetCallback_computeNewCapacity(long jarg1, SetCallback jarg1_, int jarg2, long jarg3);
  public final static native boolean SetCallback_ensureCapacity(long jarg1, SetCallback jarg1_, int jarg2);
  public final static native void SetCallback_trim(long jarg1, SetCallback jarg1_);
  public final static native int SetCallback_getCapacity(long jarg1, SetCallback jarg1_);
  public final static native void SetCallback_setCapacityIncrement(long jarg1, SetCallback jarg1_, int jarg2);
  public final static native int SetCallback_getCapacityIncrement(long jarg1, SetCallback jarg1_);
  public final static native boolean SetCallback_setSize(long jarg1, SetCallback jarg1_, int jarg2);
  public final static native int SetCallback_getSize(long jarg1, SetCallback jarg1_);
  public final static native int SetCallback_getIndex__SWIG_0(long jarg1, SetCallback jarg1_, long jarg2, Callback jarg2_, int jarg3);
  public final static native int SetCallback_getIndex__SWIG_1(long jarg1, SetCallback jarg1_, long jarg2, Callback jarg2_);
  public final static native int SetCallback_getIndex__SWIG_2(long jarg1, SetCallback jarg1_, String jarg2, int jarg3);
  public final static native int SetCallback_getIndex__SWIG_3(long jarg1, SetCallback jarg1_, String jarg2);
  public final static native void SetCallback_getGroupNamesContaining(long jarg1, SetCallback jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetCallback_append__SWIG_0(long jarg1, SetCallback jarg1_, long jarg2, Callback jarg2_);
  public final static native boolean SetCallback_append__SWIG_1(long jarg1, SetCallback jarg1_, long jarg2);
  public final static native boolean SetCallback_insert(long jarg1, SetCallback jarg1_, int jarg2, long jarg3, Callback jarg3_);
  public final static native boolean SetCallback_remove__SWIG_0(long jarg1, SetCallback jarg1_, int jarg2);
  public final static native boolean SetCallback_remove__SWIG_1(long jarg1, SetCallback jarg1_, long jarg2, Callback jarg2_);
  public final static native void SetCallback_clearAndDestroy(long jarg1, SetCallback jarg1_);
  public final static native boolean SetCallback_set(long jarg1, SetCallback jarg1_, int jarg2, long jarg3, Callback jarg3_);
  public final static native long SetCallback_get__SWIG_0(long jarg1, SetCallback jarg1_, int jarg2);
  public final static native long SetCallback_get__SWIG_1(long jarg1, SetCallback jarg1_, String jarg2);
  public final static native void SetCallback_getNames(long jarg1, SetCallback jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetCallback_getLast(long jarg1, SetCallback jarg1_);
  public final static native int SetCallback_searchBinary__SWIG_0(long jarg1, SetCallback jarg1_, long jarg2, Callback jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int SetCallback_searchBinary__SWIG_1(long jarg1, SetCallback jarg1_, long jarg2, Callback jarg2_, boolean jarg3, int jarg4);
  public final static native int SetCallback_searchBinary__SWIG_2(long jarg1, SetCallback jarg1_, long jarg2, Callback jarg2_, boolean jarg3);
  public final static native int SetCallback_searchBinary__SWIG_3(long jarg1, SetCallback jarg1_, long jarg2, Callback jarg2_);
  public final static native int SetCallback_getNumGroups(long jarg1, SetCallback jarg1_);
  public final static native void SetCallback_addGroup(long jarg1, SetCallback jarg1_, String jarg2);
  public final static native void SetCallback_removeGroup(long jarg1, SetCallback jarg1_, String jarg2);
  public final static native void SetCallback_renameGroup(long jarg1, SetCallback jarg1_, String jarg2, String jarg3);
  public final static native void SetCallback_addObjectToGroup(long jarg1, SetCallback jarg1_, String jarg2, String jarg3);
  public final static native void SetCallback_getGroupNames(long jarg1, SetCallback jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetCallback_getGroup__SWIG_0(long jarg1, SetCallback jarg1_, String jarg2);
  public final static native long SetCallback_getGroup__SWIG_1(long jarg1, SetCallback jarg1_, int jarg2);
  public final static native long new_CallbackSet__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_CallbackSet__SWIG_1();
  public final static native void delete_CallbackSet(long jarg1);
  public final static native long CallbackSet_getModel(long jarg1, CallbackSet jarg1_);
  public final static native void CallbackSet_setOn(long jarg1, CallbackSet jarg1_, boolean jarg2);
  public final static native long new_IntegCallback__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_IntegCallback__SWIG_1();
  public final static native long new_IntegCallback__SWIG_2(String jarg1, boolean jarg2);
  public final static native long new_IntegCallback__SWIG_3(String jarg1);
  public final static native long new_IntegCallback__SWIG_4(long jarg1, IntegCallback jarg1_);
  public final static native void delete_IntegCallback(long jarg1);
  public final static native long IntegCallback_copy(long jarg1, IntegCallback jarg1_);
  public final static native void IntegCallback_setStepInterval(long jarg1, IntegCallback jarg1_, int jarg2);
  public final static native int IntegCallback_getStepInterval(long jarg1, IntegCallback jarg1_);
  public final static native int IntegCallback_begin__SWIG_0(long jarg1, IntegCallback jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native int IntegCallback_begin__SWIG_1(long jarg1, IntegCallback jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int IntegCallback_begin__SWIG_2(long jarg1, IntegCallback jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int IntegCallback_begin__SWIG_3(long jarg1, IntegCallback jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native int IntegCallback_step__SWIG_0(long jarg1, IntegCallback jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12);
  public final static native int IntegCallback_step__SWIG_1(long jarg1, IntegCallback jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11);
  public final static native int IntegCallback_step__SWIG_2(long jarg1, IntegCallback jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10);
  public final static native int IntegCallback_step__SWIG_3(long jarg1, IntegCallback jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9);
  public final static native int IntegCallback_end__SWIG_0(long jarg1, IntegCallback jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native int IntegCallback_end__SWIG_1(long jarg1, IntegCallback jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int IntegCallback_end__SWIG_2(long jarg1, IntegCallback jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int IntegCallback_end__SWIG_3(long jarg1, IntegCallback jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native void delete_ArrayStorage(long jarg1);
  public final static native long new_ArrayStorage__SWIG_0(int jarg1);
  public final static native long new_ArrayStorage__SWIG_1();
  public final static native long new_ArrayStorage__SWIG_2(long jarg1, ArrayStorage jarg1_);
  public final static native void ArrayStorage_clearAndDestroy(long jarg1, ArrayStorage jarg1_);
  public final static native void ArrayStorage_setMemoryOwner(long jarg1, ArrayStorage jarg1_, boolean jarg2);
  public final static native boolean ArrayStorage_getMemoryOwner(long jarg1, ArrayStorage jarg1_);
  public final static native boolean ArrayStorage_computeNewCapacity(long jarg1, ArrayStorage jarg1_, int jarg2, long jarg3);
  public final static native boolean ArrayStorage_ensureCapacity(long jarg1, ArrayStorage jarg1_, int jarg2);
  public final static native void ArrayStorage_trim(long jarg1, ArrayStorage jarg1_);
  public final static native int ArrayStorage_getCapacity(long jarg1, ArrayStorage jarg1_);
  public final static native void ArrayStorage_setCapacityIncrement(long jarg1, ArrayStorage jarg1_, int jarg2);
  public final static native int ArrayStorage_getCapacityIncrement(long jarg1, ArrayStorage jarg1_);
  public final static native boolean ArrayStorage_setSize(long jarg1, ArrayStorage jarg1_, int jarg2);
  public final static native int ArrayStorage_getSize(long jarg1, ArrayStorage jarg1_);
  public final static native int ArrayStorage_getIndex__SWIG_0(long jarg1, ArrayStorage jarg1_, long jarg2, Storage jarg2_, int jarg3);
  public final static native int ArrayStorage_getIndex__SWIG_1(long jarg1, ArrayStorage jarg1_, long jarg2, Storage jarg2_);
  public final static native int ArrayStorage_getIndex__SWIG_2(long jarg1, ArrayStorage jarg1_, String jarg2, int jarg3);
  public final static native int ArrayStorage_getIndex__SWIG_3(long jarg1, ArrayStorage jarg1_, String jarg2);
  public final static native boolean ArrayStorage_append__SWIG_0(long jarg1, ArrayStorage jarg1_, long jarg2, Storage jarg2_);
  public final static native boolean ArrayStorage_append__SWIG_1(long jarg1, ArrayStorage jarg1_, long jarg2, ArrayStorage jarg2_);
  public final static native boolean ArrayStorage_insert(long jarg1, ArrayStorage jarg1_, int jarg2, long jarg3, Storage jarg3_);
  public final static native boolean ArrayStorage_remove__SWIG_0(long jarg1, ArrayStorage jarg1_, int jarg2);
  public final static native boolean ArrayStorage_remove__SWIG_1(long jarg1, ArrayStorage jarg1_, long jarg2, Storage jarg2_);
  public final static native boolean ArrayStorage_set(long jarg1, ArrayStorage jarg1_, int jarg2, long jarg3, Storage jarg3_);
  public final static native long ArrayStorage_get__SWIG_0(long jarg1, ArrayStorage jarg1_, int jarg2);
  public final static native long ArrayStorage_get__SWIG_1(long jarg1, ArrayStorage jarg1_, String jarg2);
  public final static native long ArrayStorage_getLast(long jarg1, ArrayStorage jarg1_);
  public final static native int ArrayStorage_searchBinary__SWIG_0(long jarg1, ArrayStorage jarg1_, long jarg2, Storage jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int ArrayStorage_searchBinary__SWIG_1(long jarg1, ArrayStorage jarg1_, long jarg2, Storage jarg2_, boolean jarg3, int jarg4);
  public final static native int ArrayStorage_searchBinary__SWIG_2(long jarg1, ArrayStorage jarg1_, long jarg2, Storage jarg2_, boolean jarg3);
  public final static native int ArrayStorage_searchBinary__SWIG_3(long jarg1, ArrayStorage jarg1_, long jarg2, Storage jarg2_);
  public final static native long new_Analysis__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_Analysis__SWIG_1();
  public final static native long new_Analysis__SWIG_2(String jarg1, boolean jarg2);
  public final static native long new_Analysis__SWIG_3(String jarg1);
  public final static native void delete_Analysis(long jarg1);
  public final static native long new_Analysis__SWIG_4(long jarg1, Analysis jarg1_);
  public final static native long Analysis_copy(long jarg1, Analysis jarg1_);
  public final static native void Analysis_setModel(long jarg1, Analysis jarg1_, long jarg2, Model jarg2_);
  public final static native void Analysis_setInDegrees(long jarg1, Analysis jarg1_, boolean jarg2);
  public final static native boolean Analysis_getInDegrees(long jarg1, Analysis jarg1_);
  public final static native void Analysis_setColumnLabels(long jarg1, Analysis jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long Analysis_getColumnLabels(long jarg1, Analysis jarg1_);
  public final static native long Analysis_getStorageList(long jarg1, Analysis jarg1_);
  public final static native boolean Analysis_proceed__SWIG_0(long jarg1, Analysis jarg1_, int jarg2);
  public final static native boolean Analysis_proceed__SWIG_1(long jarg1, Analysis jarg1_);
  public final static native int Analysis_printResults__SWIG_0(long jarg1, Analysis jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int Analysis_printResults__SWIG_1(long jarg1, Analysis jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int Analysis_printResults__SWIG_2(long jarg1, Analysis jarg1_, String jarg2, String jarg3);
  public final static native int Analysis_printResults__SWIG_3(long jarg1, Analysis jarg1_, String jarg2);
  public final static native void delete_SetAnalysis(long jarg1);
  public final static native long new_SetAnalysis__SWIG_0();
  public final static native long new_SetAnalysis__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_SetAnalysis__SWIG_2(String jarg1);
  public final static native long new_SetAnalysis__SWIG_3(long jarg1, SetAnalysis jarg1_);
  public final static native long SetAnalysis_copy(long jarg1, SetAnalysis jarg1_);
  public final static native void SetAnalysis_setup(long jarg1, SetAnalysis jarg1_);
  public final static native void SetAnalysis_setMemoryOwner(long jarg1, SetAnalysis jarg1_, boolean jarg2);
  public final static native boolean SetAnalysis_getMemoryOwner(long jarg1, SetAnalysis jarg1_);
  public final static native boolean SetAnalysis_computeNewCapacity(long jarg1, SetAnalysis jarg1_, int jarg2, long jarg3);
  public final static native boolean SetAnalysis_ensureCapacity(long jarg1, SetAnalysis jarg1_, int jarg2);
  public final static native void SetAnalysis_trim(long jarg1, SetAnalysis jarg1_);
  public final static native int SetAnalysis_getCapacity(long jarg1, SetAnalysis jarg1_);
  public final static native void SetAnalysis_setCapacityIncrement(long jarg1, SetAnalysis jarg1_, int jarg2);
  public final static native int SetAnalysis_getCapacityIncrement(long jarg1, SetAnalysis jarg1_);
  public final static native boolean SetAnalysis_setSize(long jarg1, SetAnalysis jarg1_, int jarg2);
  public final static native int SetAnalysis_getSize(long jarg1, SetAnalysis jarg1_);
  public final static native int SetAnalysis_getIndex__SWIG_0(long jarg1, SetAnalysis jarg1_, long jarg2, Analysis jarg2_, int jarg3);
  public final static native int SetAnalysis_getIndex__SWIG_1(long jarg1, SetAnalysis jarg1_, long jarg2, Analysis jarg2_);
  public final static native int SetAnalysis_getIndex__SWIG_2(long jarg1, SetAnalysis jarg1_, String jarg2, int jarg3);
  public final static native int SetAnalysis_getIndex__SWIG_3(long jarg1, SetAnalysis jarg1_, String jarg2);
  public final static native void SetAnalysis_getGroupNamesContaining(long jarg1, SetAnalysis jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetAnalysis_append__SWIG_0(long jarg1, SetAnalysis jarg1_, long jarg2, Analysis jarg2_);
  public final static native boolean SetAnalysis_append__SWIG_1(long jarg1, SetAnalysis jarg1_, long jarg2);
  public final static native boolean SetAnalysis_insert(long jarg1, SetAnalysis jarg1_, int jarg2, long jarg3, Analysis jarg3_);
  public final static native boolean SetAnalysis_remove__SWIG_0(long jarg1, SetAnalysis jarg1_, int jarg2);
  public final static native boolean SetAnalysis_remove__SWIG_1(long jarg1, SetAnalysis jarg1_, long jarg2, Analysis jarg2_);
  public final static native void SetAnalysis_clearAndDestroy(long jarg1, SetAnalysis jarg1_);
  public final static native boolean SetAnalysis_set(long jarg1, SetAnalysis jarg1_, int jarg2, long jarg3, Analysis jarg3_);
  public final static native long SetAnalysis_get__SWIG_0(long jarg1, SetAnalysis jarg1_, int jarg2);
  public final static native long SetAnalysis_get__SWIG_1(long jarg1, SetAnalysis jarg1_, String jarg2);
  public final static native void SetAnalysis_getNames(long jarg1, SetAnalysis jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetAnalysis_getLast(long jarg1, SetAnalysis jarg1_);
  public final static native int SetAnalysis_searchBinary__SWIG_0(long jarg1, SetAnalysis jarg1_, long jarg2, Analysis jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int SetAnalysis_searchBinary__SWIG_1(long jarg1, SetAnalysis jarg1_, long jarg2, Analysis jarg2_, boolean jarg3, int jarg4);
  public final static native int SetAnalysis_searchBinary__SWIG_2(long jarg1, SetAnalysis jarg1_, long jarg2, Analysis jarg2_, boolean jarg3);
  public final static native int SetAnalysis_searchBinary__SWIG_3(long jarg1, SetAnalysis jarg1_, long jarg2, Analysis jarg2_);
  public final static native int SetAnalysis_getNumGroups(long jarg1, SetAnalysis jarg1_);
  public final static native void SetAnalysis_addGroup(long jarg1, SetAnalysis jarg1_, String jarg2);
  public final static native void SetAnalysis_removeGroup(long jarg1, SetAnalysis jarg1_, String jarg2);
  public final static native void SetAnalysis_renameGroup(long jarg1, SetAnalysis jarg1_, String jarg2, String jarg3);
  public final static native void SetAnalysis_addObjectToGroup(long jarg1, SetAnalysis jarg1_, String jarg2, String jarg3);
  public final static native void SetAnalysis_getGroupNames(long jarg1, SetAnalysis jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetAnalysis_getGroup__SWIG_0(long jarg1, SetAnalysis jarg1_, String jarg2);
  public final static native long SetAnalysis_getGroup__SWIG_1(long jarg1, SetAnalysis jarg1_, int jarg2);
  public final static native long new_AnalysisSet__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_AnalysisSet__SWIG_1();
  public final static native long new_AnalysisSet__SWIG_2(String jarg1);
  public final static native long new_AnalysisSet__SWIG_3(long jarg1, AnalysisSet jarg1_);
  public final static native void delete_AnalysisSet(long jarg1);
  public final static native long AnalysisSet_copy(long jarg1, AnalysisSet jarg1_);
  public final static native void AnalysisSet_setModel(long jarg1, AnalysisSet jarg1_, long jarg2, Model jarg2_);
  public final static native long AnalysisSet_getModel(long jarg1, AnalysisSet jarg1_);
  public final static native void AnalysisSet_setOn(long jarg1, AnalysisSet jarg1_, boolean jarg2);
  public final static native void AnalysisSet_begin__SWIG_0(long jarg1, AnalysisSet jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void AnalysisSet_begin__SWIG_1(long jarg1, AnalysisSet jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native void AnalysisSet_begin__SWIG_2(long jarg1, AnalysisSet jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native void AnalysisSet_begin__SWIG_3(long jarg1, AnalysisSet jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native void AnalysisSet_step__SWIG_0(long jarg1, AnalysisSet jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12);
  public final static native void AnalysisSet_step__SWIG_1(long jarg1, AnalysisSet jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11);
  public final static native void AnalysisSet_step__SWIG_2(long jarg1, AnalysisSet jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10);
  public final static native void AnalysisSet_step__SWIG_3(long jarg1, AnalysisSet jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9);
  public final static native void AnalysisSet_end__SWIG_0(long jarg1, AnalysisSet jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void AnalysisSet_end__SWIG_1(long jarg1, AnalysisSet jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native void AnalysisSet_end__SWIG_2(long jarg1, AnalysisSet jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native void AnalysisSet_end__SWIG_3(long jarg1, AnalysisSet jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native void AnalysisSet_printResults__SWIG_0(long jarg1, AnalysisSet jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native void AnalysisSet_printResults__SWIG_1(long jarg1, AnalysisSet jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native void AnalysisSet_printResults__SWIG_2(long jarg1, AnalysisSet jarg1_, String jarg2, String jarg3);
  public final static native void AnalysisSet_printResults__SWIG_3(long jarg1, AnalysisSet jarg1_, String jarg2);
  public final static native long new_Model__SWIG_0();
  public final static native long new_Model__SWIG_1(String jarg1) throws java.io.IOException;
  public final static native long new_Model__SWIG_2(long jarg1, Model jarg1_);
  public final static native void delete_Model(long jarg1);
  public final static native long Model_copy(long jarg1, Model jarg1_);
  public final static native void Model_copyData(long jarg1, Model jarg1_, long jarg2, Model jarg2_);
  public final static native void Model_setupProperties(long jarg1, Model jarg1_);
  public final static native long Model_clone(long jarg1, Model jarg1_);
  public final static native void Model_setup(long jarg1, Model jarg1_) throws java.io.IOException;
  public final static native boolean Model_builtOK(long jarg1, Model jarg1_);
  public final static native String Model_getInputFileName(long jarg1, Model jarg1_);
  public final static native long Model_getLengthUnits(long jarg1, Model jarg1_);
  public final static native long Model_getForceUnits(long jarg1, Model jarg1_);
  public final static native void Model_getGravity(long jarg1, Model jarg1_, double[] jarg2);
  public final static native boolean Model_setGravity(long jarg1, Model jarg1_, double[] jarg2);
  public final static native int Model_getNumControls(long jarg1, Model jarg1_);
  public final static native int Model_getNumStates(long jarg1, Model jarg1_);
  public final static native int Model_getNumPseudoStates(long jarg1, Model jarg1_);
  public final static native int Model_getNumBodies(long jarg1, Model jarg1_);
  public final static native int Model_getNumJoints(long jarg1, Model jarg1_);
  public final static native int Model_getNumCoordinates(long jarg1, Model jarg1_);
  public final static native int Model_getNumSpeeds(long jarg1, Model jarg1_);
  public final static native int Model_getNumActuators(long jarg1, Model jarg1_);
  public final static native int Model_getNumContacts(long jarg1, Model jarg1_);
  public final static native int Model_getNumAnalyses(long jarg1, Model jarg1_);
  public final static native int Model_getNumConfigurations(long jarg1, Model jarg1_);
  public final static native boolean Model_hasDynamicsEngine(long jarg1, Model jarg1_);
  public final static native long Model_getDynamicsEngine(long jarg1, Model jarg1_);
  public final static native void Model_setDynamicsEngine(long jarg1, Model jarg1_, long jarg2, AbstractDynamicsEngine jarg2_);
  public final static native void Model_set(long jarg1, Model jarg1_, double jarg2, double[] jarg3, double[] jarg4);
  public final static native void Model_setTime(long jarg1, Model jarg1_, double jarg2);
  public final static native double Model_getTime(long jarg1, Model jarg1_);
  public final static native void Model_setTimeNormConstant(long jarg1, Model jarg1_, double jarg2);
  public final static native double Model_getTimeNormConstant(long jarg1, Model jarg1_);
  public final static native void Model_setControls(long jarg1, Model jarg1_, double[] jarg2);
  public final static native void Model_setControl__SWIG_0(long jarg1, Model jarg1_, int jarg2, double jarg3);
  public final static native void Model_setControl__SWIG_1(long jarg1, Model jarg1_, String jarg2, double jarg3);
  public final static native void Model_getControls(long jarg1, Model jarg1_, double[] jarg2);
  public final static native double Model_getControl__SWIG_0(long jarg1, Model jarg1_, int jarg2);
  public final static native double Model_getControl__SWIG_1(long jarg1, Model jarg1_, String jarg2);
  public final static native String Model_getControlName(long jarg1, Model jarg1_, int jarg2);
  public final static native void Model_getStateNames(long jarg1, Model jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native void Model_setStates(long jarg1, Model jarg1_, double[] jarg2);
  public final static native void Model_getStates(long jarg1, Model jarg1_, double[] jarg2);
  public final static native void Model_setInitialStates(long jarg1, Model jarg1_, double[] jarg2);
  public final static native void Model_getInitialStates(long jarg1, Model jarg1_, double[] jarg2);
  public final static native int Model_getPseudoStateNames(long jarg1, Model jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native void Model_setPseudoStates(long jarg1, Model jarg1_, double[] jarg2);
  public final static native void Model_getPseudoStates(long jarg1, Model jarg1_, double[] jarg2);
  public final static native void Model_setInitialPseudoStates(long jarg1, Model jarg1_, double[] jarg2);
  public final static native void Model_getInitialPseudoStates(long jarg1, Model jarg1_, double[] jarg2);
  public final static native long Model_getActuatorSet__SWIG_0(long jarg1, Model jarg1_);
  public final static native long Model_getContactSet__SWIG_0(long jarg1, Model jarg1_);
  public final static native long Model_getIntegCallbackSet__SWIG_0(long jarg1, Model jarg1_);
  public final static native void Model_addIntegCallback(long jarg1, Model jarg1_, long jarg2, IntegCallback jarg2_);
  public final static native void Model_removeIntegCallback(long jarg1, Model jarg1_, long jarg2, IntegCallback jarg2_);
  public final static native long Model_getDerivCallbackSet__SWIG_0(long jarg1, Model jarg1_);
  public final static native void Model_addDerivCallback(long jarg1, Model jarg1_, long jarg2);
  public final static native long Model_getAnalysisSet__SWIG_0(long jarg1, Model jarg1_);
  public final static native void Model_addAnalysis(long jarg1, Model jarg1_, long jarg2, Analysis jarg2_);
  public final static native void Model_computeDerivatives(long jarg1, Model jarg1_, double[] jarg2);
  public final static native void Model_computeAuxiliaryDerivatives(long jarg1, Model jarg1_, double[] jarg2);
  public final static native void Model_computeEquilibriumForAuxiliaryStates(long jarg1, Model jarg1_, double[] jarg2);
  public final static native boolean Model_scale__SWIG_0(long jarg1, Model jarg1_, long jarg2, double jarg3, boolean jarg4);
  public final static native boolean Model_scale__SWIG_1(long jarg1, Model jarg1_, long jarg2, double jarg3);
  public final static native boolean Model_scale__SWIG_2(long jarg1, Model jarg1_, long jarg2);
  public final static native void Model_printBasicInfo(long jarg1, Model jarg1_, long jarg2);
  public final static native void Model_printDetailedInfo(long jarg1, Model jarg1_, long jarg2);
  public final static native void Model_peteTest(long jarg1, Model jarg1_);
  public final static native void Model_kinTest(long jarg1, Model jarg1_);
  public final static native void delete_Control(long jarg1);
  public final static native void Control_setIsModelControl(long jarg1, Control jarg1_, boolean jarg2);
  public final static native boolean Control_getIsModelControl(long jarg1, Control jarg1_);
  public final static native void Control_setExtrapolate(long jarg1, Control jarg1_, boolean jarg2);
  public final static native boolean Control_getExtrapolate(long jarg1, Control jarg1_);
  public final static native void Control_setFilterOn(long jarg1, Control jarg1_, boolean jarg2);
  public final static native boolean Control_getFilterOn(long jarg1, Control jarg1_);
  public final static native int Control_getNumParameters(long jarg1, Control jarg1_);
  public final static native void Control_setDefaultParameterMin(long jarg1, Control jarg1_, double jarg2);
  public final static native double Control_getDefaultParameterMin(long jarg1, Control jarg1_);
  public final static native void Control_setDefaultParameterMax(long jarg1, Control jarg1_, double jarg2);
  public final static native double Control_getDefaultParameterMax(long jarg1, Control jarg1_);
  public final static native void Control_setParameterMin(long jarg1, Control jarg1_, int jarg2, double jarg3);
  public final static native double Control_getParameterMin(long jarg1, Control jarg1_, int jarg2);
  public final static native void Control_setParameterMax(long jarg1, Control jarg1_, int jarg2, double jarg3);
  public final static native double Control_getParameterMax(long jarg1, Control jarg1_, int jarg2);
  public final static native double Control_getParameterTime(long jarg1, Control jarg1_, int jarg2);
  public final static native void Control_getParameterNeighborhood(long jarg1, Control jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native int Control_getParameterList__SWIG_0(long jarg1, Control jarg1_, double jarg2, long jarg3, ArrayInt jarg3_);
  public final static native int Control_getParameterList__SWIG_1(long jarg1, Control jarg1_, double jarg2, double jarg3, long jarg4, ArrayInt jarg4_);
  public final static native double Control_getParameterValue(long jarg1, Control jarg1_, int jarg2);
  public final static native void Control_setParameterValue(long jarg1, Control jarg1_, int jarg2, double jarg3);
  public final static native double Control_getControlValue__SWIG_0(long jarg1, Control jarg1_, double jarg2);
  public final static native double Control_getControlValue__SWIG_1(long jarg1, Control jarg1_);
  public final static native void Control_setControlValue(long jarg1, Control jarg1_, double jarg2, double jarg3);
  public final static native double Control_getControlValueMin__SWIG_0(long jarg1, Control jarg1_, double jarg2);
  public final static native double Control_getControlValueMin__SWIG_1(long jarg1, Control jarg1_);
  public final static native void Control_setControlValueMin(long jarg1, Control jarg1_, double jarg2, double jarg3);
  public final static native double Control_getControlValueMax__SWIG_0(long jarg1, Control jarg1_, double jarg2);
  public final static native double Control_getControlValueMax__SWIG_1(long jarg1, Control jarg1_);
  public final static native void Control_setControlValueMax(long jarg1, Control jarg1_, double jarg2, double jarg3);
  public final static native double Control_getFirstTime(long jarg1, Control jarg1_);
  public final static native double Control_getLastTime(long jarg1, Control jarg1_);
  public final static native void Control_simplify(long jarg1, Control jarg1_, long jarg2, PropertySet jarg2_);
  public final static native void Control_filter(long jarg1, Control jarg1_, double jarg2);
  public final static native void delete_SetControls(long jarg1);
  public final static native long new_SetControls__SWIG_0();
  public final static native long new_SetControls__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_SetControls__SWIG_2(String jarg1);
  public final static native long new_SetControls__SWIG_3(long jarg1, SetControls jarg1_);
  public final static native long SetControls_copy(long jarg1, SetControls jarg1_);
  public final static native void SetControls_setup(long jarg1, SetControls jarg1_);
  public final static native void SetControls_setMemoryOwner(long jarg1, SetControls jarg1_, boolean jarg2);
  public final static native boolean SetControls_getMemoryOwner(long jarg1, SetControls jarg1_);
  public final static native boolean SetControls_computeNewCapacity(long jarg1, SetControls jarg1_, int jarg2, long jarg3);
  public final static native boolean SetControls_ensureCapacity(long jarg1, SetControls jarg1_, int jarg2);
  public final static native void SetControls_trim(long jarg1, SetControls jarg1_);
  public final static native int SetControls_getCapacity(long jarg1, SetControls jarg1_);
  public final static native void SetControls_setCapacityIncrement(long jarg1, SetControls jarg1_, int jarg2);
  public final static native int SetControls_getCapacityIncrement(long jarg1, SetControls jarg1_);
  public final static native boolean SetControls_setSize(long jarg1, SetControls jarg1_, int jarg2);
  public final static native int SetControls_getSize(long jarg1, SetControls jarg1_);
  public final static native int SetControls_getIndex__SWIG_0(long jarg1, SetControls jarg1_, long jarg2, Control jarg2_, int jarg3);
  public final static native int SetControls_getIndex__SWIG_1(long jarg1, SetControls jarg1_, long jarg2, Control jarg2_);
  public final static native int SetControls_getIndex__SWIG_2(long jarg1, SetControls jarg1_, String jarg2, int jarg3);
  public final static native int SetControls_getIndex__SWIG_3(long jarg1, SetControls jarg1_, String jarg2);
  public final static native void SetControls_getGroupNamesContaining(long jarg1, SetControls jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetControls_append__SWIG_0(long jarg1, SetControls jarg1_, long jarg2, Control jarg2_);
  public final static native boolean SetControls_append__SWIG_1(long jarg1, SetControls jarg1_, long jarg2);
  public final static native boolean SetControls_insert(long jarg1, SetControls jarg1_, int jarg2, long jarg3, Control jarg3_);
  public final static native boolean SetControls_remove__SWIG_0(long jarg1, SetControls jarg1_, int jarg2);
  public final static native boolean SetControls_remove__SWIG_1(long jarg1, SetControls jarg1_, long jarg2, Control jarg2_);
  public final static native void SetControls_clearAndDestroy(long jarg1, SetControls jarg1_);
  public final static native boolean SetControls_set(long jarg1, SetControls jarg1_, int jarg2, long jarg3, Control jarg3_);
  public final static native long SetControls_get__SWIG_0(long jarg1, SetControls jarg1_, int jarg2);
  public final static native long SetControls_get__SWIG_1(long jarg1, SetControls jarg1_, String jarg2);
  public final static native void SetControls_getNames(long jarg1, SetControls jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetControls_getLast(long jarg1, SetControls jarg1_);
  public final static native int SetControls_searchBinary__SWIG_0(long jarg1, SetControls jarg1_, long jarg2, Control jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int SetControls_searchBinary__SWIG_1(long jarg1, SetControls jarg1_, long jarg2, Control jarg2_, boolean jarg3, int jarg4);
  public final static native int SetControls_searchBinary__SWIG_2(long jarg1, SetControls jarg1_, long jarg2, Control jarg2_, boolean jarg3);
  public final static native int SetControls_searchBinary__SWIG_3(long jarg1, SetControls jarg1_, long jarg2, Control jarg2_);
  public final static native int SetControls_getNumGroups(long jarg1, SetControls jarg1_);
  public final static native void SetControls_addGroup(long jarg1, SetControls jarg1_, String jarg2);
  public final static native void SetControls_removeGroup(long jarg1, SetControls jarg1_, String jarg2);
  public final static native void SetControls_renameGroup(long jarg1, SetControls jarg1_, String jarg2, String jarg3);
  public final static native void SetControls_addObjectToGroup(long jarg1, SetControls jarg1_, String jarg2, String jarg3);
  public final static native void SetControls_getGroupNames(long jarg1, SetControls jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetControls_getGroup__SWIG_0(long jarg1, SetControls jarg1_, String jarg2);
  public final static native long SetControls_getGroup__SWIG_1(long jarg1, SetControls jarg1_, int jarg2);
  public final static native long new_ControlSet__SWIG_0();
  public final static native long new_ControlSet__SWIG_1(String jarg1);
  public final static native long new_ControlSet__SWIG_2(long jarg1, ControlSet jarg1_);
  public final static native void delete_ControlSet(long jarg1);
  public final static native long ControlSet_copy(long jarg1, ControlSet jarg1_);
  public final static native int ControlSet_getSize__SWIG_0(long jarg1, ControlSet jarg1_, boolean jarg2);
  public final static native int ControlSet_getSize__SWIG_1(long jarg1, ControlSet jarg1_);
  public final static native void ControlSet_getControlList__SWIG_0(long jarg1, ControlSet jarg1_, String jarg2, long jarg3, ArrayInt jarg3_, boolean jarg4);
  public final static native void ControlSet_getControlList__SWIG_1(long jarg1, ControlSet jarg1_, String jarg2, long jarg3, ArrayInt jarg3_);
  public final static native void ControlSet_getControlValues__SWIG_0(long jarg1, ControlSet jarg1_, double jarg2, double[] jarg3, boolean jarg4);
  public final static native void ControlSet_getControlValues__SWIG_1(long jarg1, ControlSet jarg1_, double jarg2, double[] jarg3);
  public final static native void ControlSet_getControlValues__SWIG_2(long jarg1, ControlSet jarg1_, double jarg2, long jarg3, ArrayDouble jarg3_, boolean jarg4);
  public final static native void ControlSet_getControlValues__SWIG_3(long jarg1, ControlSet jarg1_, double jarg2, long jarg3, ArrayDouble jarg3_);
  public final static native void ControlSet_setControlValues__SWIG_0(long jarg1, ControlSet jarg1_, double jarg2, double[] jarg3, boolean jarg4);
  public final static native void ControlSet_setControlValues__SWIG_1(long jarg1, ControlSet jarg1_, double jarg2, double[] jarg3);
  public final static native void ControlSet_setControlValues__SWIG_2(long jarg1, ControlSet jarg1_, double jarg2, long jarg3, ArrayDouble jarg3_, boolean jarg4);
  public final static native void ControlSet_setControlValues__SWIG_3(long jarg1, ControlSet jarg1_, double jarg2, long jarg3, ArrayDouble jarg3_);
  public final static native int ControlSet_getNumParameters__SWIG_0(long jarg1, ControlSet jarg1_, boolean jarg2);
  public final static native int ControlSet_getNumParameters__SWIG_1(long jarg1, ControlSet jarg1_);
  public final static native void ControlSet_getParameterList__SWIG_0(long jarg1, ControlSet jarg1_, long jarg2, ArrayInt jarg2_, boolean jarg3);
  public final static native void ControlSet_getParameterList__SWIG_1(long jarg1, ControlSet jarg1_, long jarg2, ArrayInt jarg2_);
  public final static native void ControlSet_getParameterList__SWIG_2(long jarg1, ControlSet jarg1_, double jarg2, long jarg3, ArrayInt jarg3_, boolean jarg4);
  public final static native void ControlSet_getParameterList__SWIG_3(long jarg1, ControlSet jarg1_, double jarg2, long jarg3, ArrayInt jarg3_);
  public final static native void ControlSet_getParameterList__SWIG_4(long jarg1, ControlSet jarg1_, double jarg2, double jarg3, long jarg4, ArrayInt jarg4_, boolean jarg5);
  public final static native void ControlSet_getParameterList__SWIG_5(long jarg1, ControlSet jarg1_, double jarg2, double jarg3, long jarg4, ArrayInt jarg4_);
  public final static native void ControlSet_getParameterMins__SWIG_0(long jarg1, ControlSet jarg1_, long jarg2, ArrayDouble jarg2_, long jarg3, ArrayInt jarg3_);
  public final static native void ControlSet_getParameterMins__SWIG_1(long jarg1, ControlSet jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void ControlSet_getParameterMaxs__SWIG_0(long jarg1, ControlSet jarg1_, long jarg2, ArrayDouble jarg2_, long jarg3, ArrayInt jarg3_);
  public final static native void ControlSet_getParameterMaxs__SWIG_1(long jarg1, ControlSet jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void ControlSet_getParameterValues__SWIG_0(long jarg1, ControlSet jarg1_, double[] jarg2, long jarg3, ArrayInt jarg3_);
  public final static native void ControlSet_getParameterValues__SWIG_1(long jarg1, ControlSet jarg1_, double[] jarg2);
  public final static native void ControlSet_getParameterValues__SWIG_2(long jarg1, ControlSet jarg1_, long jarg2, ArrayDouble jarg2_, long jarg3, ArrayInt jarg3_);
  public final static native void ControlSet_getParameterValues__SWIG_3(long jarg1, ControlSet jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void ControlSet_setParameterValues__SWIG_0(long jarg1, ControlSet jarg1_, double[] jarg2, long jarg3, ArrayInt jarg3_);
  public final static native void ControlSet_setParameterValues__SWIG_1(long jarg1, ControlSet jarg1_, double[] jarg2);
  public final static native void ControlSet_setParameterValues__SWIG_2(long jarg1, ControlSet jarg1_, long jarg2, ArrayDouble jarg2_, long jarg3, ArrayInt jarg3_);
  public final static native void ControlSet_setParameterValues__SWIG_3(long jarg1, ControlSet jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void ControlSet_simplify(long jarg1, ControlSet jarg1_, long jarg2, PropertySet jarg2_);
  public final static native void ControlSet_filter(long jarg1, ControlSet jarg1_, double jarg2);
  public final static native long ControlSet_constructStorage(long jarg1, ControlSet jarg1_, int jarg2, double jarg3, double jarg4, boolean jarg5);
  public final static native int ControlSet_mapParameterToControl(long jarg1, ControlSet jarg1_, int jarg2);
  public final static native int ControlSet_mapParameterToParameter(long jarg1, ControlSet jarg1_, int jarg2);
  public final static native void ControlSet_generateParameterMaps(long jarg1, ControlSet jarg1_);
  public final static native void delete_ControlConstant(long jarg1);
  public final static native long ControlConstant_copy(long jarg1, ControlConstant jarg1_);
  public final static native int ControlConstant_getNumParameters(long jarg1, ControlConstant jarg1_);
  public final static native void ControlConstant_setParameterMin(long jarg1, ControlConstant jarg1_, int jarg2, double jarg3);
  public final static native double ControlConstant_getParameterMin(long jarg1, ControlConstant jarg1_, int jarg2);
  public final static native void ControlConstant_setParameterMax(long jarg1, ControlConstant jarg1_, int jarg2, double jarg3);
  public final static native double ControlConstant_getParameterMax(long jarg1, ControlConstant jarg1_, int jarg2);
  public final static native double ControlConstant_getParameterTime(long jarg1, ControlConstant jarg1_, int jarg2);
  public final static native void ControlConstant_getParameterNeighborhood(long jarg1, ControlConstant jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native int ControlConstant_getParameterList__SWIG_0(long jarg1, ControlConstant jarg1_, double jarg2, long jarg3, ArrayInt jarg3_);
  public final static native int ControlConstant_getParameterList__SWIG_1(long jarg1, ControlConstant jarg1_, double jarg2, double jarg3, long jarg4, ArrayInt jarg4_);
  public final static native void ControlConstant_setParameterValue(long jarg1, ControlConstant jarg1_, int jarg2, double jarg3);
  public final static native double ControlConstant_getParameterValue(long jarg1, ControlConstant jarg1_, int jarg2);
  public final static native void ControlConstant_setControlValue(long jarg1, ControlConstant jarg1_, double jarg2, double jarg3);
  public final static native double ControlConstant_getControlValue(long jarg1, ControlConstant jarg1_, double jarg2);
  public final static native double ControlConstant_getControlValueMin__SWIG_0(long jarg1, ControlConstant jarg1_, double jarg2);
  public final static native double ControlConstant_getControlValueMin__SWIG_1(long jarg1, ControlConstant jarg1_);
  public final static native void ControlConstant_setControlValueMin(long jarg1, ControlConstant jarg1_, double jarg2, double jarg3);
  public final static native double ControlConstant_getControlValueMax__SWIG_0(long jarg1, ControlConstant jarg1_, double jarg2);
  public final static native double ControlConstant_getControlValueMax__SWIG_1(long jarg1, ControlConstant jarg1_);
  public final static native void ControlConstant_setControlValueMax(long jarg1, ControlConstant jarg1_, double jarg2, double jarg3);
  public final static native void delete_ControlLinear(long jarg1);
  public final static native long ControlLinear_copy(long jarg1, ControlLinear jarg1_);
  public final static native void ControlLinear_setUseSteps(long jarg1, ControlLinear jarg1_, boolean jarg2);
  public final static native boolean ControlLinear_getUseSteps(long jarg1, ControlLinear jarg1_);
  public final static native void ControlLinear_setKp(long jarg1, ControlLinear jarg1_, double jarg2);
  public final static native double ControlLinear_getKp(long jarg1, ControlLinear jarg1_);
  public final static native void ControlLinear_setKv(long jarg1, ControlLinear jarg1_, double jarg2);
  public final static native double ControlLinear_getKv(long jarg1, ControlLinear jarg1_);
  public final static native int ControlLinear_getNumParameters(long jarg1, ControlLinear jarg1_);
  public final static native void ControlLinear_setParameterMin(long jarg1, ControlLinear jarg1_, int jarg2, double jarg3);
  public final static native double ControlLinear_getParameterMin(long jarg1, ControlLinear jarg1_, int jarg2);
  public final static native void ControlLinear_setParameterMax(long jarg1, ControlLinear jarg1_, int jarg2, double jarg3);
  public final static native double ControlLinear_getParameterMax(long jarg1, ControlLinear jarg1_, int jarg2);
  public final static native double ControlLinear_getParameterTime(long jarg1, ControlLinear jarg1_, int jarg2);
  public final static native void ControlLinear_getParameterNeighborhood(long jarg1, ControlLinear jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native int ControlLinear_getParameterList__SWIG_0(long jarg1, ControlLinear jarg1_, double jarg2, long jarg3, ArrayInt jarg3_);
  public final static native int ControlLinear_getParameterList__SWIG_1(long jarg1, ControlLinear jarg1_, double jarg2, double jarg3, long jarg4, ArrayInt jarg4_);
  public final static native void ControlLinear_setParameterValue(long jarg1, ControlLinear jarg1_, int jarg2, double jarg3);
  public final static native double ControlLinear_getParameterValue(long jarg1, ControlLinear jarg1_, int jarg2);
  public final static native void ControlLinear_setControlValue(long jarg1, ControlLinear jarg1_, double jarg2, double jarg3);
  public final static native double ControlLinear_getControlValue(long jarg1, ControlLinear jarg1_, double jarg2);
  public final static native double ControlLinear_getControlValueMin__SWIG_0(long jarg1, ControlLinear jarg1_, double jarg2);
  public final static native double ControlLinear_getControlValueMin__SWIG_1(long jarg1, ControlLinear jarg1_);
  public final static native void ControlLinear_setControlValueMin(long jarg1, ControlLinear jarg1_, double jarg2, double jarg3);
  public final static native double ControlLinear_getControlValueMax__SWIG_0(long jarg1, ControlLinear jarg1_, double jarg2);
  public final static native double ControlLinear_getControlValueMax__SWIG_1(long jarg1, ControlLinear jarg1_);
  public final static native void ControlLinear_setControlValueMax(long jarg1, ControlLinear jarg1_, double jarg2, double jarg3);
  public final static native void ControlLinear_clearControlNodes(long jarg1, ControlLinear jarg1_);
  public final static native double ControlLinear_getFirstTime(long jarg1, ControlLinear jarg1_);
  public final static native double ControlLinear_getLastTime(long jarg1, ControlLinear jarg1_);
  public final static native void ControlLinear_simplify(long jarg1, ControlLinear jarg1_, long jarg2, PropertySet jarg2_);
  public final static native void ControlLinear_filter(long jarg1, ControlLinear jarg1_, double jarg2);
  public final static native int ControllerNAME_LENGTH_get();
  public final static native int ControllerDESCRIP_LENGTH_get();
  public final static native int Controller_NAME_LENGTH_get();
  public final static native int Controller_DESCRIP_LENGTH_get();
  public final static native void delete_Controller(long jarg1);
  public final static native void Controller_setNull(long jarg1, Controller jarg1_);
  public final static native long Controller_getModel(long jarg1, Controller jarg1_);
  public final static native void Controller_setOn(long jarg1, Controller jarg1_, boolean jarg2);
  public final static native boolean Controller_getOn(long jarg1, Controller jarg1_);
  public final static native void Controller_setName(long jarg1, Controller jarg1_, String jarg2);
  public final static native String Controller_getName(long jarg1, Controller jarg1_);
  public final static native void Controller_setDescription(long jarg1, Controller jarg1_, String jarg2);
  public final static native String Controller_getDescription(long jarg1, Controller jarg1_);
  public final static native void Controller_computeControls(long jarg1, Controller jarg1_, long jarg2, double jarg3, long jarg4, long jarg5, ControlSet jarg5_);
  public final static native void delete_Integrand(long jarg1);
  public final static native int Integrand_getSize(long jarg1, Integrand jarg1_);
  public final static native void Integrand_setInitialStates(long jarg1, Integrand jarg1_, double jarg2, double[] jarg3);
  public final static native void Integrand_getInitialStates(long jarg1, Integrand jarg1_, double[] jarg2);
  public final static native void Integrand_compute(long jarg1, Integrand jarg1_, double jarg2, double[] jarg3, double[] jarg4);
  public final static native void Integrand_computeJacobian(long jarg1, Integrand jarg1_, double jarg2, double[] jarg3, long jarg4);
  public final static native void Integrand_initialize(long jarg1, Integrand jarg1_, int jarg2, long jarg3, double jarg4, double jarg5, double[] jarg6);
  public final static native void Integrand_processAfterStep(long jarg1, Integrand jarg1_, int jarg2, long jarg3, double jarg4, double[] jarg5);
  public final static native void Integrand_finalize(long jarg1, Integrand jarg1_, int jarg2, double jarg3, double[] jarg4);
  public final static native long new_ModelIntegrand(long jarg1, Model jarg1_);
  public final static native void delete_ModelIntegrand(long jarg1);
  public final static native int ModelIntegrand_getSize(long jarg1, ModelIntegrand jarg1_);
  public final static native long ModelIntegrand_getModel(long jarg1, ModelIntegrand jarg1_);
  public final static native void ModelIntegrand_setControlSet(long jarg1, ModelIntegrand jarg1_, long jarg2, ControlSet jarg2_);
  public final static native void ModelIntegrand_setControlSetReference(long jarg1, ModelIntegrand jarg1_, long jarg2, ControlSet jarg2_);
  public final static native long ModelIntegrand_getControlSet(long jarg1, ModelIntegrand jarg1_);
  public final static native void ModelIntegrand_setControlStorage(long jarg1, ModelIntegrand jarg1_, long jarg2, Storage jarg2_);
  public final static native long ModelIntegrand_getControlStorage(long jarg1, ModelIntegrand jarg1_);
  public final static native void ModelIntegrand_setStateStorage(long jarg1, ModelIntegrand jarg1_, long jarg2, Storage jarg2_);
  public final static native long ModelIntegrand_getStateStorage(long jarg1, ModelIntegrand jarg1_);
  public final static native void ModelIntegrand_setPseudoStateStorage(long jarg1, ModelIntegrand jarg1_, long jarg2, Storage jarg2_);
  public final static native long ModelIntegrand_getPseudoStateStorage(long jarg1, ModelIntegrand jarg1_);
  public final static native void ModelIntegrand_setController(long jarg1, ModelIntegrand jarg1_, long jarg2, Controller jarg2_);
  public final static native long ModelIntegrand_getController(long jarg1, ModelIntegrand jarg1_);
  public final static native long ModelIntegrand_constructControlSet(long jarg1, ModelIntegrand jarg1_);
  public final static native void ModelIntegrand_convertStatesIntegrandToModel(long jarg1, ModelIntegrand jarg1_, double jarg2, double[] jarg3, double[] jarg4);
  public final static native void ModelIntegrand_convertStatesModelToIntegrand(long jarg1, ModelIntegrand jarg1_, double[] jarg2, double[] jarg3);
  public final static native void ModelIntegrand_setInitialStates(long jarg1, ModelIntegrand jarg1_, double jarg2, double[] jarg3);
  public final static native void ModelIntegrand_getInitialStates(long jarg1, ModelIntegrand jarg1_, double[] jarg2);
  public final static native void ModelIntegrand_compute(long jarg1, ModelIntegrand jarg1_, double jarg2, double[] jarg3, double[] jarg4);
  public final static native void ModelIntegrand_initialize(long jarg1, ModelIntegrand jarg1_, int jarg2, long jarg3, double jarg4, double jarg5, double[] jarg6);
  public final static native void ModelIntegrand_processAfterStep(long jarg1, ModelIntegrand jarg1_, int jarg2, long jarg3, double jarg4, double[] jarg5);
  public final static native void ModelIntegrand_finalize(long jarg1, ModelIntegrand jarg1_, int jarg2, double jarg3, double[] jarg4);
  public final static native int RKF_RKF_NORMAL_get();
  public final static native int RKF_RKF_FINE_get();
  public final static native int RKF_RKF_POOR_get();
  public final static native int RKF_RKF_NAN_get();
  public final static native int RKF_RKF_ERROR_get();
  public final static native int RKF_RKF_TOO_MANY_STEPS_get();
  public final static native long new_RKF__SWIG_0(long jarg1, Integrand jarg1_, double jarg2, double jarg3);
  public final static native long new_RKF__SWIG_1(long jarg1, Integrand jarg1_, double jarg2);
  public final static native long new_RKF__SWIG_2(long jarg1, Integrand jarg1_);
  public final static native void delete_RKF(long jarg1);
  public final static native long RKF_getIntegrand(long jarg1, RKF jarg1_);
  public final static native void RKF_setTolerance__SWIG_0(long jarg1, RKF jarg1_, double jarg2, double jarg3);
  public final static native void RKF_setTolerance__SWIG_1(long jarg1, RKF jarg1_, double jarg2);
  public final static native double RKF_getTolerance(long jarg1, RKF jarg1_);
  public final static native void RKF_setFineTolerance(long jarg1, RKF jarg1_, double jarg2);
  public final static native double RKF_getFineTolerance(long jarg1, RKF jarg1_);
  public final static native int RKF_step(long jarg1, RKF jarg1_, double jarg2, double jarg3, long jarg4);
  public final static native int RKF_stepFixed(long jarg1, RKF jarg1_, double jarg2, double jarg3, long jarg4);
  public final static native long new_IntegRKF__SWIG_0(long jarg1, Integrand jarg1_, double jarg2, double jarg3);
  public final static native long new_IntegRKF__SWIG_1(long jarg1, Integrand jarg1_, double jarg2);
  public final static native long new_IntegRKF__SWIG_2(long jarg1, Integrand jarg1_);
  public final static native void delete_IntegRKF(long jarg1);
  public final static native void IntegRKF_setMinDT(long jarg1, IntegRKF jarg1_, double jarg2);
  public final static native double IntegRKF_getMinDT(long jarg1, IntegRKF jarg1_);
  public final static native void IntegRKF_setMaxDT(long jarg1, IntegRKF jarg1_, double jarg2);
  public final static native double IntegRKF_getMaxDT(long jarg1, IntegRKF jarg1_);
  public final static native void IntegRKF_setMaximumNumberOfSteps(long jarg1, IntegRKF jarg1_, int jarg2);
  public final static native int IntegRKF_getMaximumNumberOfSteps(long jarg1, IntegRKF jarg1_);
  public final static native int IntegRKF_getStatus(long jarg1, IntegRKF jarg1_);
  public final static native void IntegRKF_setUseSpecifiedDT(long jarg1, IntegRKF jarg1_, boolean jarg2);
  public final static native boolean IntegRKF_getUseSpecifiedDT(long jarg1, IntegRKF jarg1_);
  public final static native void IntegRKF_setUseConstantDT(long jarg1, IntegRKF jarg1_, boolean jarg2);
  public final static native boolean IntegRKF_getUseConstantDT(long jarg1, IntegRKF jarg1_);
  public final static native void IntegRKF_setDT(long jarg1, IntegRKF jarg1_, double jarg2);
  public final static native double IntegRKF_getDT(long jarg1, IntegRKF jarg1_);
  public final static native long IntegRKF_getDTArray(long jarg1, IntegRKF jarg1_);
  public final static native void IntegRKF_setDTArray__SWIG_0(long jarg1, IntegRKF jarg1_, int jarg2, double[] jarg3, double jarg4);
  public final static native void IntegRKF_setDTArray__SWIG_1(long jarg1, IntegRKF jarg1_, int jarg2, double[] jarg3);
  public final static native double IntegRKF_getDTArrayDT(long jarg1, IntegRKF jarg1_, int jarg2);
  public final static native void IntegRKF_printDTArray__SWIG_0(long jarg1, IntegRKF jarg1_, String jarg2);
  public final static native void IntegRKF_printDTArray__SWIG_1(long jarg1, IntegRKF jarg1_);
  public final static native long IntegRKF_getTimeArray(long jarg1, IntegRKF jarg1_);
  public final static native double IntegRKF_getTimeArrayTime(long jarg1, IntegRKF jarg1_, int jarg2);
  public final static native int IntegRKF_getTimeArrayStep(long jarg1, IntegRKF jarg1_, double jarg2);
  public final static native void IntegRKF_printTimeArray__SWIG_0(long jarg1, IntegRKF jarg1_, String jarg2);
  public final static native void IntegRKF_printTimeArray__SWIG_1(long jarg1, IntegRKF jarg1_);
  public final static native void IntegRKF_resetTimeAndDTArrays(long jarg1, IntegRKF jarg1_, double jarg2);
  public final static native String IntegRKF_toString(long jarg1, IntegRKF jarg1_);
  public final static native boolean IntegRKF_integrate__SWIG_0(long jarg1, IntegRKF jarg1_, double jarg2, double jarg3, long jarg4, double jarg5);
  public final static native boolean IntegRKF_integrate__SWIG_1(long jarg1, IntegRKF jarg1_, double jarg2, double jarg3, long jarg4);
  public final static native void IntegRKF_halt(long jarg1, IntegRKF jarg1_);
  public final static native void IntegRKF_clearHalt(long jarg1, IntegRKF jarg1_);
  public final static native boolean IntegRKF_checkHalt(long jarg1, IntegRKF jarg1_);
  public final static native void delete_Manager(long jarg1);
  public final static native long new_Manager__SWIG_0(long jarg1, ModelIntegrand jarg1_);
  public final static native long new_Manager__SWIG_1();
  public final static native void Manager_setSessionName(long jarg1, Manager jarg1_, String jarg2);
  public final static native String Manager_getSessionName(long jarg1, Manager jarg1_);
  public final static native String Manager_toString(long jarg1, Manager jarg1_);
  public final static native void Manager_setIntegrand(long jarg1, Manager jarg1_, long jarg2, ModelIntegrand jarg2_);
  public final static native long Manager_getIntegrand(long jarg1, Manager jarg1_);
  public final static native long Manager_getIntegrator(long jarg1, Manager jarg1_);
  public final static native void Manager_setInitialTime(long jarg1, Manager jarg1_, double jarg2);
  public final static native double Manager_getInitialTime(long jarg1, Manager jarg1_);
  public final static native void Manager_setFinalTime(long jarg1, Manager jarg1_, double jarg2);
  public final static native double Manager_getFinalTime(long jarg1, Manager jarg1_);
  public final static native void Manager_setFirstDT(long jarg1, Manager jarg1_, double jarg2);
  public final static native double Manager_getFirstDT(long jarg1, Manager jarg1_);
  public final static native boolean Manager_initializeStates__SWIG_0(long jarg1, Manager jarg1_);
  public final static native boolean Manager_initializeStates__SWIG_1(long jarg1, Manager jarg1_, long jarg2, long jarg3);
  public final static native boolean Manager_initializeStates__SWIG_2(long jarg1, Manager jarg1_, long jarg2);
  public final static native boolean Manager_integrate__SWIG_0(long jarg1, Manager jarg1_);
  public final static native boolean Manager_integrate__SWIG_1(long jarg1, Manager jarg1_, int jarg2);
  public final static native boolean Manager_integrate__SWIG_2(long jarg1, Manager jarg1_, double jarg2);
  public final static native void delete_AbstractTool(long jarg1);
  public final static native void AbstractTool_setModel(long jarg1, AbstractTool jarg1_, long jarg2, Model jarg2_);
  public final static native long AbstractTool_getModel(long jarg1, AbstractTool jarg1_);
  public final static native void AbstractTool_setOutputPrecision(long jarg1, AbstractTool jarg1_, int jarg2);
  public final static native int AbstractTool_getOutputPrecision(long jarg1, AbstractTool jarg1_);
  public final static native long AbstractTool_getAnalysisSet(long jarg1, AbstractTool jarg1_);
  public final static native String AbstractTool_getResultsDir(long jarg1, AbstractTool jarg1_);
  public final static native void AbstractTool_setResultsDir(long jarg1, AbstractTool jarg1_, String jarg2);
  public final static native double AbstractTool_getStartTime(long jarg1, AbstractTool jarg1_);
  public final static native double AbstractTool_getFinalTime(long jarg1, AbstractTool jarg1_);
  public final static native void AbstractTool_setStartTime(long jarg1, AbstractTool jarg1_, double jarg2);
  public final static native void AbstractTool_setFinalTime(long jarg1, AbstractTool jarg1_, double jarg2);
  public final static native String AbstractTool_getModelFilename(long jarg1, AbstractTool jarg1_);
  public final static native void AbstractTool_setModelFilename(long jarg1, AbstractTool jarg1_, String jarg2);
  public final static native void AbstractTool_loadModel__SWIG_0(long jarg1, AbstractTool jarg1_, String jarg2, long jarg3, ActuatorSet jarg3_);
  public final static native void AbstractTool_loadModel__SWIG_1(long jarg1, AbstractTool jarg1_, String jarg2);
  public final static native void AbstractTool_addAnalysisSetToModel(long jarg1, AbstractTool jarg1_);
  public final static native void AbstractTool_run(long jarg1, AbstractTool jarg1_);
  public final static native void AbstractTool_printResults__SWIG_0(long jarg1, AbstractTool jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native void AbstractTool_printResults__SWIG_1(long jarg1, AbstractTool jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native void AbstractTool_printResults__SWIG_2(long jarg1, AbstractTool jarg1_, String jarg2, String jarg3);
  public final static native void AbstractTool_printResults__SWIG_3(long jarg1, AbstractTool jarg1_, String jarg2);
  public final static native void delete_ForwardTool(long jarg1);
  public final static native long new_ForwardTool__SWIG_0();
  public final static native long new_ForwardTool__SWIG_1(String jarg1);
  public final static native long new_ForwardTool__SWIG_2(long jarg1, ForwardTool jarg1_);
  public final static native long ForwardTool_copy(long jarg1, ForwardTool jarg1_);
  public final static native void ForwardTool_run(long jarg1, ForwardTool jarg1_);
  public final static native void ForwardTool_initializeExternalLoads__SWIG_0(long jarg1, Model jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, double jarg6, long jarg7, long jarg8, long jarg9, long jarg10);
  public final static native void ForwardTool_initializeExternalLoads__SWIG_1(long jarg1, Model jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, double jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void ForwardTool_initializeExternalLoads__SWIG_2(long jarg1, Model jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, double jarg6, long jarg7, long jarg8);
  public final static native void ForwardTool_initializeExternalLoads__SWIG_3(long jarg1, Model jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, double jarg6, long jarg7);
  public final static native void ForwardTool_initializeExternalLoads__SWIG_4(long jarg1, Model jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, double jarg6);
  public final static native long new_PerturbationTool__SWIG_0();
  public final static native long new_PerturbationTool__SWIG_1(String jarg1);
  public final static native void delete_PerturbationTool(long jarg1);
  public final static native long new_PerturbationTool__SWIG_2(long jarg1, PerturbationTool jarg1_);
  public final static native long PerturbationTool_copy(long jarg1, PerturbationTool jarg1_);
  public final static native void PerturbationTool_run(long jarg1, PerturbationTool jarg1_);
  public final static native void PerturbationTool_printResults__SWIG_0(long jarg1, PerturbationTool jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native void PerturbationTool_printResults__SWIG_1(long jarg1, PerturbationTool jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native void PerturbationTool_printResults__SWIG_2(long jarg1, PerturbationTool jarg1_, String jarg2, String jarg3);
  public final static native void PerturbationTool_printResults__SWIG_3(long jarg1, PerturbationTool jarg1_, String jarg2);
  public final static native long SimtkAnimationCallback_CreateAnimationCallback(long jarg1, Model jarg1_);
  public final static native long new_SimtkAnimationCallback(long jarg1, Model jarg1_);
  public final static native double SimtkAnimationCallback_getCurrentTime(long jarg1, SimtkAnimationCallback jarg1_);
  public final static native int SimtkAnimationCallback_step__SWIG_0(long jarg1, SimtkAnimationCallback jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12);
  public final static native int SimtkAnimationCallback_stepSwigExplicitSimtkAnimationCallback__SWIG_0(long jarg1, SimtkAnimationCallback jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12);
  public final static native int SimtkAnimationCallback_step__SWIG_1(long jarg1, SimtkAnimationCallback jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11);
  public final static native int SimtkAnimationCallback_stepSwigExplicitSimtkAnimationCallback__SWIG_1(long jarg1, SimtkAnimationCallback jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11);
  public final static native int SimtkAnimationCallback_step__SWIG_2(long jarg1, SimtkAnimationCallback jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10);
  public final static native int SimtkAnimationCallback_stepSwigExplicitSimtkAnimationCallback__SWIG_2(long jarg1, SimtkAnimationCallback jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10);
  public final static native int SimtkAnimationCallback_step__SWIG_3(long jarg1, SimtkAnimationCallback jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9);
  public final static native int SimtkAnimationCallback_stepSwigExplicitSimtkAnimationCallback__SWIG_3(long jarg1, SimtkAnimationCallback jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9);
  public final static native int SimtkAnimationCallback_begin__SWIG_0(long jarg1, SimtkAnimationCallback jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native int SimtkAnimationCallback_beginSwigExplicitSimtkAnimationCallback__SWIG_0(long jarg1, SimtkAnimationCallback jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native int SimtkAnimationCallback_begin__SWIG_1(long jarg1, SimtkAnimationCallback jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int SimtkAnimationCallback_beginSwigExplicitSimtkAnimationCallback__SWIG_1(long jarg1, SimtkAnimationCallback jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int SimtkAnimationCallback_begin__SWIG_2(long jarg1, SimtkAnimationCallback jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int SimtkAnimationCallback_beginSwigExplicitSimtkAnimationCallback__SWIG_2(long jarg1, SimtkAnimationCallback jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int SimtkAnimationCallback_begin__SWIG_3(long jarg1, SimtkAnimationCallback jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native int SimtkAnimationCallback_beginSwigExplicitSimtkAnimationCallback__SWIG_3(long jarg1, SimtkAnimationCallback jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native long SimtkAnimationCallback_getBodyTransform(long jarg1, SimtkAnimationCallback jarg1_, int jarg2);
  public final static native void SimtkAnimationCallback_extractOffsets(long jarg1, SimtkAnimationCallback jarg1_, long jarg2, Model jarg2_);
  public final static native void SimtkAnimationCallback_getTransformsFromKinematicsEngine(long jarg1, SimtkAnimationCallback jarg1_, long jarg2, Model jarg2_);
  public final static native void SimtkAnimationCallback_director_connect(SimtkAnimationCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void SimtkAnimationCallback_change_ownership(SimtkAnimationCallback obj, long cptr, boolean take_or_release);
  public final static native long new_Kinematics__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_Kinematics__SWIG_1();
  public final static native long new_Kinematics__SWIG_2(String jarg1);
  public final static native long new_Kinematics__SWIG_3(long jarg1, Kinematics jarg1_);
  public final static native long Kinematics_copy(long jarg1, Kinematics jarg1_);
  public final static native void delete_Kinematics(long jarg1);
  public final static native void Kinematics_setStorageCapacityIncrements(long jarg1, Kinematics jarg1_, int jarg2);
  public final static native long Kinematics_getAccelerationStorage(long jarg1, Kinematics jarg1_);
  public final static native long Kinematics_getVelocityStorage(long jarg1, Kinematics jarg1_);
  public final static native long Kinematics_getPositionStorage(long jarg1, Kinematics jarg1_);
  public final static native void Kinematics_setModel(long jarg1, Kinematics jarg1_, long jarg2, Model jarg2_);
  public final static native int Kinematics_begin__SWIG_0(long jarg1, Kinematics jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native int Kinematics_begin__SWIG_1(long jarg1, Kinematics jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int Kinematics_begin__SWIG_2(long jarg1, Kinematics jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int Kinematics_begin__SWIG_3(long jarg1, Kinematics jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native int Kinematics_step__SWIG_0(long jarg1, Kinematics jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12);
  public final static native int Kinematics_step__SWIG_1(long jarg1, Kinematics jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11);
  public final static native int Kinematics_step__SWIG_2(long jarg1, Kinematics jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10);
  public final static native int Kinematics_step__SWIG_3(long jarg1, Kinematics jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9);
  public final static native int Kinematics_end__SWIG_0(long jarg1, Kinematics jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native int Kinematics_end__SWIG_1(long jarg1, Kinematics jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int Kinematics_end__SWIG_2(long jarg1, Kinematics jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int Kinematics_end__SWIG_3(long jarg1, Kinematics jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native int Kinematics_printResults__SWIG_0(long jarg1, Kinematics jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int Kinematics_printResults__SWIG_1(long jarg1, Kinematics jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int Kinematics_printResults__SWIG_2(long jarg1, Kinematics jarg1_, String jarg2, String jarg3);
  public final static native int Kinematics_printResults__SWIG_3(long jarg1, Kinematics jarg1_, String jarg2);
  public final static native long Kinematics_getStorageList(long jarg1, Kinematics jarg1_);
  public final static native long new_Actuation__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_Actuation__SWIG_1();
  public final static native long new_Actuation__SWIG_2(String jarg1);
  public final static native long new_Actuation__SWIG_3(long jarg1, Actuation jarg1_);
  public final static native long Actuation_copy(long jarg1, Actuation jarg1_);
  public final static native void delete_Actuation(long jarg1);
  public final static native void Actuation_setStorageCapacityIncrements(long jarg1, Actuation jarg1_, int jarg2);
  public final static native long Actuation_getForceStorage(long jarg1, Actuation jarg1_);
  public final static native long Actuation_getSpeedStorage(long jarg1, Actuation jarg1_);
  public final static native long Actuation_getPowerStorage(long jarg1, Actuation jarg1_);
  public final static native void Actuation_setModel(long jarg1, Actuation jarg1_, long jarg2, Model jarg2_);
  public final static native int Actuation_begin__SWIG_0(long jarg1, Actuation jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native int Actuation_begin__SWIG_1(long jarg1, Actuation jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int Actuation_begin__SWIG_2(long jarg1, Actuation jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int Actuation_begin__SWIG_3(long jarg1, Actuation jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native int Actuation_step__SWIG_0(long jarg1, Actuation jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12);
  public final static native int Actuation_step__SWIG_1(long jarg1, Actuation jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11);
  public final static native int Actuation_step__SWIG_2(long jarg1, Actuation jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10);
  public final static native int Actuation_step__SWIG_3(long jarg1, Actuation jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9);
  public final static native int Actuation_end__SWIG_0(long jarg1, Actuation jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native int Actuation_end__SWIG_1(long jarg1, Actuation jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int Actuation_end__SWIG_2(long jarg1, Actuation jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int Actuation_end__SWIG_3(long jarg1, Actuation jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native int Actuation_printResults__SWIG_0(long jarg1, Actuation jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int Actuation_printResults__SWIG_1(long jarg1, Actuation jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int Actuation_printResults__SWIG_2(long jarg1, Actuation jarg1_, String jarg2, String jarg3);
  public final static native int Actuation_printResults__SWIG_3(long jarg1, Actuation jarg1_, String jarg2);
  public final static native long new_IndAcc__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_IndAcc__SWIG_1(long jarg1, Model jarg1_, long jarg2, Storage jarg2_, long jarg3, Storage jarg3_, String jarg4, String jarg5, String jarg6);
  public final static native long new_IndAcc__SWIG_2(long jarg1, Model jarg1_, long jarg2, Storage jarg2_, long jarg3, Storage jarg3_, String jarg4, String jarg5);
  public final static native long new_IndAcc__SWIG_3(long jarg1, Model jarg1_, long jarg2, Storage jarg2_, long jarg3, Storage jarg3_, String jarg4);
  public final static native void delete_IndAcc(long jarg1);
  public final static native int IndAcc_getNumComponents(long jarg1, IndAcc jarg1_);
  public final static native int IndAcc_getNumIndependentComponents(long jarg1, IndAcc jarg1_);
  public final static native int IndAcc_getNumElements(long jarg1, IndAcc jarg1_);
  public final static native int IndAcc_getLastActuatorIndex(long jarg1, IndAcc jarg1_);
  public final static native int IndAcc_getGravityIndex(long jarg1, IndAcc jarg1_);
  public final static native int IndAcc_getVelocityIndex(long jarg1, IndAcc jarg1_);
  public final static native int IndAcc_getInertialIndex(long jarg1, IndAcc jarg1_);
  public final static native int IndAcc_getAllActuatorsIndex(long jarg1, IndAcc jarg1_);
  public final static native int IndAcc_getAllIndex(long jarg1, IndAcc jarg1_);
  public final static native void IndAcc_setContactThreshold(long jarg1, IndAcc jarg1_, double jarg2);
  public final static native double IndAcc_getContactThreshold(long jarg1, IndAcc jarg1_);
  public final static native String IndAcc_getComponentName(long jarg1, IndAcc jarg1_, int jarg2);
  public final static native void IndAcc_setStorageCapacityIncrements(long jarg1, IndAcc jarg1_, int jarg2);
  public final static native long IndAcc_getForceStorage(long jarg1, IndAcc jarg1_);
  public final static native boolean IndAcc_getUseNullDecomposition(long jarg1, IndAcc jarg1_);
  public final static native void IndAcc_setComputeNormalizedAccelerations(long jarg1, IndAcc jarg1_, boolean jarg2);
  public final static native boolean IndAcc_getComputeNormalizedAccelerations(long jarg1, IndAcc jarg1_);
  public final static native int IndAcc_computeAccelerations(long jarg1, IndAcc jarg1_);
  public final static native void IndAcc_sumForceResults(long jarg1, IndAcc jarg1_);
  public final static native void IndAcc_sumAccelerationResults(long jarg1, IndAcc jarg1_);
  public final static native void IndAcc_sumDecomposition(long jarg1, IndAcc jarg1_);
  public final static native void IndAcc_store(long jarg1, IndAcc jarg1_);
  public final static native int IndAcc_printResults__SWIG_0(long jarg1, IndAcc jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int IndAcc_printResults__SWIG_1(long jarg1, IndAcc jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int IndAcc_printResults__SWIG_2(long jarg1, IndAcc jarg1_, String jarg2, String jarg3);
  public final static native int IndAcc_printResults__SWIG_3(long jarg1, IndAcc jarg1_, String jarg2);
  public final static native long new_GeneralizedForces__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_GeneralizedForces__SWIG_1();
  public final static native long new_GeneralizedForces__SWIG_2(String jarg1);
  public final static native long new_GeneralizedForces__SWIG_3(long jarg1, GeneralizedForces jarg1_);
  public final static native long GeneralizedForces_copy(long jarg1, GeneralizedForces jarg1_);
  public final static native void delete_GeneralizedForces(long jarg1);
  public final static native void GeneralizedForces_setStorageCapacityIncrements(long jarg1, GeneralizedForces jarg1_, int jarg2);
  public final static native long GeneralizedForces_getGravGenForcesStorage(long jarg1, GeneralizedForces jarg1_);
  public final static native long GeneralizedForces_getVelGenForcesStorage(long jarg1, GeneralizedForces jarg1_);
  public final static native long GeneralizedForces_getActuatorGenForcesStorage(long jarg1, GeneralizedForces jarg1_);
  public final static native long GeneralizedForces_getContactGenForcesStorage(long jarg1, GeneralizedForces jarg1_);
  public final static native void GeneralizedForces_setModel(long jarg1, GeneralizedForces jarg1_, long jarg2, Model jarg2_);
  public final static native int GeneralizedForces_begin__SWIG_0(long jarg1, GeneralizedForces jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native int GeneralizedForces_begin__SWIG_1(long jarg1, GeneralizedForces jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int GeneralizedForces_begin__SWIG_2(long jarg1, GeneralizedForces jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int GeneralizedForces_begin__SWIG_3(long jarg1, GeneralizedForces jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native int GeneralizedForces_step__SWIG_0(long jarg1, GeneralizedForces jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12);
  public final static native int GeneralizedForces_step__SWIG_1(long jarg1, GeneralizedForces jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11);
  public final static native int GeneralizedForces_step__SWIG_2(long jarg1, GeneralizedForces jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10);
  public final static native int GeneralizedForces_step__SWIG_3(long jarg1, GeneralizedForces jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9);
  public final static native int GeneralizedForces_end__SWIG_0(long jarg1, GeneralizedForces jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native int GeneralizedForces_end__SWIG_1(long jarg1, GeneralizedForces jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int GeneralizedForces_end__SWIG_2(long jarg1, GeneralizedForces jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int GeneralizedForces_end__SWIG_3(long jarg1, GeneralizedForces jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native int GeneralizedForces_printResults__SWIG_0(long jarg1, GeneralizedForces jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int GeneralizedForces_printResults__SWIG_1(long jarg1, GeneralizedForces jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int GeneralizedForces_printResults__SWIG_2(long jarg1, GeneralizedForces jarg1_, String jarg2, String jarg3);
  public final static native int GeneralizedForces_printResults__SWIG_3(long jarg1, GeneralizedForces jarg1_, String jarg2);
  public final static native long new_MuscleAnalysis__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_MuscleAnalysis__SWIG_1();
  public final static native long new_MuscleAnalysis__SWIG_2(String jarg1);
  public final static native long new_MuscleAnalysis__SWIG_3(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_copy(long jarg1, MuscleAnalysis jarg1_);
  public final static native void delete_MuscleAnalysis(long jarg1);
  public final static native void MuscleAnalysis_setModel(long jarg1, MuscleAnalysis jarg1_, long jarg2, Model jarg2_);
  public final static native void MuscleAnalysis_setStorageCapacityIncrements(long jarg1, MuscleAnalysis jarg1_, int jarg2);
  public final static native long MuscleAnalysis_getPennationAngleStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getMuscleTendonLengthStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getFiberLengthStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getNormalizedFiberLengthStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getTendonLegthStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getForceStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getFiberForceStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getActiveFiberForceStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getPassiveFiberForceStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getActiveFiberForceAlongTendonStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getPassiveFiberForceAlongTendonStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native int MuscleAnalysis_begin__SWIG_0(long jarg1, MuscleAnalysis jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native int MuscleAnalysis_begin__SWIG_1(long jarg1, MuscleAnalysis jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int MuscleAnalysis_begin__SWIG_2(long jarg1, MuscleAnalysis jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int MuscleAnalysis_begin__SWIG_3(long jarg1, MuscleAnalysis jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native int MuscleAnalysis_step__SWIG_0(long jarg1, MuscleAnalysis jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12);
  public final static native int MuscleAnalysis_step__SWIG_1(long jarg1, MuscleAnalysis jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11);
  public final static native int MuscleAnalysis_step__SWIG_2(long jarg1, MuscleAnalysis jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10);
  public final static native int MuscleAnalysis_step__SWIG_3(long jarg1, MuscleAnalysis jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9);
  public final static native int MuscleAnalysis_end__SWIG_0(long jarg1, MuscleAnalysis jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native int MuscleAnalysis_end__SWIG_1(long jarg1, MuscleAnalysis jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int MuscleAnalysis_end__SWIG_2(long jarg1, MuscleAnalysis jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int MuscleAnalysis_end__SWIG_3(long jarg1, MuscleAnalysis jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native int MuscleAnalysis_printResults__SWIG_0(long jarg1, MuscleAnalysis jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int MuscleAnalysis_printResults__SWIG_1(long jarg1, MuscleAnalysis jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int MuscleAnalysis_printResults__SWIG_2(long jarg1, MuscleAnalysis jarg1_, String jarg2, String jarg3);
  public final static native int MuscleAnalysis_printResults__SWIG_3(long jarg1, MuscleAnalysis jarg1_, String jarg2);
  public final static native long new_MomentArmAnalysis__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_MomentArmAnalysis__SWIG_1();
  public final static native long new_MomentArmAnalysis__SWIG_2(String jarg1);
  public final static native long new_MomentArmAnalysis__SWIG_3(long jarg1, MomentArmAnalysis jarg1_);
  public final static native long MomentArmAnalysis_copy(long jarg1, MomentArmAnalysis jarg1_);
  public final static native void delete_MomentArmAnalysis(long jarg1);
  public final static native void MomentArmAnalysis_setModel(long jarg1, MomentArmAnalysis jarg1_, long jarg2, Model jarg2_);
  public final static native void MomentArmAnalysis_setStorageCapacityIncrements(long jarg1, MomentArmAnalysis jarg1_, int jarg2);
  public final static native long MomentArmAnalysis_getMomentArmStorageArray(long jarg1, MomentArmAnalysis jarg1_);
  public final static native int MomentArmAnalysis_begin__SWIG_0(long jarg1, MomentArmAnalysis jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native int MomentArmAnalysis_begin__SWIG_1(long jarg1, MomentArmAnalysis jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int MomentArmAnalysis_begin__SWIG_2(long jarg1, MomentArmAnalysis jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int MomentArmAnalysis_begin__SWIG_3(long jarg1, MomentArmAnalysis jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native int MomentArmAnalysis_step__SWIG_0(long jarg1, MomentArmAnalysis jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12);
  public final static native int MomentArmAnalysis_step__SWIG_1(long jarg1, MomentArmAnalysis jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11);
  public final static native int MomentArmAnalysis_step__SWIG_2(long jarg1, MomentArmAnalysis jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9, long jarg10);
  public final static native int MomentArmAnalysis_step__SWIG_3(long jarg1, MomentArmAnalysis jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7, long jarg8, long jarg9);
  public final static native int MomentArmAnalysis_end__SWIG_0(long jarg1, MomentArmAnalysis jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native int MomentArmAnalysis_end__SWIG_1(long jarg1, MomentArmAnalysis jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int MomentArmAnalysis_end__SWIG_2(long jarg1, MomentArmAnalysis jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int MomentArmAnalysis_end__SWIG_3(long jarg1, MomentArmAnalysis jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native int MomentArmAnalysis_printResults__SWIG_0(long jarg1, MomentArmAnalysis jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int MomentArmAnalysis_printResults__SWIG_1(long jarg1, MomentArmAnalysis jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int MomentArmAnalysis_printResults__SWIG_2(long jarg1, MomentArmAnalysis jarg1_, String jarg2, String jarg3);
  public final static native int MomentArmAnalysis_printResults__SWIG_3(long jarg1, MomentArmAnalysis jarg1_, String jarg2);
  public final static native void delete_ArrayBool(long jarg1);
  public final static native long new_ArrayBool__SWIG_0(boolean jarg1, int jarg2, int jarg3);
  public final static native long new_ArrayBool__SWIG_1(boolean jarg1, int jarg2);
  public final static native long new_ArrayBool__SWIG_2(boolean jarg1);
  public final static native long new_ArrayBool__SWIG_3();
  public final static native long new_ArrayBool__SWIG_4(long jarg1, ArrayBool jarg1_);
  public final static native boolean ArrayBool_computeNewCapacity(long jarg1, ArrayBool jarg1_, int jarg2, long jarg3);
  public final static native boolean ArrayBool_ensureCapacity(long jarg1, ArrayBool jarg1_, int jarg2);
  public final static native void ArrayBool_trim(long jarg1, ArrayBool jarg1_);
  public final static native int ArrayBool_getCapacity(long jarg1, ArrayBool jarg1_);
  public final static native void ArrayBool_setCapacityIncrement(long jarg1, ArrayBool jarg1_, int jarg2);
  public final static native int ArrayBool_getCapacityIncrement(long jarg1, ArrayBool jarg1_);
  public final static native boolean ArrayBool_setSize(long jarg1, ArrayBool jarg1_, int jarg2);
  public final static native int ArrayBool_getSize(long jarg1, ArrayBool jarg1_);
  public final static native int ArrayBool_append__SWIG_0(long jarg1, ArrayBool jarg1_, boolean jarg2);
  public final static native int ArrayBool_append__SWIG_1(long jarg1, ArrayBool jarg1_, long jarg2, ArrayBool jarg2_);
  public final static native int ArrayBool_append__SWIG_2(long jarg1, ArrayBool jarg1_, int jarg2, long jarg3);
  public final static native int ArrayBool_insert(long jarg1, ArrayBool jarg1_, int jarg2, boolean jarg3);
  public final static native int ArrayBool_remove(long jarg1, ArrayBool jarg1_, int jarg2);
  public final static native void ArrayBool_set(long jarg1, ArrayBool jarg1_, int jarg2, boolean jarg3);
  public final static native long ArrayBool_get__SWIG_0(long jarg1, ArrayBool jarg1_);
  public final static native long ArrayBool_get__SWIG_1(long jarg1, ArrayBool jarg1_, int jarg2);
  public final static native boolean ArrayBool_getitem(long jarg1, ArrayBool jarg1_, int jarg2);
  public final static native void ArrayBool_setitem(long jarg1, ArrayBool jarg1_, int jarg2, boolean jarg3);
  public final static native long ArrayBool_getLast(long jarg1, ArrayBool jarg1_);
  public final static native int ArrayBool_findIndex(long jarg1, ArrayBool jarg1_, boolean jarg2);
  public final static native int ArrayBool_rfindIndex(long jarg1, ArrayBool jarg1_, boolean jarg2);
  public final static native int ArrayBool_searchBinary__SWIG_0(long jarg1, ArrayBool jarg1_, boolean jarg2, boolean jarg3, int jarg4, int jarg5);
  public final static native int ArrayBool_searchBinary__SWIG_1(long jarg1, ArrayBool jarg1_, boolean jarg2, boolean jarg3, int jarg4);
  public final static native int ArrayBool_searchBinary__SWIG_2(long jarg1, ArrayBool jarg1_, boolean jarg2, boolean jarg3);
  public final static native int ArrayBool_searchBinary__SWIG_3(long jarg1, ArrayBool jarg1_, boolean jarg2);
  public final static native void delete_ArrayDouble(long jarg1);
  public final static native long new_ArrayDouble__SWIG_0(double jarg1, int jarg2, int jarg3);
  public final static native long new_ArrayDouble__SWIG_1(double jarg1, int jarg2);
  public final static native long new_ArrayDouble__SWIG_2(double jarg1);
  public final static native long new_ArrayDouble__SWIG_3();
  public final static native long new_ArrayDouble__SWIG_4(long jarg1, ArrayDouble jarg1_);
  public final static native boolean ArrayDouble_computeNewCapacity(long jarg1, ArrayDouble jarg1_, int jarg2, long jarg3);
  public final static native boolean ArrayDouble_ensureCapacity(long jarg1, ArrayDouble jarg1_, int jarg2);
  public final static native void ArrayDouble_trim(long jarg1, ArrayDouble jarg1_);
  public final static native int ArrayDouble_getCapacity(long jarg1, ArrayDouble jarg1_);
  public final static native void ArrayDouble_setCapacityIncrement(long jarg1, ArrayDouble jarg1_, int jarg2);
  public final static native int ArrayDouble_getCapacityIncrement(long jarg1, ArrayDouble jarg1_);
  public final static native boolean ArrayDouble_setSize(long jarg1, ArrayDouble jarg1_, int jarg2);
  public final static native int ArrayDouble_getSize(long jarg1, ArrayDouble jarg1_);
  public final static native int ArrayDouble_append__SWIG_0(long jarg1, ArrayDouble jarg1_, double jarg2);
  public final static native int ArrayDouble_append__SWIG_1(long jarg1, ArrayDouble jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native int ArrayDouble_append__SWIG_2(long jarg1, ArrayDouble jarg1_, int jarg2, long jarg3);
  public final static native int ArrayDouble_insert(long jarg1, ArrayDouble jarg1_, int jarg2, double jarg3);
  public final static native int ArrayDouble_remove(long jarg1, ArrayDouble jarg1_, int jarg2);
  public final static native void ArrayDouble_set(long jarg1, ArrayDouble jarg1_, int jarg2, double jarg3);
  public final static native long ArrayDouble_get__SWIG_0(long jarg1, ArrayDouble jarg1_);
  public final static native long ArrayDouble_get__SWIG_1(long jarg1, ArrayDouble jarg1_, int jarg2);
  public final static native double ArrayDouble_getitem(long jarg1, ArrayDouble jarg1_, int jarg2);
  public final static native void ArrayDouble_setitem(long jarg1, ArrayDouble jarg1_, int jarg2, double jarg3);
  public final static native long ArrayDouble_getLast(long jarg1, ArrayDouble jarg1_);
  public final static native int ArrayDouble_findIndex(long jarg1, ArrayDouble jarg1_, double jarg2);
  public final static native int ArrayDouble_rfindIndex(long jarg1, ArrayDouble jarg1_, double jarg2);
  public final static native int ArrayDouble_searchBinary__SWIG_0(long jarg1, ArrayDouble jarg1_, double jarg2, boolean jarg3, int jarg4, int jarg5);
  public final static native int ArrayDouble_searchBinary__SWIG_1(long jarg1, ArrayDouble jarg1_, double jarg2, boolean jarg3, int jarg4);
  public final static native int ArrayDouble_searchBinary__SWIG_2(long jarg1, ArrayDouble jarg1_, double jarg2, boolean jarg3);
  public final static native int ArrayDouble_searchBinary__SWIG_3(long jarg1, ArrayDouble jarg1_, double jarg2);
  public final static native void delete_ArrayInt(long jarg1);
  public final static native long new_ArrayInt__SWIG_0(int jarg1, int jarg2, int jarg3);
  public final static native long new_ArrayInt__SWIG_1(int jarg1, int jarg2);
  public final static native long new_ArrayInt__SWIG_2(int jarg1);
  public final static native long new_ArrayInt__SWIG_3();
  public final static native long new_ArrayInt__SWIG_4(long jarg1, ArrayInt jarg1_);
  public final static native boolean ArrayInt_computeNewCapacity(long jarg1, ArrayInt jarg1_, int jarg2, long jarg3);
  public final static native boolean ArrayInt_ensureCapacity(long jarg1, ArrayInt jarg1_, int jarg2);
  public final static native void ArrayInt_trim(long jarg1, ArrayInt jarg1_);
  public final static native int ArrayInt_getCapacity(long jarg1, ArrayInt jarg1_);
  public final static native void ArrayInt_setCapacityIncrement(long jarg1, ArrayInt jarg1_, int jarg2);
  public final static native int ArrayInt_getCapacityIncrement(long jarg1, ArrayInt jarg1_);
  public final static native boolean ArrayInt_setSize(long jarg1, ArrayInt jarg1_, int jarg2);
  public final static native int ArrayInt_getSize(long jarg1, ArrayInt jarg1_);
  public final static native int ArrayInt_append__SWIG_0(long jarg1, ArrayInt jarg1_, int jarg2);
  public final static native int ArrayInt_append__SWIG_1(long jarg1, ArrayInt jarg1_, long jarg2, ArrayInt jarg2_);
  public final static native int ArrayInt_append__SWIG_2(long jarg1, ArrayInt jarg1_, int jarg2, long jarg3);
  public final static native int ArrayInt_insert(long jarg1, ArrayInt jarg1_, int jarg2, int jarg3);
  public final static native int ArrayInt_remove(long jarg1, ArrayInt jarg1_, int jarg2);
  public final static native void ArrayInt_set(long jarg1, ArrayInt jarg1_, int jarg2, int jarg3);
  public final static native long ArrayInt_get__SWIG_0(long jarg1, ArrayInt jarg1_);
  public final static native long ArrayInt_get__SWIG_1(long jarg1, ArrayInt jarg1_, int jarg2);
  public final static native int ArrayInt_getitem(long jarg1, ArrayInt jarg1_, int jarg2);
  public final static native void ArrayInt_setitem(long jarg1, ArrayInt jarg1_, int jarg2, int jarg3);
  public final static native long ArrayInt_getLast(long jarg1, ArrayInt jarg1_);
  public final static native int ArrayInt_findIndex(long jarg1, ArrayInt jarg1_, int jarg2);
  public final static native int ArrayInt_rfindIndex(long jarg1, ArrayInt jarg1_, int jarg2);
  public final static native int ArrayInt_searchBinary__SWIG_0(long jarg1, ArrayInt jarg1_, int jarg2, boolean jarg3, int jarg4, int jarg5);
  public final static native int ArrayInt_searchBinary__SWIG_1(long jarg1, ArrayInt jarg1_, int jarg2, boolean jarg3, int jarg4);
  public final static native int ArrayInt_searchBinary__SWIG_2(long jarg1, ArrayInt jarg1_, int jarg2, boolean jarg3);
  public final static native int ArrayInt_searchBinary__SWIG_3(long jarg1, ArrayInt jarg1_, int jarg2);
  public final static native void delete_ArrayStr(long jarg1);
  public final static native long new_ArrayStr__SWIG_0(String jarg1, int jarg2, int jarg3);
  public final static native long new_ArrayStr__SWIG_1(String jarg1, int jarg2);
  public final static native long new_ArrayStr__SWIG_2(String jarg1);
  public final static native long new_ArrayStr__SWIG_3();
  public final static native long new_ArrayStr__SWIG_4(long jarg1, ArrayStr jarg1_);
  public final static native boolean ArrayStr_computeNewCapacity(long jarg1, ArrayStr jarg1_, int jarg2, long jarg3);
  public final static native boolean ArrayStr_ensureCapacity(long jarg1, ArrayStr jarg1_, int jarg2);
  public final static native void ArrayStr_trim(long jarg1, ArrayStr jarg1_);
  public final static native int ArrayStr_getCapacity(long jarg1, ArrayStr jarg1_);
  public final static native void ArrayStr_setCapacityIncrement(long jarg1, ArrayStr jarg1_, int jarg2);
  public final static native int ArrayStr_getCapacityIncrement(long jarg1, ArrayStr jarg1_);
  public final static native boolean ArrayStr_setSize(long jarg1, ArrayStr jarg1_, int jarg2);
  public final static native int ArrayStr_getSize(long jarg1, ArrayStr jarg1_);
  public final static native int ArrayStr_append__SWIG_0(long jarg1, ArrayStr jarg1_, String jarg2);
  public final static native int ArrayStr_append__SWIG_1(long jarg1, ArrayStr jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native int ArrayStr_append__SWIG_2(long jarg1, ArrayStr jarg1_, int jarg2, long jarg3);
  public final static native int ArrayStr_insert(long jarg1, ArrayStr jarg1_, int jarg2, String jarg3);
  public final static native int ArrayStr_remove(long jarg1, ArrayStr jarg1_, int jarg2);
  public final static native void ArrayStr_set(long jarg1, ArrayStr jarg1_, int jarg2, String jarg3);
  public final static native long ArrayStr_get__SWIG_0(long jarg1, ArrayStr jarg1_);
  public final static native long ArrayStr_get__SWIG_1(long jarg1, ArrayStr jarg1_, int jarg2);
  public final static native String ArrayStr_getitem(long jarg1, ArrayStr jarg1_, int jarg2);
  public final static native void ArrayStr_setitem(long jarg1, ArrayStr jarg1_, int jarg2, String jarg3);
  public final static native long ArrayStr_getLast(long jarg1, ArrayStr jarg1_);
  public final static native int ArrayStr_findIndex(long jarg1, ArrayStr jarg1_, String jarg2);
  public final static native int ArrayStr_rfindIndex(long jarg1, ArrayStr jarg1_, String jarg2);
  public final static native int ArrayStr_searchBinary__SWIG_0(long jarg1, ArrayStr jarg1_, String jarg2, boolean jarg3, int jarg4, int jarg5);
  public final static native int ArrayStr_searchBinary__SWIG_1(long jarg1, ArrayStr jarg1_, String jarg2, boolean jarg3, int jarg4);
  public final static native int ArrayStr_searchBinary__SWIG_2(long jarg1, ArrayStr jarg1_, String jarg2, boolean jarg3);
  public final static native int ArrayStr_searchBinary__SWIG_3(long jarg1, ArrayStr jarg1_, String jarg2);
  public final static native void delete_ArrayPtrsObj(long jarg1);
  public final static native long new_ArrayPtrsObj__SWIG_0(int jarg1);
  public final static native long new_ArrayPtrsObj__SWIG_1();
  public final static native long new_ArrayPtrsObj__SWIG_2(long jarg1, ArrayPtrsObj jarg1_);
  public final static native void ArrayPtrsObj_clearAndDestroy(long jarg1, ArrayPtrsObj jarg1_);
  public final static native void ArrayPtrsObj_setMemoryOwner(long jarg1, ArrayPtrsObj jarg1_, boolean jarg2);
  public final static native boolean ArrayPtrsObj_getMemoryOwner(long jarg1, ArrayPtrsObj jarg1_);
  public final static native boolean ArrayPtrsObj_computeNewCapacity(long jarg1, ArrayPtrsObj jarg1_, int jarg2, long jarg3);
  public final static native boolean ArrayPtrsObj_ensureCapacity(long jarg1, ArrayPtrsObj jarg1_, int jarg2);
  public final static native void ArrayPtrsObj_trim(long jarg1, ArrayPtrsObj jarg1_);
  public final static native int ArrayPtrsObj_getCapacity(long jarg1, ArrayPtrsObj jarg1_);
  public final static native void ArrayPtrsObj_setCapacityIncrement(long jarg1, ArrayPtrsObj jarg1_, int jarg2);
  public final static native int ArrayPtrsObj_getCapacityIncrement(long jarg1, ArrayPtrsObj jarg1_);
  public final static native boolean ArrayPtrsObj_setSize(long jarg1, ArrayPtrsObj jarg1_, int jarg2);
  public final static native int ArrayPtrsObj_getSize(long jarg1, ArrayPtrsObj jarg1_);
  public final static native int ArrayPtrsObj_getIndex__SWIG_0(long jarg1, ArrayPtrsObj jarg1_, long jarg2, OpenSimObject jarg2_, int jarg3);
  public final static native int ArrayPtrsObj_getIndex__SWIG_1(long jarg1, ArrayPtrsObj jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native int ArrayPtrsObj_getIndex__SWIG_2(long jarg1, ArrayPtrsObj jarg1_, String jarg2, int jarg3);
  public final static native int ArrayPtrsObj_getIndex__SWIG_3(long jarg1, ArrayPtrsObj jarg1_, String jarg2);
  public final static native boolean ArrayPtrsObj_append__SWIG_0(long jarg1, ArrayPtrsObj jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native boolean ArrayPtrsObj_append__SWIG_1(long jarg1, ArrayPtrsObj jarg1_, long jarg2, ArrayPtrsObj jarg2_);
  public final static native boolean ArrayPtrsObj_insert(long jarg1, ArrayPtrsObj jarg1_, int jarg2, long jarg3, OpenSimObject jarg3_);
  public final static native boolean ArrayPtrsObj_remove__SWIG_0(long jarg1, ArrayPtrsObj jarg1_, int jarg2);
  public final static native boolean ArrayPtrsObj_remove__SWIG_1(long jarg1, ArrayPtrsObj jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native boolean ArrayPtrsObj_set(long jarg1, ArrayPtrsObj jarg1_, int jarg2, long jarg3, OpenSimObject jarg3_);
  public final static native long ArrayPtrsObj_get__SWIG_0(long jarg1, ArrayPtrsObj jarg1_, int jarg2);
  public final static native long ArrayPtrsObj_get__SWIG_1(long jarg1, ArrayPtrsObj jarg1_, String jarg2);
  public final static native long ArrayPtrsObj_getLast(long jarg1, ArrayPtrsObj jarg1_);
  public final static native int ArrayPtrsObj_searchBinary__SWIG_0(long jarg1, ArrayPtrsObj jarg1_, long jarg2, OpenSimObject jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int ArrayPtrsObj_searchBinary__SWIG_1(long jarg1, ArrayPtrsObj jarg1_, long jarg2, OpenSimObject jarg2_, boolean jarg3, int jarg4);
  public final static native int ArrayPtrsObj_searchBinary__SWIG_2(long jarg1, ArrayPtrsObj jarg1_, long jarg2, OpenSimObject jarg2_, boolean jarg3);
  public final static native int ArrayPtrsObj_searchBinary__SWIG_3(long jarg1, ArrayPtrsObj jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native void delete_AbstractMarker(long jarg1);
  public final static native long AbstractMarker_copy__SWIG_0(long jarg1, AbstractMarker jarg1_);
  public final static native void AbstractMarker_updateFromMarker(long jarg1, AbstractMarker jarg1_, long jarg2, AbstractMarker jarg2_);
  public final static native void AbstractMarker_getOffset__SWIG_0(long jarg1, AbstractMarker jarg1_, long jarg2);
  public final static native long AbstractMarker_getOffset__SWIG_1(long jarg1, AbstractMarker jarg1_);
  public final static native boolean AbstractMarker_setOffset__SWIG_0(long jarg1, AbstractMarker jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native boolean AbstractMarker_setOffset__SWIG_1(long jarg1, AbstractMarker jarg1_, double[] jarg2);
  public final static native boolean AbstractMarker_getOffsetUseDefault(long jarg1, AbstractMarker jarg1_);
  public final static native boolean AbstractMarker_getFixed(long jarg1, AbstractMarker jarg1_);
  public final static native boolean AbstractMarker_setFixed(long jarg1, AbstractMarker jarg1_, boolean jarg2);
  public final static native boolean AbstractMarker_getFixedUseDefault(long jarg1, AbstractMarker jarg1_);
  public final static native long AbstractMarker_getBodyName(long jarg1, AbstractMarker jarg1_);
  public final static native boolean AbstractMarker_setBodyName(long jarg1, AbstractMarker jarg1_, String jarg2);
  public final static native boolean AbstractMarker_getBodyNameUseDefault(long jarg1, AbstractMarker jarg1_);
  public final static native boolean AbstractMarker_setBodyNameUseDefault(long jarg1, AbstractMarker jarg1_, boolean jarg2);
  public final static native long AbstractMarker_getBody(long jarg1, AbstractMarker jarg1_);
  public final static native void AbstractMarker_setBody(long jarg1, AbstractMarker jarg1_, long jarg2, AbstractBody jarg2_);
  public final static native void AbstractMarker_scale(long jarg1, AbstractMarker jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void AbstractMarker_setup(long jarg1, AbstractMarker jarg1_, long jarg2, AbstractDynamicsEngine jarg2_);
  public final static native void AbstractMarker_removeSelfFromDisplay(long jarg1, AbstractMarker jarg1_);
  public final static native long AbstractMarker_getDisplayer(long jarg1, AbstractMarker jarg1_);
  public final static native void AbstractMarker_updateGeometry(long jarg1, AbstractMarker jarg1_);
  public final static native void AbstractMarker_peteTest(long jarg1, AbstractMarker jarg1_);
  public final static native boolean AbstractMarker_isKindOf(String jarg1);
  public final static native boolean AbstractMarker_isA(long jarg1, AbstractMarker jarg1_, String jarg2);
  public final static native long AbstractMarker_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void AbstractMarker_copy__SWIG_1(long jarg1, AbstractMarker jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native void delete_SetMarkers(long jarg1);
  public final static native long new_SetMarkers__SWIG_0();
  public final static native long new_SetMarkers__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_SetMarkers__SWIG_2(String jarg1);
  public final static native long new_SetMarkers__SWIG_3(long jarg1, SetMarkers jarg1_);
  public final static native long SetMarkers_copy(long jarg1, SetMarkers jarg1_);
  public final static native void SetMarkers_setup(long jarg1, SetMarkers jarg1_);
  public final static native void SetMarkers_setMemoryOwner(long jarg1, SetMarkers jarg1_, boolean jarg2);
  public final static native boolean SetMarkers_getMemoryOwner(long jarg1, SetMarkers jarg1_);
  public final static native boolean SetMarkers_computeNewCapacity(long jarg1, SetMarkers jarg1_, int jarg2, long jarg3);
  public final static native boolean SetMarkers_ensureCapacity(long jarg1, SetMarkers jarg1_, int jarg2);
  public final static native void SetMarkers_trim(long jarg1, SetMarkers jarg1_);
  public final static native int SetMarkers_getCapacity(long jarg1, SetMarkers jarg1_);
  public final static native void SetMarkers_setCapacityIncrement(long jarg1, SetMarkers jarg1_, int jarg2);
  public final static native int SetMarkers_getCapacityIncrement(long jarg1, SetMarkers jarg1_);
  public final static native boolean SetMarkers_setSize(long jarg1, SetMarkers jarg1_, int jarg2);
  public final static native int SetMarkers_getSize(long jarg1, SetMarkers jarg1_);
  public final static native int SetMarkers_getIndex__SWIG_0(long jarg1, SetMarkers jarg1_, long jarg2, AbstractMarker jarg2_, int jarg3);
  public final static native int SetMarkers_getIndex__SWIG_1(long jarg1, SetMarkers jarg1_, long jarg2, AbstractMarker jarg2_);
  public final static native int SetMarkers_getIndex__SWIG_2(long jarg1, SetMarkers jarg1_, String jarg2, int jarg3);
  public final static native int SetMarkers_getIndex__SWIG_3(long jarg1, SetMarkers jarg1_, String jarg2);
  public final static native void SetMarkers_getGroupNamesContaining(long jarg1, SetMarkers jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetMarkers_append__SWIG_0(long jarg1, SetMarkers jarg1_, long jarg2, AbstractMarker jarg2_);
  public final static native boolean SetMarkers_append__SWIG_1(long jarg1, SetMarkers jarg1_, long jarg2);
  public final static native boolean SetMarkers_insert(long jarg1, SetMarkers jarg1_, int jarg2, long jarg3, AbstractMarker jarg3_);
  public final static native boolean SetMarkers_remove__SWIG_0(long jarg1, SetMarkers jarg1_, int jarg2);
  public final static native boolean SetMarkers_remove__SWIG_1(long jarg1, SetMarkers jarg1_, long jarg2, AbstractMarker jarg2_);
  public final static native void SetMarkers_clearAndDestroy(long jarg1, SetMarkers jarg1_);
  public final static native boolean SetMarkers_set(long jarg1, SetMarkers jarg1_, int jarg2, long jarg3, AbstractMarker jarg3_);
  public final static native long SetMarkers_get__SWIG_0(long jarg1, SetMarkers jarg1_, int jarg2);
  public final static native long SetMarkers_get__SWIG_1(long jarg1, SetMarkers jarg1_, String jarg2);
  public final static native void SetMarkers_getNames(long jarg1, SetMarkers jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetMarkers_getLast(long jarg1, SetMarkers jarg1_);
  public final static native int SetMarkers_searchBinary__SWIG_0(long jarg1, SetMarkers jarg1_, long jarg2, AbstractMarker jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int SetMarkers_searchBinary__SWIG_1(long jarg1, SetMarkers jarg1_, long jarg2, AbstractMarker jarg2_, boolean jarg3, int jarg4);
  public final static native int SetMarkers_searchBinary__SWIG_2(long jarg1, SetMarkers jarg1_, long jarg2, AbstractMarker jarg2_, boolean jarg3);
  public final static native int SetMarkers_searchBinary__SWIG_3(long jarg1, SetMarkers jarg1_, long jarg2, AbstractMarker jarg2_);
  public final static native int SetMarkers_getNumGroups(long jarg1, SetMarkers jarg1_);
  public final static native void SetMarkers_addGroup(long jarg1, SetMarkers jarg1_, String jarg2);
  public final static native void SetMarkers_removeGroup(long jarg1, SetMarkers jarg1_, String jarg2);
  public final static native void SetMarkers_renameGroup(long jarg1, SetMarkers jarg1_, String jarg2, String jarg3);
  public final static native void SetMarkers_addObjectToGroup(long jarg1, SetMarkers jarg1_, String jarg2, String jarg3);
  public final static native void SetMarkers_getGroupNames(long jarg1, SetMarkers jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetMarkers_getGroup__SWIG_0(long jarg1, SetMarkers jarg1_, String jarg2);
  public final static native long SetMarkers_getGroup__SWIG_1(long jarg1, SetMarkers jarg1_, int jarg2);
  public final static native long new_MarkerSet__SWIG_0();
  public final static native long new_MarkerSet__SWIG_1(String jarg1);
  public final static native long new_MarkerSet__SWIG_2(long jarg1, MarkerSet jarg1_);
  public final static native void delete_MarkerSet(long jarg1);
  public final static native void MarkerSet_getMarkerNames(long jarg1, MarkerSet jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native void MarkerSet_scale(long jarg1, MarkerSet jarg1_, long jarg2, ScaleSet jarg2_);
  public final static native void MarkerSet_addNamePrefix(long jarg1, MarkerSet jarg1_, String jarg2);
  public final static native long new_Range__SWIG_0();
  public final static native long new_Range__SWIG_1(long jarg1, Range jarg1_);
  public final static native void delete_Range(long jarg1);
  public final static native long Range_copy(long jarg1, Range jarg1_);
  public final static native double Range_getMin(long jarg1, Range jarg1_);
  public final static native void Range_setMin(long jarg1, Range jarg1_, double jarg2);
  public final static native double Range_getMax(long jarg1, Range jarg1_);
  public final static native void Range_setMax(long jarg1, Range jarg1_, double jarg2);
  public final static native long new_Scale__SWIG_0();
  public final static native long new_Scale__SWIG_1(long jarg1, Scale jarg1_);
  public final static native long new_Scale__SWIG_2(String jarg1);
  public final static native void delete_Scale(long jarg1);
  public final static native long Scale_copy(long jarg1, Scale jarg1_);
  public final static native void Scale_getScaleFactors(long jarg1, Scale jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native String Scale_getSegmentName(long jarg1, Scale jarg1_);
  public final static native void Scale_setSegmentName(long jarg1, Scale jarg1_, String jarg2);
  public final static native void Scale_setScaleFactors(long jarg1, Scale jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native boolean Scale_getApply(long jarg1, Scale jarg1_);
  public final static native void Scale_setApply(long jarg1, Scale jarg1_, boolean jarg2);
  public final static native void delete_SetScales(long jarg1);
  public final static native long new_SetScales__SWIG_0();
  public final static native long new_SetScales__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_SetScales__SWIG_2(String jarg1);
  public final static native long new_SetScales__SWIG_3(long jarg1, SetScales jarg1_);
  public final static native long SetScales_copy(long jarg1, SetScales jarg1_);
  public final static native void SetScales_setup(long jarg1, SetScales jarg1_);
  public final static native void SetScales_setMemoryOwner(long jarg1, SetScales jarg1_, boolean jarg2);
  public final static native boolean SetScales_getMemoryOwner(long jarg1, SetScales jarg1_);
  public final static native boolean SetScales_computeNewCapacity(long jarg1, SetScales jarg1_, int jarg2, long jarg3);
  public final static native boolean SetScales_ensureCapacity(long jarg1, SetScales jarg1_, int jarg2);
  public final static native void SetScales_trim(long jarg1, SetScales jarg1_);
  public final static native int SetScales_getCapacity(long jarg1, SetScales jarg1_);
  public final static native void SetScales_setCapacityIncrement(long jarg1, SetScales jarg1_, int jarg2);
  public final static native int SetScales_getCapacityIncrement(long jarg1, SetScales jarg1_);
  public final static native boolean SetScales_setSize(long jarg1, SetScales jarg1_, int jarg2);
  public final static native int SetScales_getSize(long jarg1, SetScales jarg1_);
  public final static native int SetScales_getIndex__SWIG_0(long jarg1, SetScales jarg1_, long jarg2, Scale jarg2_, int jarg3);
  public final static native int SetScales_getIndex__SWIG_1(long jarg1, SetScales jarg1_, long jarg2, Scale jarg2_);
  public final static native int SetScales_getIndex__SWIG_2(long jarg1, SetScales jarg1_, String jarg2, int jarg3);
  public final static native int SetScales_getIndex__SWIG_3(long jarg1, SetScales jarg1_, String jarg2);
  public final static native void SetScales_getGroupNamesContaining(long jarg1, SetScales jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetScales_append__SWIG_0(long jarg1, SetScales jarg1_, long jarg2, Scale jarg2_);
  public final static native boolean SetScales_append__SWIG_1(long jarg1, SetScales jarg1_, long jarg2);
  public final static native boolean SetScales_insert(long jarg1, SetScales jarg1_, int jarg2, long jarg3, Scale jarg3_);
  public final static native boolean SetScales_remove__SWIG_0(long jarg1, SetScales jarg1_, int jarg2);
  public final static native boolean SetScales_remove__SWIG_1(long jarg1, SetScales jarg1_, long jarg2, Scale jarg2_);
  public final static native void SetScales_clearAndDestroy(long jarg1, SetScales jarg1_);
  public final static native boolean SetScales_set(long jarg1, SetScales jarg1_, int jarg2, long jarg3, Scale jarg3_);
  public final static native long SetScales_get__SWIG_0(long jarg1, SetScales jarg1_, int jarg2);
  public final static native long SetScales_get__SWIG_1(long jarg1, SetScales jarg1_, String jarg2);
  public final static native void SetScales_getNames(long jarg1, SetScales jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetScales_getLast(long jarg1, SetScales jarg1_);
  public final static native int SetScales_searchBinary__SWIG_0(long jarg1, SetScales jarg1_, long jarg2, Scale jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int SetScales_searchBinary__SWIG_1(long jarg1, SetScales jarg1_, long jarg2, Scale jarg2_, boolean jarg3, int jarg4);
  public final static native int SetScales_searchBinary__SWIG_2(long jarg1, SetScales jarg1_, long jarg2, Scale jarg2_, boolean jarg3);
  public final static native int SetScales_searchBinary__SWIG_3(long jarg1, SetScales jarg1_, long jarg2, Scale jarg2_);
  public final static native int SetScales_getNumGroups(long jarg1, SetScales jarg1_);
  public final static native void SetScales_addGroup(long jarg1, SetScales jarg1_, String jarg2);
  public final static native void SetScales_removeGroup(long jarg1, SetScales jarg1_, String jarg2);
  public final static native void SetScales_renameGroup(long jarg1, SetScales jarg1_, String jarg2, String jarg3);
  public final static native void SetScales_addObjectToGroup(long jarg1, SetScales jarg1_, String jarg2, String jarg3);
  public final static native void SetScales_getGroupNames(long jarg1, SetScales jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetScales_getGroup__SWIG_0(long jarg1, SetScales jarg1_, String jarg2);
  public final static native long SetScales_getGroup__SWIG_1(long jarg1, SetScales jarg1_, int jarg2);
  public final static native long new_ScaleSet__SWIG_0();
  public final static native long new_ScaleSet__SWIG_1(String jarg1);
  public final static native void delete_ScaleSet(long jarg1);
  public final static native void delete_AbstractWrapObject(long jarg1);
  public final static native long AbstractWrapObject_copy(long jarg1, AbstractWrapObject jarg1_);
  public final static native void AbstractWrapObject_copyData(long jarg1, AbstractWrapObject jarg1_, long jarg2, AbstractWrapObject jarg2_);
  public final static native void AbstractWrapObject_scale(long jarg1, AbstractWrapObject jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void AbstractWrapObject_setup(long jarg1, AbstractWrapObject jarg1_, long jarg2, AbstractDynamicsEngine jarg2_, long jarg3, AbstractBody jarg3_);
  public final static native long AbstractWrapObject_getBody(long jarg1, AbstractWrapObject jarg1_);
  public final static native long AbstractWrapObject_getXYZBodyRotation(long jarg1, AbstractWrapObject jarg1_);
  public final static native long AbstractWrapObject_getTranslation(long jarg1, AbstractWrapObject jarg1_);
  public final static native boolean AbstractWrapObject_getActive(long jarg1, AbstractWrapObject jarg1_);
  public final static native boolean AbstractWrapObject_getActiveUseDefault(long jarg1, AbstractWrapObject jarg1_);
  public final static native String AbstractWrapObject_getQuadrantName(long jarg1, AbstractWrapObject jarg1_);
  public final static native boolean AbstractWrapObject_getQuadrantNameUseDefault(long jarg1, AbstractWrapObject jarg1_);
  public final static native void AbstractWrapObject_setQuadrantName(long jarg1, AbstractWrapObject jarg1_, String jarg2);
  public final static native String AbstractWrapObject_getWrapTypeName(long jarg1, AbstractWrapObject jarg1_);
  public final static native String AbstractWrapObject_getDimensionsString(long jarg1, AbstractWrapObject jarg1_);
  public final static native int AbstractWrapObject_wrapMuscleSegment(long jarg1, AbstractWrapObject jarg1_, long jarg2, MusclePoint jarg2_, long jarg3, MusclePoint jarg3_, long jarg4, MuscleWrap jarg4_, long jarg5);
  public final static native int AbstractWrapObject_wrapLine(long jarg1, AbstractWrapObject jarg1_, long jarg2, ArrayDouble jarg2_, long jarg3, ArrayDouble jarg3_, long jarg4, MuscleWrap jarg4_, long jarg5, long jarg6);
  public final static native long AbstractWrapObject_getDisplayer(long jarg1, AbstractWrapObject jarg1_);
  public final static native void AbstractWrapObject_updateGeometry(long jarg1, AbstractWrapObject jarg1_);
  public final static native void AbstractWrapObject_peteTest(long jarg1, AbstractWrapObject jarg1_);
  public final static native long new_WrapSphere__SWIG_0();
  public final static native long new_WrapSphere__SWIG_1(long jarg1, WrapSphere jarg1_);
  public final static native void delete_WrapSphere(long jarg1);
  public final static native long WrapSphere_copy(long jarg1, WrapSphere jarg1_);
  public final static native void WrapSphere_copyData(long jarg1, WrapSphere jarg1_, long jarg2, WrapSphere jarg2_);
  public final static native String WrapSphere_getWrapTypeName(long jarg1, WrapSphere jarg1_);
  public final static native String WrapSphere_getDimensionsString(long jarg1, WrapSphere jarg1_);
  public final static native void WrapSphere_scale(long jarg1, WrapSphere jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void WrapSphere_setup(long jarg1, WrapSphere jarg1_, long jarg2, AbstractDynamicsEngine jarg2_, long jarg3, AbstractBody jarg3_);
  public final static native int WrapSphere_wrapLine(long jarg1, WrapSphere jarg1_, long jarg2, ArrayDouble jarg2_, long jarg3, ArrayDouble jarg3_, long jarg4, MuscleWrap jarg4_, long jarg5, long jarg6);
  public final static native void WrapSphere_peteTest(long jarg1, WrapSphere jarg1_);
  public final static native long new_WrapCylinder__SWIG_0();
  public final static native long new_WrapCylinder__SWIG_1(long jarg1, WrapCylinder jarg1_);
  public final static native void delete_WrapCylinder(long jarg1);
  public final static native long WrapCylinder_copy(long jarg1, WrapCylinder jarg1_);
  public final static native void WrapCylinder_copyData(long jarg1, WrapCylinder jarg1_, long jarg2, WrapCylinder jarg2_);
  public final static native double WrapCylinder_getRadius(long jarg1, WrapCylinder jarg1_);
  public final static native void WrapCylinder_setRadius(long jarg1, WrapCylinder jarg1_, double jarg2);
  public final static native double WrapCylinder_getLength(long jarg1, WrapCylinder jarg1_);
  public final static native void WrapCylinder_setLength(long jarg1, WrapCylinder jarg1_, double jarg2);
  public final static native String WrapCylinder_getWrapTypeName(long jarg1, WrapCylinder jarg1_);
  public final static native String WrapCylinder_getDimensionsString(long jarg1, WrapCylinder jarg1_);
  public final static native void WrapCylinder_scale(long jarg1, WrapCylinder jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void WrapCylinder_setup(long jarg1, WrapCylinder jarg1_, long jarg2, AbstractDynamicsEngine jarg2_, long jarg3, AbstractBody jarg3_);
  public final static native int WrapCylinder_wrapLine(long jarg1, WrapCylinder jarg1_, long jarg2, ArrayDouble jarg2_, long jarg3, ArrayDouble jarg3_, long jarg4, MuscleWrap jarg4_, long jarg5, long jarg6);
  public final static native void WrapCylinder_peteTest(long jarg1, WrapCylinder jarg1_);
  public final static native long new_WrapTorus__SWIG_0();
  public final static native long new_WrapTorus__SWIG_1(long jarg1, WrapTorus jarg1_);
  public final static native void delete_WrapTorus(long jarg1);
  public final static native long WrapTorus_copy(long jarg1, WrapTorus jarg1_);
  public final static native void WrapTorus_copyData(long jarg1, WrapTorus jarg1_, long jarg2, WrapTorus jarg2_);
  public final static native String WrapTorus_getWrapTypeName(long jarg1, WrapTorus jarg1_);
  public final static native String WrapTorus_getDimensionsString(long jarg1, WrapTorus jarg1_);
  public final static native void WrapTorus_scale(long jarg1, WrapTorus jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void WrapTorus_setup(long jarg1, WrapTorus jarg1_, long jarg2, AbstractDynamicsEngine jarg2_, long jarg3, AbstractBody jarg3_);
  public final static native int WrapTorus_wrapLine(long jarg1, WrapTorus jarg1_, long jarg2, ArrayDouble jarg2_, long jarg3, ArrayDouble jarg3_, long jarg4, MuscleWrap jarg4_, long jarg5, long jarg6);
  public final static native void WrapTorus_peteTest(long jarg1, WrapTorus jarg1_);
  public final static native long new_WrapEllipsoid__SWIG_0();
  public final static native long new_WrapEllipsoid__SWIG_1(long jarg1, WrapEllipsoid jarg1_);
  public final static native void delete_WrapEllipsoid(long jarg1);
  public final static native long WrapEllipsoid_copy__SWIG_0(long jarg1, WrapEllipsoid jarg1_);
  public final static native void WrapEllipsoid_copyData(long jarg1, WrapEllipsoid jarg1_, long jarg2, WrapEllipsoid jarg2_);
  public final static native String WrapEllipsoid_getWrapTypeName(long jarg1, WrapEllipsoid jarg1_);
  public final static native String WrapEllipsoid_getDimensionsString(long jarg1, WrapEllipsoid jarg1_);
  public final static native void WrapEllipsoid_scale(long jarg1, WrapEllipsoid jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void WrapEllipsoid_setup(long jarg1, WrapEllipsoid jarg1_, long jarg2, AbstractDynamicsEngine jarg2_, long jarg3, AbstractBody jarg3_);
  public final static native int WrapEllipsoid_wrapLine(long jarg1, WrapEllipsoid jarg1_, long jarg2, ArrayDouble jarg2_, long jarg3, ArrayDouble jarg3_, long jarg4, MuscleWrap jarg4_, long jarg5, long jarg6);
  public final static native void WrapEllipsoid_peteTest(long jarg1, WrapEllipsoid jarg1_);
  public final static native boolean WrapEllipsoid_isKindOf(String jarg1);
  public final static native boolean WrapEllipsoid_isA(long jarg1, WrapEllipsoid jarg1_, String jarg2);
  public final static native long WrapEllipsoid_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void WrapEllipsoid_copy__SWIG_1(long jarg1, WrapEllipsoid jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native void delete_SetWrapObject(long jarg1);
  public final static native long new_SetWrapObject__SWIG_0();
  public final static native long new_SetWrapObject__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_SetWrapObject__SWIG_2(String jarg1);
  public final static native long new_SetWrapObject__SWIG_3(long jarg1, SetWrapObject jarg1_);
  public final static native long SetWrapObject_copy(long jarg1, SetWrapObject jarg1_);
  public final static native void SetWrapObject_setup(long jarg1, SetWrapObject jarg1_);
  public final static native void SetWrapObject_setMemoryOwner(long jarg1, SetWrapObject jarg1_, boolean jarg2);
  public final static native boolean SetWrapObject_getMemoryOwner(long jarg1, SetWrapObject jarg1_);
  public final static native boolean SetWrapObject_computeNewCapacity(long jarg1, SetWrapObject jarg1_, int jarg2, long jarg3);
  public final static native boolean SetWrapObject_ensureCapacity(long jarg1, SetWrapObject jarg1_, int jarg2);
  public final static native void SetWrapObject_trim(long jarg1, SetWrapObject jarg1_);
  public final static native int SetWrapObject_getCapacity(long jarg1, SetWrapObject jarg1_);
  public final static native void SetWrapObject_setCapacityIncrement(long jarg1, SetWrapObject jarg1_, int jarg2);
  public final static native int SetWrapObject_getCapacityIncrement(long jarg1, SetWrapObject jarg1_);
  public final static native boolean SetWrapObject_setSize(long jarg1, SetWrapObject jarg1_, int jarg2);
  public final static native int SetWrapObject_getSize(long jarg1, SetWrapObject jarg1_);
  public final static native int SetWrapObject_getIndex__SWIG_0(long jarg1, SetWrapObject jarg1_, long jarg2, AbstractWrapObject jarg2_, int jarg3);
  public final static native int SetWrapObject_getIndex__SWIG_1(long jarg1, SetWrapObject jarg1_, long jarg2, AbstractWrapObject jarg2_);
  public final static native int SetWrapObject_getIndex__SWIG_2(long jarg1, SetWrapObject jarg1_, String jarg2, int jarg3);
  public final static native int SetWrapObject_getIndex__SWIG_3(long jarg1, SetWrapObject jarg1_, String jarg2);
  public final static native void SetWrapObject_getGroupNamesContaining(long jarg1, SetWrapObject jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetWrapObject_append__SWIG_0(long jarg1, SetWrapObject jarg1_, long jarg2, AbstractWrapObject jarg2_);
  public final static native boolean SetWrapObject_append__SWIG_1(long jarg1, SetWrapObject jarg1_, long jarg2);
  public final static native boolean SetWrapObject_insert(long jarg1, SetWrapObject jarg1_, int jarg2, long jarg3, AbstractWrapObject jarg3_);
  public final static native boolean SetWrapObject_remove__SWIG_0(long jarg1, SetWrapObject jarg1_, int jarg2);
  public final static native boolean SetWrapObject_remove__SWIG_1(long jarg1, SetWrapObject jarg1_, long jarg2, AbstractWrapObject jarg2_);
  public final static native void SetWrapObject_clearAndDestroy(long jarg1, SetWrapObject jarg1_);
  public final static native boolean SetWrapObject_set(long jarg1, SetWrapObject jarg1_, int jarg2, long jarg3, AbstractWrapObject jarg3_);
  public final static native long SetWrapObject_get__SWIG_0(long jarg1, SetWrapObject jarg1_, int jarg2);
  public final static native long SetWrapObject_get__SWIG_1(long jarg1, SetWrapObject jarg1_, String jarg2);
  public final static native void SetWrapObject_getNames(long jarg1, SetWrapObject jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetWrapObject_getLast(long jarg1, SetWrapObject jarg1_);
  public final static native int SetWrapObject_searchBinary__SWIG_0(long jarg1, SetWrapObject jarg1_, long jarg2, AbstractWrapObject jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int SetWrapObject_searchBinary__SWIG_1(long jarg1, SetWrapObject jarg1_, long jarg2, AbstractWrapObject jarg2_, boolean jarg3, int jarg4);
  public final static native int SetWrapObject_searchBinary__SWIG_2(long jarg1, SetWrapObject jarg1_, long jarg2, AbstractWrapObject jarg2_, boolean jarg3);
  public final static native int SetWrapObject_searchBinary__SWIG_3(long jarg1, SetWrapObject jarg1_, long jarg2, AbstractWrapObject jarg2_);
  public final static native int SetWrapObject_getNumGroups(long jarg1, SetWrapObject jarg1_);
  public final static native void SetWrapObject_addGroup(long jarg1, SetWrapObject jarg1_, String jarg2);
  public final static native void SetWrapObject_removeGroup(long jarg1, SetWrapObject jarg1_, String jarg2);
  public final static native void SetWrapObject_renameGroup(long jarg1, SetWrapObject jarg1_, String jarg2, String jarg3);
  public final static native void SetWrapObject_addObjectToGroup(long jarg1, SetWrapObject jarg1_, String jarg2, String jarg3);
  public final static native void SetWrapObject_getGroupNames(long jarg1, SetWrapObject jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetWrapObject_getGroup__SWIG_0(long jarg1, SetWrapObject jarg1_, String jarg2);
  public final static native long SetWrapObject_getGroup__SWIG_1(long jarg1, SetWrapObject jarg1_, int jarg2);
  public final static native long new_WrapObjectSet__SWIG_0();
  public final static native long new_WrapObjectSet__SWIG_1(long jarg1, WrapObjectSet jarg1_);
  public final static native void delete_WrapObjectSet(long jarg1);
  public final static native long new_MuscleWrap__SWIG_0();
  public final static native long new_MuscleWrap__SWIG_1(long jarg1, MuscleWrap jarg1_);
  public final static native void delete_MuscleWrap(long jarg1);
  public final static native long MuscleWrap_copy(long jarg1, MuscleWrap jarg1_);
  public final static native void MuscleWrap_copyData(long jarg1, MuscleWrap jarg1_, long jarg2, MuscleWrap jarg2_);
  public final static native void MuscleWrap_setup(long jarg1, MuscleWrap jarg1_, long jarg2, AbstractDynamicsEngine jarg2_, long jarg3, AbstractMuscle jarg3_);
  public final static native int MuscleWrap_getStartPoint(long jarg1, MuscleWrap jarg1_);
  public final static native void MuscleWrap_setStartPoint(long jarg1, MuscleWrap jarg1_, int jarg2);
  public final static native int MuscleWrap_getEndPoint(long jarg1, MuscleWrap jarg1_);
  public final static native void MuscleWrap_setEndPoint(long jarg1, MuscleWrap jarg1_, int jarg2);
  public final static native String MuscleWrap_getWrapObjectName(long jarg1, MuscleWrap jarg1_);
  public final static native long MuscleWrap_getWrapObject(long jarg1, MuscleWrap jarg1_);
  public final static native void MuscleWrap_setWrapObject(long jarg1, MuscleWrap jarg1_, long jarg2, AbstractWrapObject jarg2_);
  public final static native long MuscleWrap_getWrapPoint(long jarg1, MuscleWrap jarg1_, int jarg2);
  public final static native int MuscleWrap_getMethod(long jarg1, MuscleWrap jarg1_);
  public final static native void MuscleWrap_setMethod(long jarg1, MuscleWrap jarg1_, int jarg2);
  public final static native String MuscleWrap_getMethodName(long jarg1, MuscleWrap jarg1_);
  public final static native long MuscleWrap_getMuscle(long jarg1, MuscleWrap jarg1_);
  public final static native long MuscleWrap_getPreviousWrap(long jarg1, MuscleWrap jarg1_);
  public final static native void MuscleWrap_setPreviousWrap(long jarg1, MuscleWrap jarg1_, long jarg2);
  public final static native void MuscleWrap_resetPreviousWrap(long jarg1, MuscleWrap jarg1_);
  public final static native void MuscleWrap_peteTest(long jarg1, MuscleWrap jarg1_);
  public final static native void delete_SetMuscleWrap(long jarg1);
  public final static native long new_SetMuscleWrap__SWIG_0();
  public final static native long new_SetMuscleWrap__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_SetMuscleWrap__SWIG_2(String jarg1);
  public final static native long new_SetMuscleWrap__SWIG_3(long jarg1, SetMuscleWrap jarg1_);
  public final static native long SetMuscleWrap_copy(long jarg1, SetMuscleWrap jarg1_);
  public final static native void SetMuscleWrap_setup(long jarg1, SetMuscleWrap jarg1_);
  public final static native void SetMuscleWrap_setMemoryOwner(long jarg1, SetMuscleWrap jarg1_, boolean jarg2);
  public final static native boolean SetMuscleWrap_getMemoryOwner(long jarg1, SetMuscleWrap jarg1_);
  public final static native boolean SetMuscleWrap_computeNewCapacity(long jarg1, SetMuscleWrap jarg1_, int jarg2, long jarg3);
  public final static native boolean SetMuscleWrap_ensureCapacity(long jarg1, SetMuscleWrap jarg1_, int jarg2);
  public final static native void SetMuscleWrap_trim(long jarg1, SetMuscleWrap jarg1_);
  public final static native int SetMuscleWrap_getCapacity(long jarg1, SetMuscleWrap jarg1_);
  public final static native void SetMuscleWrap_setCapacityIncrement(long jarg1, SetMuscleWrap jarg1_, int jarg2);
  public final static native int SetMuscleWrap_getCapacityIncrement(long jarg1, SetMuscleWrap jarg1_);
  public final static native boolean SetMuscleWrap_setSize(long jarg1, SetMuscleWrap jarg1_, int jarg2);
  public final static native int SetMuscleWrap_getSize(long jarg1, SetMuscleWrap jarg1_);
  public final static native int SetMuscleWrap_getIndex__SWIG_0(long jarg1, SetMuscleWrap jarg1_, long jarg2, MuscleWrap jarg2_, int jarg3);
  public final static native int SetMuscleWrap_getIndex__SWIG_1(long jarg1, SetMuscleWrap jarg1_, long jarg2, MuscleWrap jarg2_);
  public final static native int SetMuscleWrap_getIndex__SWIG_2(long jarg1, SetMuscleWrap jarg1_, String jarg2, int jarg3);
  public final static native int SetMuscleWrap_getIndex__SWIG_3(long jarg1, SetMuscleWrap jarg1_, String jarg2);
  public final static native void SetMuscleWrap_getGroupNamesContaining(long jarg1, SetMuscleWrap jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetMuscleWrap_append__SWIG_0(long jarg1, SetMuscleWrap jarg1_, long jarg2, MuscleWrap jarg2_);
  public final static native boolean SetMuscleWrap_append__SWIG_1(long jarg1, SetMuscleWrap jarg1_, long jarg2);
  public final static native boolean SetMuscleWrap_insert(long jarg1, SetMuscleWrap jarg1_, int jarg2, long jarg3, MuscleWrap jarg3_);
  public final static native boolean SetMuscleWrap_remove__SWIG_0(long jarg1, SetMuscleWrap jarg1_, int jarg2);
  public final static native boolean SetMuscleWrap_remove__SWIG_1(long jarg1, SetMuscleWrap jarg1_, long jarg2, MuscleWrap jarg2_);
  public final static native void SetMuscleWrap_clearAndDestroy(long jarg1, SetMuscleWrap jarg1_);
  public final static native boolean SetMuscleWrap_set(long jarg1, SetMuscleWrap jarg1_, int jarg2, long jarg3, MuscleWrap jarg3_);
  public final static native long SetMuscleWrap_get__SWIG_0(long jarg1, SetMuscleWrap jarg1_, int jarg2);
  public final static native long SetMuscleWrap_get__SWIG_1(long jarg1, SetMuscleWrap jarg1_, String jarg2);
  public final static native void SetMuscleWrap_getNames(long jarg1, SetMuscleWrap jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetMuscleWrap_getLast(long jarg1, SetMuscleWrap jarg1_);
  public final static native int SetMuscleWrap_searchBinary__SWIG_0(long jarg1, SetMuscleWrap jarg1_, long jarg2, MuscleWrap jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int SetMuscleWrap_searchBinary__SWIG_1(long jarg1, SetMuscleWrap jarg1_, long jarg2, MuscleWrap jarg2_, boolean jarg3, int jarg4);
  public final static native int SetMuscleWrap_searchBinary__SWIG_2(long jarg1, SetMuscleWrap jarg1_, long jarg2, MuscleWrap jarg2_, boolean jarg3);
  public final static native int SetMuscleWrap_searchBinary__SWIG_3(long jarg1, SetMuscleWrap jarg1_, long jarg2, MuscleWrap jarg2_);
  public final static native int SetMuscleWrap_getNumGroups(long jarg1, SetMuscleWrap jarg1_);
  public final static native void SetMuscleWrap_addGroup(long jarg1, SetMuscleWrap jarg1_, String jarg2);
  public final static native void SetMuscleWrap_removeGroup(long jarg1, SetMuscleWrap jarg1_, String jarg2);
  public final static native void SetMuscleWrap_renameGroup(long jarg1, SetMuscleWrap jarg1_, String jarg2, String jarg3);
  public final static native void SetMuscleWrap_addObjectToGroup(long jarg1, SetMuscleWrap jarg1_, String jarg2, String jarg3);
  public final static native void SetMuscleWrap_getGroupNames(long jarg1, SetMuscleWrap jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetMuscleWrap_getGroup__SWIG_0(long jarg1, SetMuscleWrap jarg1_, String jarg2);
  public final static native long SetMuscleWrap_getGroup__SWIG_1(long jarg1, SetMuscleWrap jarg1_, int jarg2);
  public final static native long new_MuscleWrapSet__SWIG_0();
  public final static native long new_MuscleWrapSet__SWIG_1(long jarg1, MuscleWrapSet jarg1_);
  public final static native void delete_MuscleWrapSet(long jarg1);
  public final static native void delete_AbstractBody(long jarg1);
  public final static native long AbstractBody_copy__SWIG_0(long jarg1, AbstractBody jarg1_);
  public final static native void AbstractBody_copyData(long jarg1, AbstractBody jarg1_, long jarg2, AbstractBody jarg2_);
  public final static native long AbstractBody_getDynamicsEngine(long jarg1, AbstractBody jarg1_);
  public final static native void AbstractBody_setup(long jarg1, AbstractBody jarg1_, long jarg2, AbstractDynamicsEngine jarg2_);
  public final static native double AbstractBody_getMass(long jarg1, AbstractBody jarg1_);
  public final static native boolean AbstractBody_setMass(long jarg1, AbstractBody jarg1_, double jarg2);
  public final static native void AbstractBody_getMassCenter(long jarg1, AbstractBody jarg1_, double[] jarg2);
  public final static native boolean AbstractBody_setMassCenter(long jarg1, AbstractBody jarg1_, double[] jarg2);
  public final static native void AbstractBody_getInertia(long jarg1, AbstractBody jarg1_, long jarg2);
  public final static native boolean AbstractBody_setInertia(long jarg1, AbstractBody jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void AbstractBody_scale__SWIG_0(long jarg1, AbstractBody jarg1_, long jarg2, ArrayDouble jarg2_, boolean jarg3);
  public final static native void AbstractBody_scale__SWIG_1(long jarg1, AbstractBody jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void AbstractBody_scaleInertialProperties__SWIG_0(long jarg1, AbstractBody jarg1_, long jarg2, ArrayDouble jarg2_, boolean jarg3);
  public final static native void AbstractBody_scaleInertialProperties__SWIG_1(long jarg1, AbstractBody jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void AbstractBody_scaleMass(long jarg1, AbstractBody jarg1_, double jarg2);
  public final static native long AbstractBody_getDisplayer(long jarg1, AbstractBody jarg1_);
  public final static native long AbstractBody_getWrapObject(long jarg1, AbstractBody jarg1_, String jarg2);
  public final static native long AbstractBody_getWrapObjectSet(long jarg1, AbstractBody jarg1_);
  public final static native void AbstractBody_peteTest(long jarg1, AbstractBody jarg1_);
  public final static native boolean AbstractBody_isKindOf(String jarg1);
  public final static native boolean AbstractBody_isA(long jarg1, AbstractBody jarg1_, String jarg2);
  public final static native long AbstractBody_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void AbstractBody_copy__SWIG_1(long jarg1, AbstractBody jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native long new_SimmBody__SWIG_0();
  public final static native long new_SimmBody__SWIG_1(long jarg1, SimmBody jarg1_);
  public final static native void delete_SimmBody(long jarg1);
  public final static native long SimmBody_copy(long jarg1, SimmBody jarg1_);
  public final static native void SimmBody_copyData(long jarg1, SimmBody jarg1_, long jarg2, SimmBody jarg2_);
  public final static native void SimmBody_setup(long jarg1, SimmBody jarg1_, long jarg2, AbstractDynamicsEngine jarg2_);
  public final static native double SimmBody_getMass(long jarg1, SimmBody jarg1_);
  public final static native boolean SimmBody_setMass(long jarg1, SimmBody jarg1_, double jarg2);
  public final static native void SimmBody_getMassCenter(long jarg1, SimmBody jarg1_, double[] jarg2);
  public final static native boolean SimmBody_setMassCenter(long jarg1, SimmBody jarg1_, double[] jarg2);
  public final static native void SimmBody_getInertia(long jarg1, SimmBody jarg1_, long jarg2);
  public final static native boolean SimmBody_setInertia(long jarg1, SimmBody jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void SimmBody_scale__SWIG_0(long jarg1, SimmBody jarg1_, long jarg2, ArrayDouble jarg2_, boolean jarg3);
  public final static native void SimmBody_scale__SWIG_1(long jarg1, SimmBody jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void SimmBody_scaleInertialProperties__SWIG_0(long jarg1, SimmBody jarg1_, long jarg2, ArrayDouble jarg2_, boolean jarg3);
  public final static native void SimmBody_scaleInertialProperties__SWIG_1(long jarg1, SimmBody jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void SimmBody_scaleMass(long jarg1, SimmBody jarg1_, double jarg2);
  public final static native long SimmBody_getDisplayer(long jarg1, SimmBody jarg1_);
  public final static native void SimmBody_getScaleFactors(long jarg1, SimmBody jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void SimmBody_peteTest(long jarg1, SimmBody jarg1_);
  public final static native void delete_SetBodies(long jarg1);
  public final static native long new_SetBodies__SWIG_0();
  public final static native long new_SetBodies__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_SetBodies__SWIG_2(String jarg1);
  public final static native long new_SetBodies__SWIG_3(long jarg1, SetBodies jarg1_);
  public final static native long SetBodies_copy(long jarg1, SetBodies jarg1_);
  public final static native void SetBodies_setup(long jarg1, SetBodies jarg1_);
  public final static native void SetBodies_setMemoryOwner(long jarg1, SetBodies jarg1_, boolean jarg2);
  public final static native boolean SetBodies_getMemoryOwner(long jarg1, SetBodies jarg1_);
  public final static native boolean SetBodies_computeNewCapacity(long jarg1, SetBodies jarg1_, int jarg2, long jarg3);
  public final static native boolean SetBodies_ensureCapacity(long jarg1, SetBodies jarg1_, int jarg2);
  public final static native void SetBodies_trim(long jarg1, SetBodies jarg1_);
  public final static native int SetBodies_getCapacity(long jarg1, SetBodies jarg1_);
  public final static native void SetBodies_setCapacityIncrement(long jarg1, SetBodies jarg1_, int jarg2);
  public final static native int SetBodies_getCapacityIncrement(long jarg1, SetBodies jarg1_);
  public final static native boolean SetBodies_setSize(long jarg1, SetBodies jarg1_, int jarg2);
  public final static native int SetBodies_getSize(long jarg1, SetBodies jarg1_);
  public final static native int SetBodies_getIndex__SWIG_0(long jarg1, SetBodies jarg1_, long jarg2, AbstractBody jarg2_, int jarg3);
  public final static native int SetBodies_getIndex__SWIG_1(long jarg1, SetBodies jarg1_, long jarg2, AbstractBody jarg2_);
  public final static native int SetBodies_getIndex__SWIG_2(long jarg1, SetBodies jarg1_, String jarg2, int jarg3);
  public final static native int SetBodies_getIndex__SWIG_3(long jarg1, SetBodies jarg1_, String jarg2);
  public final static native void SetBodies_getGroupNamesContaining(long jarg1, SetBodies jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetBodies_append__SWIG_0(long jarg1, SetBodies jarg1_, long jarg2, AbstractBody jarg2_);
  public final static native boolean SetBodies_append__SWIG_1(long jarg1, SetBodies jarg1_, long jarg2);
  public final static native boolean SetBodies_insert(long jarg1, SetBodies jarg1_, int jarg2, long jarg3, AbstractBody jarg3_);
  public final static native boolean SetBodies_remove__SWIG_0(long jarg1, SetBodies jarg1_, int jarg2);
  public final static native boolean SetBodies_remove__SWIG_1(long jarg1, SetBodies jarg1_, long jarg2, AbstractBody jarg2_);
  public final static native void SetBodies_clearAndDestroy(long jarg1, SetBodies jarg1_);
  public final static native boolean SetBodies_set(long jarg1, SetBodies jarg1_, int jarg2, long jarg3, AbstractBody jarg3_);
  public final static native long SetBodies_get__SWIG_0(long jarg1, SetBodies jarg1_, int jarg2);
  public final static native long SetBodies_get__SWIG_1(long jarg1, SetBodies jarg1_, String jarg2);
  public final static native void SetBodies_getNames(long jarg1, SetBodies jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetBodies_getLast(long jarg1, SetBodies jarg1_);
  public final static native int SetBodies_searchBinary__SWIG_0(long jarg1, SetBodies jarg1_, long jarg2, AbstractBody jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int SetBodies_searchBinary__SWIG_1(long jarg1, SetBodies jarg1_, long jarg2, AbstractBody jarg2_, boolean jarg3, int jarg4);
  public final static native int SetBodies_searchBinary__SWIG_2(long jarg1, SetBodies jarg1_, long jarg2, AbstractBody jarg2_, boolean jarg3);
  public final static native int SetBodies_searchBinary__SWIG_3(long jarg1, SetBodies jarg1_, long jarg2, AbstractBody jarg2_);
  public final static native int SetBodies_getNumGroups(long jarg1, SetBodies jarg1_);
  public final static native void SetBodies_addGroup(long jarg1, SetBodies jarg1_, String jarg2);
  public final static native void SetBodies_removeGroup(long jarg1, SetBodies jarg1_, String jarg2);
  public final static native void SetBodies_renameGroup(long jarg1, SetBodies jarg1_, String jarg2, String jarg3);
  public final static native void SetBodies_addObjectToGroup(long jarg1, SetBodies jarg1_, String jarg2, String jarg3);
  public final static native void SetBodies_getGroupNames(long jarg1, SetBodies jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetBodies_getGroup__SWIG_0(long jarg1, SetBodies jarg1_, String jarg2);
  public final static native long SetBodies_getGroup__SWIG_1(long jarg1, SetBodies jarg1_, int jarg2);
  public final static native long new_BodySet__SWIG_0();
  public final static native long new_BodySet__SWIG_1(long jarg1, BodySet jarg1_);
  public final static native void delete_BodySet(long jarg1);
  public final static native void BodySet_scale__SWIG_0(long jarg1, BodySet jarg1_, long jarg2, ScaleSet jarg2_, boolean jarg3);
  public final static native void BodySet_scale__SWIG_1(long jarg1, BodySet jarg1_, long jarg2, ScaleSet jarg2_);
  public final static native void delete_Function(long jarg1);
  public final static native long Function_copy__SWIG_0(long jarg1, Function jarg1_);
  public final static native void Function_setMinX(long jarg1, Function jarg1_, double jarg2);
  public final static native double Function_getMinX(long jarg1, Function jarg1_);
  public final static native void Function_setMaxX(long jarg1, Function jarg1_, double jarg2);
  public final static native double Function_getMaxX(long jarg1, Function jarg1_);
  public final static native void Function_setMinY(long jarg1, Function jarg1_, double jarg2);
  public final static native double Function_getMinY(long jarg1, Function jarg1_);
  public final static native void Function_setMaxY(long jarg1, Function jarg1_, double jarg2);
  public final static native double Function_getMaxY(long jarg1, Function jarg1_);
  public final static native void Function_setMinZ(long jarg1, Function jarg1_, double jarg2);
  public final static native double Function_getMinZ(long jarg1, Function jarg1_);
  public final static native void Function_setMaxZ(long jarg1, Function jarg1_, double jarg2);
  public final static native double Function_getMaxZ(long jarg1, Function jarg1_);
  public final static native void Function_updateBoundingBox(long jarg1, Function jarg1_);
  public final static native int Function_getNumberOfPoints(long jarg1, Function jarg1_);
  public final static native double Function_evaluate__SWIG_0(long jarg1, Function jarg1_, int jarg2, double jarg3, double jarg4, double jarg5);
  public final static native double Function_evaluate__SWIG_1(long jarg1, Function jarg1_, int jarg2, double jarg3, double jarg4);
  public final static native double Function_evaluate__SWIG_2(long jarg1, Function jarg1_, int jarg2, double jarg3);
  public final static native double Function_evaluate__SWIG_3(long jarg1, Function jarg1_, int jarg2);
  public final static native double Function_evaluateTotalFirstDerivative(long jarg1, Function jarg1_, double jarg2, double jarg3);
  public final static native double Function_evaluateTotalSecondDerivative(long jarg1, Function jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void Function_scaleY(long jarg1, Function jarg1_, double jarg2);
  public final static native boolean Function_isKindOf(String jarg1);
  public final static native boolean Function_isA(long jarg1, Function jarg1_, String jarg2);
  public final static native long Function_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void Function_copy__SWIG_1(long jarg1, Function jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native long new_Constant__SWIG_0();
  public final static native long new_Constant__SWIG_1(int jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long new_Constant__SWIG_2(int jarg1, long jarg2, long jarg3);
  public final static native long new_Constant__SWIG_3(long jarg1, Constant jarg1_);
  public final static native void delete_Constant(long jarg1);
  public final static native long Constant_copy(long jarg1, Constant jarg1_);
  public final static native int Constant_getNumberOfPoints(long jarg1, Constant jarg1_);
  public final static native void Constant_setValue(long jarg1, Constant jarg1_, double jarg2);
  public final static native void Constant_peteTest(long jarg1, Constant jarg1_);
  public final static native void Constant_updateBoundingBox(long jarg1, Constant jarg1_);
  public final static native double Constant_evaluate__SWIG_0(long jarg1, Constant jarg1_, int jarg2, double jarg3, double jarg4, double jarg5);
  public final static native double Constant_evaluate__SWIG_1(long jarg1, Constant jarg1_, int jarg2, double jarg3, double jarg4);
  public final static native double Constant_evaluate__SWIG_2(long jarg1, Constant jarg1_, int jarg2, double jarg3);
  public final static native double Constant_evaluate__SWIG_3(long jarg1, Constant jarg1_, int jarg2);
  public final static native double Constant_evaluate__SWIG_4(long jarg1, Constant jarg1_);
  public final static native void Constant_scaleY(long jarg1, Constant jarg1_, double jarg2);
  public final static native void delete_AbstractDof(long jarg1);
  public final static native long AbstractDof_copy(long jarg1, AbstractDof jarg1_);
  public final static native void AbstractDof_copyData(long jarg1, AbstractDof jarg1_, long jarg2, AbstractDof jarg2_);
  public final static native void AbstractDof_setup(long jarg1, AbstractDof jarg1_, long jarg2, AbstractDynamicsEngine jarg2_, long jarg3, AbstractJoint jarg3_);
  public final static native void AbstractDof_getAxis(long jarg1, AbstractDof jarg1_, double[] jarg2);
  public final static native long AbstractDof_getAxisPtr(long jarg1, AbstractDof jarg1_);
  public final static native double AbstractDof_getValue(long jarg1, AbstractDof jarg1_);
  public final static native int AbstractDof_getMotionType(long jarg1, AbstractDof jarg1_);
  public final static native long AbstractDof_getCoordinate(long jarg1, AbstractDof jarg1_);
  public final static native long AbstractDof_getFunction(long jarg1, AbstractDof jarg1_);
  public final static native void AbstractDof_peteTest(long jarg1, AbstractDof jarg1_);
  public final static native void delete_AbstractCoordinate(long jarg1);
  public final static native long AbstractCoordinate_copy(long jarg1, AbstractCoordinate jarg1_);
  public final static native void AbstractCoordinate_copyData(long jarg1, AbstractCoordinate jarg1_, long jarg2, AbstractCoordinate jarg2_);
  public final static native long AbstractCoordinate_getDynamicsEngine(long jarg1, AbstractCoordinate jarg1_);
  public final static native void AbstractCoordinate_setup(long jarg1, AbstractCoordinate jarg1_, long jarg2, AbstractDynamicsEngine jarg2_);
  public final static native void AbstractCoordinate_updateFromCoordinate(long jarg1, AbstractCoordinate jarg1_, long jarg2, AbstractCoordinate jarg2_);
  public final static native double AbstractCoordinate_getValue(long jarg1, AbstractCoordinate jarg1_);
  public final static native boolean AbstractCoordinate_setValue(long jarg1, AbstractCoordinate jarg1_, double jarg2);
  public final static native boolean AbstractCoordinate_getValueUseDefault(long jarg1, AbstractCoordinate jarg1_);
  public final static native void AbstractCoordinate_getRange(long jarg1, AbstractCoordinate jarg1_, double[] jarg2);
  public final static native boolean AbstractCoordinate_setRange(long jarg1, AbstractCoordinate jarg1_, double[] jarg2);
  public final static native double AbstractCoordinate_getRangeMin(long jarg1, AbstractCoordinate jarg1_);
  public final static native double AbstractCoordinate_getRangeMax(long jarg1, AbstractCoordinate jarg1_);
  public final static native boolean AbstractCoordinate_setRangeMin(long jarg1, AbstractCoordinate jarg1_, double jarg2);
  public final static native boolean AbstractCoordinate_setRangeMax(long jarg1, AbstractCoordinate jarg1_, double jarg2);
  public final static native boolean AbstractCoordinate_getRangeUseDefault(long jarg1, AbstractCoordinate jarg1_);
  public final static native double AbstractCoordinate_getTolerance(long jarg1, AbstractCoordinate jarg1_);
  public final static native boolean AbstractCoordinate_setTolerance(long jarg1, AbstractCoordinate jarg1_, double jarg2);
  public final static native boolean AbstractCoordinate_getToleranceUseDefault(long jarg1, AbstractCoordinate jarg1_);
  public final static native double AbstractCoordinate_getStiffness(long jarg1, AbstractCoordinate jarg1_);
  public final static native boolean AbstractCoordinate_setStiffness(long jarg1, AbstractCoordinate jarg1_, double jarg2);
  public final static native boolean AbstractCoordinate_getStiffnessUseDefault(long jarg1, AbstractCoordinate jarg1_);
  public final static native double AbstractCoordinate_getDefaultValue(long jarg1, AbstractCoordinate jarg1_);
  public final static native boolean AbstractCoordinate_setDefaultValue(long jarg1, AbstractCoordinate jarg1_, double jarg2);
  public final static native boolean AbstractCoordinate_getDefaultValueUseDefault(long jarg1, AbstractCoordinate jarg1_);
  public final static native boolean AbstractCoordinate_getClamped(long jarg1, AbstractCoordinate jarg1_);
  public final static native boolean AbstractCoordinate_setClamped(long jarg1, AbstractCoordinate jarg1_, boolean jarg2);
  public final static native boolean AbstractCoordinate_getClampedUseDefault(long jarg1, AbstractCoordinate jarg1_);
  public final static native boolean AbstractCoordinate_getLocked(long jarg1, AbstractCoordinate jarg1_);
  public final static native boolean AbstractCoordinate_setLocked(long jarg1, AbstractCoordinate jarg1_, boolean jarg2);
  public final static native boolean AbstractCoordinate_getLockedUseDefault(long jarg1, AbstractCoordinate jarg1_);
  public final static native void AbstractCoordinate_addJointToList(long jarg1, AbstractCoordinate jarg1_, long jarg2, AbstractJoint jarg2_);
  public final static native void AbstractCoordinate_addPathToList(long jarg1, AbstractCoordinate jarg1_, long jarg2);
  public final static native boolean AbstractCoordinate_isUsedInModel(long jarg1, AbstractCoordinate jarg1_);
  public final static native boolean AbstractCoordinate_isRestraintActive(long jarg1, AbstractCoordinate jarg1_);
  public final static native long AbstractCoordinate_getRestraintFunction(long jarg1, AbstractCoordinate jarg1_);
  public final static native long AbstractCoordinate_getMinRestraintFunction(long jarg1, AbstractCoordinate jarg1_);
  public final static native long AbstractCoordinate_getMaxRestraintFunction(long jarg1, AbstractCoordinate jarg1_);
  public final static native int AbstractCoordinate_getMotionType(long jarg1, AbstractCoordinate jarg1_);
  public final static native void AbstractCoordinate_determineType(long jarg1, AbstractCoordinate jarg1_);
  public final static native boolean AbstractCoordinate_getConstrained(long jarg1, AbstractCoordinate jarg1_);
  public final static native void AbstractCoordinate_peteTest(long jarg1, AbstractCoordinate jarg1_);
  public final static native long new_SimmCoordinate__SWIG_0();
  public final static native long new_SimmCoordinate__SWIG_1(long jarg1, SimmCoordinate jarg1_);
  public final static native void delete_SimmCoordinate(long jarg1);
  public final static native long SimmCoordinate_copy(long jarg1, SimmCoordinate jarg1_);
  public final static native void SimmCoordinate_copyData(long jarg1, SimmCoordinate jarg1_, long jarg2, SimmCoordinate jarg2_);
  public final static native void SimmCoordinate_setup(long jarg1, SimmCoordinate jarg1_, long jarg2, AbstractDynamicsEngine jarg2_);
  public final static native void SimmCoordinate_updateFromCoordinate(long jarg1, SimmCoordinate jarg1_, long jarg2, AbstractCoordinate jarg2_);
  public final static native double SimmCoordinate_getValue(long jarg1, SimmCoordinate jarg1_);
  public final static native boolean SimmCoordinate_setValue(long jarg1, SimmCoordinate jarg1_, double jarg2);
  public final static native boolean SimmCoordinate_getValueUseDefault(long jarg1, SimmCoordinate jarg1_);
  public final static native void SimmCoordinate_getRange(long jarg1, SimmCoordinate jarg1_, double[] jarg2);
  public final static native boolean SimmCoordinate_setRange(long jarg1, SimmCoordinate jarg1_, double[] jarg2);
  public final static native double SimmCoordinate_getRangeMin(long jarg1, SimmCoordinate jarg1_);
  public final static native double SimmCoordinate_getRangeMax(long jarg1, SimmCoordinate jarg1_);
  public final static native boolean SimmCoordinate_setRangeMin(long jarg1, SimmCoordinate jarg1_, double jarg2);
  public final static native boolean SimmCoordinate_setRangeMax(long jarg1, SimmCoordinate jarg1_, double jarg2);
  public final static native boolean SimmCoordinate_getRangeUseDefault(long jarg1, SimmCoordinate jarg1_);
  public final static native double SimmCoordinate_getTolerance(long jarg1, SimmCoordinate jarg1_);
  public final static native boolean SimmCoordinate_setTolerance(long jarg1, SimmCoordinate jarg1_, double jarg2);
  public final static native boolean SimmCoordinate_getToleranceUseDefault(long jarg1, SimmCoordinate jarg1_);
  public final static native double SimmCoordinate_getStiffness(long jarg1, SimmCoordinate jarg1_);
  public final static native boolean SimmCoordinate_setStiffness(long jarg1, SimmCoordinate jarg1_, double jarg2);
  public final static native boolean SimmCoordinate_getStiffnessUseDefault(long jarg1, SimmCoordinate jarg1_);
  public final static native double SimmCoordinate_getDefaultValue(long jarg1, SimmCoordinate jarg1_);
  public final static native boolean SimmCoordinate_setDefaultValue(long jarg1, SimmCoordinate jarg1_, double jarg2);
  public final static native boolean SimmCoordinate_getDefaultValueUseDefault(long jarg1, SimmCoordinate jarg1_);
  public final static native boolean SimmCoordinate_getClamped(long jarg1, SimmCoordinate jarg1_);
  public final static native boolean SimmCoordinate_setClamped(long jarg1, SimmCoordinate jarg1_, boolean jarg2);
  public final static native boolean SimmCoordinate_getClampedUseDefault(long jarg1, SimmCoordinate jarg1_);
  public final static native boolean SimmCoordinate_getLocked(long jarg1, SimmCoordinate jarg1_);
  public final static native boolean SimmCoordinate_setLocked(long jarg1, SimmCoordinate jarg1_, boolean jarg2);
  public final static native boolean SimmCoordinate_getLockedUseDefault(long jarg1, SimmCoordinate jarg1_);
  public final static native void SimmCoordinate_addJointToList(long jarg1, SimmCoordinate jarg1_, long jarg2, AbstractJoint jarg2_);
  public final static native void SimmCoordinate_addPathToList(long jarg1, SimmCoordinate jarg1_, long jarg2);
  public final static native boolean SimmCoordinate_isUsedInModel(long jarg1, SimmCoordinate jarg1_);
  public final static native boolean SimmCoordinate_isRestraintActive(long jarg1, SimmCoordinate jarg1_);
  public final static native long SimmCoordinate_getRestraintFunction(long jarg1, SimmCoordinate jarg1_);
  public final static native long SimmCoordinate_getMinRestraintFunction(long jarg1, SimmCoordinate jarg1_);
  public final static native long SimmCoordinate_getMaxRestraintFunction(long jarg1, SimmCoordinate jarg1_);
  public final static native int SimmCoordinate_getMotionType(long jarg1, SimmCoordinate jarg1_);
  public final static native void SimmCoordinate_getKeys__SWIG_0(long jarg1, SimmCoordinate jarg1_, long jarg2);
  public final static native long SimmCoordinate_getKeys__SWIG_1(long jarg1, SimmCoordinate jarg1_);
  public final static native long SimmCoordinate_getJointList(long jarg1, SimmCoordinate jarg1_);
  public final static native long SimmCoordinate_getPathList(long jarg1, SimmCoordinate jarg1_);
  public final static native void SimmCoordinate_determineType(long jarg1, SimmCoordinate jarg1_);
  public final static native void SimmCoordinate_peteTest(long jarg1, SimmCoordinate jarg1_);
  public final static native void delete_SetCoordinates(long jarg1);
  public final static native long new_SetCoordinates__SWIG_0();
  public final static native long new_SetCoordinates__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_SetCoordinates__SWIG_2(String jarg1);
  public final static native long new_SetCoordinates__SWIG_3(long jarg1, SetCoordinates jarg1_);
  public final static native long SetCoordinates_copy(long jarg1, SetCoordinates jarg1_);
  public final static native void SetCoordinates_setup(long jarg1, SetCoordinates jarg1_);
  public final static native void SetCoordinates_setMemoryOwner(long jarg1, SetCoordinates jarg1_, boolean jarg2);
  public final static native boolean SetCoordinates_getMemoryOwner(long jarg1, SetCoordinates jarg1_);
  public final static native boolean SetCoordinates_computeNewCapacity(long jarg1, SetCoordinates jarg1_, int jarg2, long jarg3);
  public final static native boolean SetCoordinates_ensureCapacity(long jarg1, SetCoordinates jarg1_, int jarg2);
  public final static native void SetCoordinates_trim(long jarg1, SetCoordinates jarg1_);
  public final static native int SetCoordinates_getCapacity(long jarg1, SetCoordinates jarg1_);
  public final static native void SetCoordinates_setCapacityIncrement(long jarg1, SetCoordinates jarg1_, int jarg2);
  public final static native int SetCoordinates_getCapacityIncrement(long jarg1, SetCoordinates jarg1_);
  public final static native boolean SetCoordinates_setSize(long jarg1, SetCoordinates jarg1_, int jarg2);
  public final static native int SetCoordinates_getSize(long jarg1, SetCoordinates jarg1_);
  public final static native int SetCoordinates_getIndex__SWIG_0(long jarg1, SetCoordinates jarg1_, long jarg2, AbstractCoordinate jarg2_, int jarg3);
  public final static native int SetCoordinates_getIndex__SWIG_1(long jarg1, SetCoordinates jarg1_, long jarg2, AbstractCoordinate jarg2_);
  public final static native int SetCoordinates_getIndex__SWIG_2(long jarg1, SetCoordinates jarg1_, String jarg2, int jarg3);
  public final static native int SetCoordinates_getIndex__SWIG_3(long jarg1, SetCoordinates jarg1_, String jarg2);
  public final static native void SetCoordinates_getGroupNamesContaining(long jarg1, SetCoordinates jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetCoordinates_append__SWIG_0(long jarg1, SetCoordinates jarg1_, long jarg2, AbstractCoordinate jarg2_);
  public final static native boolean SetCoordinates_append__SWIG_1(long jarg1, SetCoordinates jarg1_, long jarg2);
  public final static native boolean SetCoordinates_insert(long jarg1, SetCoordinates jarg1_, int jarg2, long jarg3, AbstractCoordinate jarg3_);
  public final static native boolean SetCoordinates_remove__SWIG_0(long jarg1, SetCoordinates jarg1_, int jarg2);
  public final static native boolean SetCoordinates_remove__SWIG_1(long jarg1, SetCoordinates jarg1_, long jarg2, AbstractCoordinate jarg2_);
  public final static native void SetCoordinates_clearAndDestroy(long jarg1, SetCoordinates jarg1_);
  public final static native boolean SetCoordinates_set(long jarg1, SetCoordinates jarg1_, int jarg2, long jarg3, AbstractCoordinate jarg3_);
  public final static native long SetCoordinates_get__SWIG_0(long jarg1, SetCoordinates jarg1_, int jarg2);
  public final static native long SetCoordinates_get__SWIG_1(long jarg1, SetCoordinates jarg1_, String jarg2);
  public final static native void SetCoordinates_getNames(long jarg1, SetCoordinates jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetCoordinates_getLast(long jarg1, SetCoordinates jarg1_);
  public final static native int SetCoordinates_searchBinary__SWIG_0(long jarg1, SetCoordinates jarg1_, long jarg2, AbstractCoordinate jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int SetCoordinates_searchBinary__SWIG_1(long jarg1, SetCoordinates jarg1_, long jarg2, AbstractCoordinate jarg2_, boolean jarg3, int jarg4);
  public final static native int SetCoordinates_searchBinary__SWIG_2(long jarg1, SetCoordinates jarg1_, long jarg2, AbstractCoordinate jarg2_, boolean jarg3);
  public final static native int SetCoordinates_searchBinary__SWIG_3(long jarg1, SetCoordinates jarg1_, long jarg2, AbstractCoordinate jarg2_);
  public final static native int SetCoordinates_getNumGroups(long jarg1, SetCoordinates jarg1_);
  public final static native void SetCoordinates_addGroup(long jarg1, SetCoordinates jarg1_, String jarg2);
  public final static native void SetCoordinates_removeGroup(long jarg1, SetCoordinates jarg1_, String jarg2);
  public final static native void SetCoordinates_renameGroup(long jarg1, SetCoordinates jarg1_, String jarg2, String jarg3);
  public final static native void SetCoordinates_addObjectToGroup(long jarg1, SetCoordinates jarg1_, String jarg2, String jarg3);
  public final static native void SetCoordinates_getGroupNames(long jarg1, SetCoordinates jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetCoordinates_getGroup__SWIG_0(long jarg1, SetCoordinates jarg1_, String jarg2);
  public final static native long SetCoordinates_getGroup__SWIG_1(long jarg1, SetCoordinates jarg1_, int jarg2);
  public final static native long new_CoordinateSet__SWIG_0();
  public final static native long new_CoordinateSet__SWIG_1(long jarg1, CoordinateSet jarg1_);
  public final static native void delete_CoordinateSet(long jarg1);
  public final static native void delete_AbstractJoint(long jarg1);
  public final static native long AbstractJoint_copy(long jarg1, AbstractJoint jarg1_);
  public final static native void AbstractJoint_copyData(long jarg1, AbstractJoint jarg1_, long jarg2, AbstractJoint jarg2_);
  public final static native long AbstractJoint_getDynamicsEngine(long jarg1, AbstractJoint jarg1_);
  public final static native void AbstractJoint_setup(long jarg1, AbstractJoint jarg1_, long jarg2, AbstractDynamicsEngine jarg2_);
  public final static native void AbstractJoint_invalidate(long jarg1, AbstractJoint jarg1_);
  public final static native long AbstractJoint_getDofSet(long jarg1, AbstractJoint jarg1_);
  public final static native long AbstractJoint_getChildBody(long jarg1, AbstractJoint jarg1_);
  public final static native long AbstractJoint_getParentBody(long jarg1, AbstractJoint jarg1_);
  public final static native long AbstractJoint_getForwardTransform(long jarg1, AbstractJoint jarg1_);
  public final static native long AbstractJoint_getInverseTransform(long jarg1, AbstractJoint jarg1_);
  public final static native boolean AbstractJoint_isCoordinateUsed(long jarg1, AbstractJoint jarg1_, long jarg2, AbstractCoordinate jarg2_);
  public final static native boolean AbstractJoint_hasXYZAxes(long jarg1, AbstractJoint jarg1_);
  public final static native void AbstractJoint_scale(long jarg1, AbstractJoint jarg1_, long jarg2, ScaleSet jarg2_);
  public final static native void AbstractJoint_peteTest(long jarg1, AbstractJoint jarg1_);
  public final static native long new_SimmJoint__SWIG_0();
  public final static native long new_SimmJoint__SWIG_1(long jarg1, SimmJoint jarg1_);
  public final static native void delete_SimmJoint(long jarg1);
  public final static native long SimmJoint_copy(long jarg1, SimmJoint jarg1_);
  public final static native void SimmJoint_setup(long jarg1, SimmJoint jarg1_, long jarg2, AbstractDynamicsEngine jarg2_);
  public final static native void SimmJoint_copyData(long jarg1, SimmJoint jarg1_, long jarg2, SimmJoint jarg2_);
  public final static native long SimmJoint_getDofSet(long jarg1, SimmJoint jarg1_);
  public final static native long SimmJoint_getChildBody(long jarg1, SimmJoint jarg1_);
  public final static native long SimmJoint_getParentBody(long jarg1, SimmJoint jarg1_);
  public final static native long SimmJoint_getForwardTransform(long jarg1, SimmJoint jarg1_);
  public final static native long SimmJoint_getInverseTransform(long jarg1, SimmJoint jarg1_);
  public final static native boolean SimmJoint_isCoordinateUsed(long jarg1, SimmJoint jarg1_, long jarg2, AbstractCoordinate jarg2_);
  public final static native boolean SimmJoint_hasXYZAxes(long jarg1, SimmJoint jarg1_);
  public final static native void SimmJoint_scale__SWIG_0(long jarg1, SimmJoint jarg1_, long jarg2, ScaleSet jarg2_);
  public final static native void SimmJoint_scale__SWIG_1(long jarg1, SimmJoint jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void SimmJoint_peteTest(long jarg1, SimmJoint jarg1_);
  public final static native void delete_SetJoints(long jarg1);
  public final static native long new_SetJoints__SWIG_0();
  public final static native long new_SetJoints__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_SetJoints__SWIG_2(String jarg1);
  public final static native long new_SetJoints__SWIG_3(long jarg1, SetJoints jarg1_);
  public final static native long SetJoints_copy(long jarg1, SetJoints jarg1_);
  public final static native void SetJoints_setup(long jarg1, SetJoints jarg1_);
  public final static native void SetJoints_setMemoryOwner(long jarg1, SetJoints jarg1_, boolean jarg2);
  public final static native boolean SetJoints_getMemoryOwner(long jarg1, SetJoints jarg1_);
  public final static native boolean SetJoints_computeNewCapacity(long jarg1, SetJoints jarg1_, int jarg2, long jarg3);
  public final static native boolean SetJoints_ensureCapacity(long jarg1, SetJoints jarg1_, int jarg2);
  public final static native void SetJoints_trim(long jarg1, SetJoints jarg1_);
  public final static native int SetJoints_getCapacity(long jarg1, SetJoints jarg1_);
  public final static native void SetJoints_setCapacityIncrement(long jarg1, SetJoints jarg1_, int jarg2);
  public final static native int SetJoints_getCapacityIncrement(long jarg1, SetJoints jarg1_);
  public final static native boolean SetJoints_setSize(long jarg1, SetJoints jarg1_, int jarg2);
  public final static native int SetJoints_getSize(long jarg1, SetJoints jarg1_);
  public final static native int SetJoints_getIndex__SWIG_0(long jarg1, SetJoints jarg1_, long jarg2, AbstractJoint jarg2_, int jarg3);
  public final static native int SetJoints_getIndex__SWIG_1(long jarg1, SetJoints jarg1_, long jarg2, AbstractJoint jarg2_);
  public final static native int SetJoints_getIndex__SWIG_2(long jarg1, SetJoints jarg1_, String jarg2, int jarg3);
  public final static native int SetJoints_getIndex__SWIG_3(long jarg1, SetJoints jarg1_, String jarg2);
  public final static native void SetJoints_getGroupNamesContaining(long jarg1, SetJoints jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetJoints_append__SWIG_0(long jarg1, SetJoints jarg1_, long jarg2, AbstractJoint jarg2_);
  public final static native boolean SetJoints_append__SWIG_1(long jarg1, SetJoints jarg1_, long jarg2);
  public final static native boolean SetJoints_insert(long jarg1, SetJoints jarg1_, int jarg2, long jarg3, AbstractJoint jarg3_);
  public final static native boolean SetJoints_remove__SWIG_0(long jarg1, SetJoints jarg1_, int jarg2);
  public final static native boolean SetJoints_remove__SWIG_1(long jarg1, SetJoints jarg1_, long jarg2, AbstractJoint jarg2_);
  public final static native void SetJoints_clearAndDestroy(long jarg1, SetJoints jarg1_);
  public final static native boolean SetJoints_set(long jarg1, SetJoints jarg1_, int jarg2, long jarg3, AbstractJoint jarg3_);
  public final static native long SetJoints_get__SWIG_0(long jarg1, SetJoints jarg1_, int jarg2);
  public final static native long SetJoints_get__SWIG_1(long jarg1, SetJoints jarg1_, String jarg2);
  public final static native void SetJoints_getNames(long jarg1, SetJoints jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetJoints_getLast(long jarg1, SetJoints jarg1_);
  public final static native int SetJoints_searchBinary__SWIG_0(long jarg1, SetJoints jarg1_, long jarg2, AbstractJoint jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int SetJoints_searchBinary__SWIG_1(long jarg1, SetJoints jarg1_, long jarg2, AbstractJoint jarg2_, boolean jarg3, int jarg4);
  public final static native int SetJoints_searchBinary__SWIG_2(long jarg1, SetJoints jarg1_, long jarg2, AbstractJoint jarg2_, boolean jarg3);
  public final static native int SetJoints_searchBinary__SWIG_3(long jarg1, SetJoints jarg1_, long jarg2, AbstractJoint jarg2_);
  public final static native int SetJoints_getNumGroups(long jarg1, SetJoints jarg1_);
  public final static native void SetJoints_addGroup(long jarg1, SetJoints jarg1_, String jarg2);
  public final static native void SetJoints_removeGroup(long jarg1, SetJoints jarg1_, String jarg2);
  public final static native void SetJoints_renameGroup(long jarg1, SetJoints jarg1_, String jarg2, String jarg3);
  public final static native void SetJoints_addObjectToGroup(long jarg1, SetJoints jarg1_, String jarg2, String jarg3);
  public final static native void SetJoints_getGroupNames(long jarg1, SetJoints jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetJoints_getGroup__SWIG_0(long jarg1, SetJoints jarg1_, String jarg2);
  public final static native long SetJoints_getGroup__SWIG_1(long jarg1, SetJoints jarg1_, int jarg2);
  public final static native long new_JointSet__SWIG_0();
  public final static native long new_JointSet__SWIG_1(long jarg1, JointSet jarg1_);
  public final static native void delete_JointSet(long jarg1);
  public final static native void JointSet_scale(long jarg1, JointSet jarg1_, long jarg2, ScaleSet jarg2_);
  public final static native void delete_AbstractDynamicsEngine(long jarg1);
  public final static native long AbstractDynamicsEngine_copy(long jarg1, AbstractDynamicsEngine jarg1_);
  public final static native void AbstractDynamicsEngine_setup(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, Model jarg2_);
  public final static native int AbstractDynamicsEngine_getNumBodies(long jarg1, AbstractDynamicsEngine jarg1_);
  public final static native int AbstractDynamicsEngine_getNumJoints(long jarg1, AbstractDynamicsEngine jarg1_);
  public final static native int AbstractDynamicsEngine_getNumCoordinates(long jarg1, AbstractDynamicsEngine jarg1_);
  public final static native int AbstractDynamicsEngine_getNumSpeeds(long jarg1, AbstractDynamicsEngine jarg1_);
  public final static native int AbstractDynamicsEngine_getNumMarkers(long jarg1, AbstractDynamicsEngine jarg1_);
  public final static native long AbstractDynamicsEngine_getModel(long jarg1, AbstractDynamicsEngine jarg1_);
  public final static native void AbstractDynamicsEngine_getGravity(long jarg1, AbstractDynamicsEngine jarg1_, double[] jarg2);
  public final static native boolean AbstractDynamicsEngine_setGravity(long jarg1, AbstractDynamicsEngine jarg1_, double[] jarg2);
  public final static native long AbstractDynamicsEngine_getBodySet__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_);
  public final static native long AbstractDynamicsEngine_getGroundBody(long jarg1, AbstractDynamicsEngine jarg1_);
  public final static native long AbstractDynamicsEngine_getLeafBody(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractJoint jarg2_);
  public final static native long AbstractDynamicsEngine_getWrapObject(long jarg1, AbstractDynamicsEngine jarg1_, String jarg2);
  public final static native long AbstractDynamicsEngine_getJointSet__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_);
  public final static native long AbstractDynamicsEngine_getCoordinateSet__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_);
  public final static native void AbstractDynamicsEngine_updateCoordinateSet(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, CoordinateSet jarg2_);
  public final static native void AbstractDynamicsEngine_getUnlockedCoordinates(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, CoordinateSet jarg2_);
  public final static native long AbstractDynamicsEngine_findUnconstrainedDof(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractCoordinate jarg2_, long jarg3);
  public final static native long AbstractDynamicsEngine_getSpeedSet__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_);
  public final static native long AbstractDynamicsEngine_getMarkerSet__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_);
  public final static native void AbstractDynamicsEngine_writeMarkerFile(long jarg1, AbstractDynamicsEngine jarg1_, String jarg2);
  public final static native int AbstractDynamicsEngine_replaceMarkerSet(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, MarkerSet jarg2_);
  public final static native void AbstractDynamicsEngine_updateMarkerSet(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, MarkerSet jarg2_);
  public final static native int AbstractDynamicsEngine_deleteUnusedMarkers(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native void AbstractDynamicsEngine_setConfiguration__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, double[] jarg2);
  public final static native void AbstractDynamicsEngine_getConfiguration__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, double[] jarg2);
  public final static native void AbstractDynamicsEngine_setConfiguration__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, double[] jarg2, double[] jarg3);
  public final static native void AbstractDynamicsEngine_getConfiguration__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, double[] jarg2, double[] jarg3);
  public final static native void AbstractDynamicsEngine_getCoordinates(long jarg1, AbstractDynamicsEngine jarg1_, double[] jarg2);
  public final static native void AbstractDynamicsEngine_getSpeeds(long jarg1, AbstractDynamicsEngine jarg1_, double[] jarg2);
  public final static native void AbstractDynamicsEngine_getAccelerations(long jarg1, AbstractDynamicsEngine jarg1_, double[] jarg2);
  public final static native void AbstractDynamicsEngine_extractConfiguration(long jarg1, AbstractDynamicsEngine jarg1_, double[] jarg2, double[] jarg3, double[] jarg4);
  public final static native void AbstractDynamicsEngine_applyDefaultConfiguration(long jarg1, AbstractDynamicsEngine jarg1_);
  public final static native int AbstractDynamicsEngine_assemble(long jarg1, AbstractDynamicsEngine jarg1_, double jarg2, long jarg3, long jarg4, double jarg5, int jarg6, long jarg7, long jarg8);
  public final static native boolean AbstractDynamicsEngine_scale__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, ScaleSet jarg2_, double jarg3, boolean jarg4);
  public final static native boolean AbstractDynamicsEngine_scale__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, ScaleSet jarg2_, double jarg3);
  public final static native boolean AbstractDynamicsEngine_scale__SWIG_2(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, ScaleSet jarg2_);
  public final static native double AbstractDynamicsEngine_getMass(long jarg1, AbstractDynamicsEngine jarg1_);
  public final static native void AbstractDynamicsEngine_getSystemInertia__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, double[] jarg3, long jarg4);
  public final static native void AbstractDynamicsEngine_getSystemInertia__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void AbstractDynamicsEngine_getPosition(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, double[] jarg4);
  public final static native void AbstractDynamicsEngine_getVelocity(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, double[] jarg4);
  public final static native void AbstractDynamicsEngine_getAcceleration(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, double[] jarg4);
  public final static native void AbstractDynamicsEngine_getDirectionCosines__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3);
  public final static native void AbstractDynamicsEngine_getDirectionCosines__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3);
  public final static native void AbstractDynamicsEngine_getAngularVelocity(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3);
  public final static native void AbstractDynamicsEngine_getAngularVelocityBodyLocal(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3);
  public final static native void AbstractDynamicsEngine_getAngularAcceleration(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3);
  public final static native void AbstractDynamicsEngine_getAngularAccelerationBodyLocal(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3);
  public final static native long AbstractDynamicsEngine_getTransform(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_);
  public final static native void AbstractDynamicsEngine_applyForce(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, double[] jarg4);
  public final static native void AbstractDynamicsEngine_applyForces__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void AbstractDynamicsEngine_applyForces__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void AbstractDynamicsEngine_applyForceBodyLocal(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, double[] jarg4);
  public final static native void AbstractDynamicsEngine_applyForcesBodyLocal__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void AbstractDynamicsEngine_applyForcesBodyLocal__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void AbstractDynamicsEngine_applyTorque(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3);
  public final static native void AbstractDynamicsEngine_applyTorques__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void AbstractDynamicsEngine_applyTorques__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void AbstractDynamicsEngine_applyTorqueBodyLocal(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3);
  public final static native void AbstractDynamicsEngine_applyTorquesBodyLocal__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void AbstractDynamicsEngine_applyTorquesBodyLocal__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void AbstractDynamicsEngine_applyGeneralizedForce(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractCoordinate jarg2_, double jarg3);
  public final static native void AbstractDynamicsEngine_applyGeneralizedForces__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, double[] jarg2);
  public final static native void AbstractDynamicsEngine_applyGeneralizedForces__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, int jarg2, long jarg3, double[] jarg4);
  public final static native double AbstractDynamicsEngine_getNetAppliedGeneralizedForce(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractCoordinate jarg2_);
  public final static native void AbstractDynamicsEngine_computeGeneralizedForces(long jarg1, AbstractDynamicsEngine jarg1_, double[] jarg2, double[] jarg3);
  public final static native void AbstractDynamicsEngine_computeReactions(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, long jarg3);
  public final static native void AbstractDynamicsEngine_computeConstrainedCoordinates(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2);
  public final static native void AbstractDynamicsEngine_formCompleteStorages(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, Storage jarg2_, long jarg3, long jarg4);
  public final static native void AbstractDynamicsEngine_formMassMatrix(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2);
  public final static native void AbstractDynamicsEngine_formEulerTransform(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3);
  public final static native void AbstractDynamicsEngine_formJacobianTranslation__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, long jarg4, long jarg5, AbstractBody jarg5_);
  public final static native void AbstractDynamicsEngine_formJacobianTranslation__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, long jarg4);
  public final static native void AbstractDynamicsEngine_formJacobianOrientation__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3, long jarg4, AbstractBody jarg4_);
  public final static native void AbstractDynamicsEngine_formJacobianOrientation__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3);
  public final static native void AbstractDynamicsEngine_formJacobianEuler__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3, long jarg4, AbstractBody jarg4_);
  public final static native void AbstractDynamicsEngine_formJacobianEuler__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3);
  public final static native void AbstractDynamicsEngine_computeDerivatives(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, long jarg3);
  public final static native void AbstractDynamicsEngine_transform__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, long jarg4, AbstractBody jarg4_, double[] jarg5);
  public final static native void AbstractDynamicsEngine_transform__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3, ArrayDouble jarg3_, long jarg4, AbstractBody jarg4_, long jarg5, ArrayDouble jarg5_);
  public final static native void AbstractDynamicsEngine_transformPosition__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, long jarg4, AbstractBody jarg4_, double[] jarg5);
  public final static native void AbstractDynamicsEngine_transformPosition__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3, ArrayDouble jarg3_, long jarg4, AbstractBody jarg4_, long jarg5, ArrayDouble jarg5_);
  public final static native void AbstractDynamicsEngine_transformPosition__SWIG_2(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, double[] jarg4);
  public final static native void AbstractDynamicsEngine_transformPosition__SWIG_3(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3, ArrayDouble jarg3_, long jarg4, ArrayDouble jarg4_);
  public final static native double AbstractDynamicsEngine_calcDistance__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, long jarg4, AbstractBody jarg4_, double[] jarg5);
  public final static native double AbstractDynamicsEngine_calcDistance__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3, ArrayDouble jarg3_, long jarg4, AbstractBody jarg4_, long jarg5, ArrayDouble jarg5_);
  public final static native void AbstractDynamicsEngine_convertQuaternionsToAngles__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, long jarg3);
  public final static native void AbstractDynamicsEngine_convertQuaternionsToAngles__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, Storage jarg2_);
  public final static native void AbstractDynamicsEngine_convertAnglesToQuaternions__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, long jarg3);
  public final static native void AbstractDynamicsEngine_convertAnglesToQuaternions__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, Storage jarg2_);
  public final static native void AbstractDynamicsEngine_convertRadiansToDegrees__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, Storage jarg2_);
  public final static native void AbstractDynamicsEngine_convertDegreesToRadians__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, Storage jarg2_);
  public final static native void AbstractDynamicsEngine_convertDegreesToRadians__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, long jarg3);
  public final static native void AbstractDynamicsEngine_convertRadiansToDegrees__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, long jarg3);
  public final static native void AbstractDynamicsEngine_convertAnglesToDirectionCosines__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, double jarg2, double jarg3, double jarg4, long jarg5);
  public final static native void AbstractDynamicsEngine_convertAnglesToDirectionCosines__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, double jarg2, double jarg3, double jarg4, long jarg5);
  public final static native void AbstractDynamicsEngine_convertDirectionCosinesToAngles__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void AbstractDynamicsEngine_convertDirectionCosinesToAngles__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void AbstractDynamicsEngine_convertDirectionCosinesToQuaternions__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void AbstractDynamicsEngine_convertDirectionCosinesToQuaternions__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void AbstractDynamicsEngine_convertQuaternionsToDirectionCosines__SWIG_0(long jarg1, AbstractDynamicsEngine jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, long jarg6);
  public final static native void AbstractDynamicsEngine_convertQuaternionsToDirectionCosines__SWIG_1(long jarg1, AbstractDynamicsEngine jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, long jarg6);
  public final static native void AbstractDynamicsEngine_peteTest(long jarg1, AbstractDynamicsEngine jarg1_);
  public final static native long new_SimmKinematicsEngine__SWIG_0();
  public final static native long new_SimmKinematicsEngine__SWIG_1(String jarg1);
  public final static native void delete_SimmKinematicsEngine(long jarg1);
  public final static native long new_SimmKinematicsEngine__SWIG_2(long jarg1, SimmKinematicsEngine jarg1_);
  public final static native long SimmKinematicsEngine_copy(long jarg1, SimmKinematicsEngine jarg1_);
  public final static native void SimmKinematicsEngine_registerTypes();
  public final static native void SimmKinematicsEngine_setup(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, Model jarg2_);
  public final static native void SimmKinematicsEngine_makePaths(long jarg1, SimmKinematicsEngine jarg1_);
  public final static native void SimmKinematicsEngine_updateCoordinateSet(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, CoordinateSet jarg2_);
  public final static native void SimmKinematicsEngine_getUnlockedCoordinates(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, CoordinateSet jarg2_);
  public final static native long SimmKinematicsEngine_findUnconstrainedDof(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractCoordinate jarg2_, long jarg3);
  public final static native void SimmKinematicsEngine_setConfiguration__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, double[] jarg2);
  public final static native void SimmKinematicsEngine_getConfiguration__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, double[] jarg2);
  public final static native void SimmKinematicsEngine_setConfiguration__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, double[] jarg2, double[] jarg3);
  public final static native void SimmKinematicsEngine_getConfiguration__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, double[] jarg2, double[] jarg3);
  public final static native void SimmKinematicsEngine_getCoordinates(long jarg1, SimmKinematicsEngine jarg1_, double[] jarg2);
  public final static native void SimmKinematicsEngine_getSpeeds(long jarg1, SimmKinematicsEngine jarg1_, double[] jarg2);
  public final static native void SimmKinematicsEngine_getAccelerations(long jarg1, SimmKinematicsEngine jarg1_, double[] jarg2);
  public final static native double SimmKinematicsEngine_getAcceleration__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, int jarg2);
  public final static native double SimmKinematicsEngine_getAcceleration__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, String jarg2);
  public final static native void SimmKinematicsEngine_extractConfiguration(long jarg1, SimmKinematicsEngine jarg1_, double[] jarg2, double[] jarg3, double[] jarg4);
  public final static native void SimmKinematicsEngine_applyDefaultConfiguration(long jarg1, SimmKinematicsEngine jarg1_);
  public final static native int SimmKinematicsEngine_assemble(long jarg1, SimmKinematicsEngine jarg1_, double jarg2, long jarg3, long jarg4, double jarg5, int jarg6, long jarg7, long jarg8);
  public final static native boolean SimmKinematicsEngine_scale__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, ScaleSet jarg2_, double jarg3, boolean jarg4);
  public final static native boolean SimmKinematicsEngine_scale__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, ScaleSet jarg2_, double jarg3);
  public final static native boolean SimmKinematicsEngine_scale__SWIG_2(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, ScaleSet jarg2_);
  public final static native long SimmKinematicsEngine_getGroundBody(long jarg1, SimmKinematicsEngine jarg1_);
  public final static native long SimmKinematicsEngine_getLeafBody(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractJoint jarg2_);
  public final static native double SimmKinematicsEngine_getMass(long jarg1, SimmKinematicsEngine jarg1_);
  public final static native void SimmKinematicsEngine_getSystemInertia__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, double[] jarg3, long jarg4);
  public final static native void SimmKinematicsEngine_getSystemInertia__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void SimmKinematicsEngine_getPosition(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, double[] jarg4);
  public final static native void SimmKinematicsEngine_getVelocity(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, double[] jarg4);
  public final static native void SimmKinematicsEngine_getAcceleration__SWIG_2(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, double[] jarg4);
  public final static native void SimmKinematicsEngine_getDirectionCosines__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3);
  public final static native void SimmKinematicsEngine_getDirectionCosines__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3);
  public final static native void SimmKinematicsEngine_getAngularVelocity(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3);
  public final static native void SimmKinematicsEngine_getAngularVelocityBodyLocal(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3);
  public final static native void SimmKinematicsEngine_getAngularAcceleration(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3);
  public final static native void SimmKinematicsEngine_getAngularAccelerationBodyLocal(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3);
  public final static native long SimmKinematicsEngine_getTransform(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_);
  public final static native void SimmKinematicsEngine_applyForce(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, double[] jarg4);
  public final static native void SimmKinematicsEngine_applyForces__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void SimmKinematicsEngine_applyForces__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void SimmKinematicsEngine_applyForceBodyLocal(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, double[] jarg4);
  public final static native void SimmKinematicsEngine_applyForcesBodyLocal__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void SimmKinematicsEngine_applyForcesBodyLocal__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void SimmKinematicsEngine_applyTorque(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3);
  public final static native void SimmKinematicsEngine_applyTorques__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void SimmKinematicsEngine_applyTorques__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void SimmKinematicsEngine_applyTorqueBodyLocal(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3);
  public final static native void SimmKinematicsEngine_applyTorquesBodyLocal__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void SimmKinematicsEngine_applyTorquesBodyLocal__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void SimmKinematicsEngine_applyGeneralizedForce(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractCoordinate jarg2_, double jarg3);
  public final static native void SimmKinematicsEngine_applyGeneralizedForces__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, double[] jarg2);
  public final static native void SimmKinematicsEngine_applyGeneralizedForces__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, int jarg2, long jarg3, double[] jarg4);
  public final static native double SimmKinematicsEngine_getNetAppliedGeneralizedForce(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractCoordinate jarg2_);
  public final static native void SimmKinematicsEngine_computeGeneralizedForces(long jarg1, SimmKinematicsEngine jarg1_, double[] jarg2, double[] jarg3);
  public final static native void SimmKinematicsEngine_computeReactions(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, long jarg3);
  public final static native void SimmKinematicsEngine_formMassMatrix(long jarg1, SimmKinematicsEngine jarg1_, long jarg2);
  public final static native void SimmKinematicsEngine_formEulerTransform(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3);
  public final static native void SimmKinematicsEngine_formJacobianTranslation__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, long jarg4, long jarg5, AbstractBody jarg5_);
  public final static native void SimmKinematicsEngine_formJacobianTranslation__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, long jarg4);
  public final static native void SimmKinematicsEngine_formJacobianOrientation__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3, long jarg4, AbstractBody jarg4_);
  public final static native void SimmKinematicsEngine_formJacobianOrientation__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3);
  public final static native void SimmKinematicsEngine_formJacobianEuler__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3, long jarg4, AbstractBody jarg4_);
  public final static native void SimmKinematicsEngine_formJacobianEuler__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3);
  public final static native void SimmKinematicsEngine_computeDerivatives(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, long jarg3);
  public final static native void SimmKinematicsEngine_transform__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, long jarg4, AbstractBody jarg4_, double[] jarg5);
  public final static native void SimmKinematicsEngine_transform__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3, ArrayDouble jarg3_, long jarg4, AbstractBody jarg4_, long jarg5, ArrayDouble jarg5_);
  public final static native void SimmKinematicsEngine_transformPosition__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, long jarg4, AbstractBody jarg4_, double[] jarg5);
  public final static native void SimmKinematicsEngine_transformPosition__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3, ArrayDouble jarg3_, long jarg4, AbstractBody jarg4_, long jarg5, ArrayDouble jarg5_);
  public final static native void SimmKinematicsEngine_transformPosition__SWIG_2(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, double[] jarg4);
  public final static native void SimmKinematicsEngine_transformPosition__SWIG_3(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3, ArrayDouble jarg3_, long jarg4, ArrayDouble jarg4_);
  public final static native double SimmKinematicsEngine_calcDistance__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, double[] jarg3, long jarg4, AbstractBody jarg4_, double[] jarg5);
  public final static native double SimmKinematicsEngine_calcDistance__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, AbstractBody jarg2_, long jarg3, ArrayDouble jarg3_, long jarg4, AbstractBody jarg4_, long jarg5, ArrayDouble jarg5_);
  public final static native void SimmKinematicsEngine_convertQuaternionsToAngles__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, long jarg3);
  public final static native void SimmKinematicsEngine_convertQuaternionsToAngles__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, Storage jarg2_);
  public final static native void SimmKinematicsEngine_convertAnglesToQuaternions__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, long jarg3);
  public final static native void SimmKinematicsEngine_convertAnglesToQuaternions__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, Storage jarg2_);
  public final static native void SimmKinematicsEngine_convertAnglesToDirectionCosines__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, double jarg2, double jarg3, double jarg4, long jarg5);
  public final static native void SimmKinematicsEngine_convertAnglesToDirectionCosines__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, double jarg2, double jarg3, double jarg4, long jarg5);
  public final static native void SimmKinematicsEngine_convertDirectionCosinesToAngles__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void SimmKinematicsEngine_convertDirectionCosinesToAngles__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void SimmKinematicsEngine_convertDirectionCosinesToQuaternions__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void SimmKinematicsEngine_convertDirectionCosinesToQuaternions__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void SimmKinematicsEngine_convertQuaternionsToDirectionCosines__SWIG_0(long jarg1, SimmKinematicsEngine jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, long jarg6);
  public final static native void SimmKinematicsEngine_convertQuaternionsToDirectionCosines__SWIG_1(long jarg1, SimmKinematicsEngine jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, long jarg6);
  public final static native void SimmKinematicsEngine_computeConstrainedCoordinates(long jarg1, SimmKinematicsEngine jarg1_, long jarg2);
  public final static native void SimmKinematicsEngine_peteTest(long jarg1, SimmKinematicsEngine jarg1_);
  public final static native long new_MusclePoint__SWIG_0();
  public final static native long new_MusclePoint__SWIG_1(long jarg1, MusclePoint jarg1_);
  public final static native void delete_MusclePoint(long jarg1);
  public final static native long MusclePoint_copy__SWIG_0(long jarg1, MusclePoint jarg1_);
  public final static native void MusclePoint_copyData(long jarg1, MusclePoint jarg1_, long jarg2, MusclePoint jarg2_);
  public final static native long MusclePoint_getAttachment(long jarg1, MusclePoint jarg1_);
  public final static native void MusclePoint_setAttachment__SWIG_0(long jarg1, MusclePoint jarg1_, double[] jarg2);
  public final static native void MusclePoint_setAttachment__SWIG_1(long jarg1, MusclePoint jarg1_, int jarg2, double jarg3);
  public final static native long MusclePoint_getBody(long jarg1, MusclePoint jarg1_);
  public final static native void MusclePoint_setBody(long jarg1, MusclePoint jarg1_, long jarg2, AbstractBody jarg2_);
  public final static native String MusclePoint_getBodyName(long jarg1, MusclePoint jarg1_);
  public final static native void MusclePoint_scale(long jarg1, MusclePoint jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native long MusclePoint_getMuscle(long jarg1, MusclePoint jarg1_);
  public final static native boolean MusclePoint_isActive(long jarg1, MusclePoint jarg1_);
  public final static native long MusclePoint_getWrapObject(long jarg1, MusclePoint jarg1_);
  public final static native void MusclePoint_setup(long jarg1, MusclePoint jarg1_, long jarg2, Model jarg2_, long jarg3, AbstractMuscle jarg3_);
  public final static native long MusclePoint_getDisplayer(long jarg1, MusclePoint jarg1_);
  public final static native void MusclePoint_updateGeometry(long jarg1, MusclePoint jarg1_);
  public final static native void MusclePoint_peteTest(long jarg1, MusclePoint jarg1_);
  public final static native boolean MusclePoint_isKindOf(String jarg1);
  public final static native boolean MusclePoint_isA(long jarg1, MusclePoint jarg1_, String jarg2);
  public final static native long MusclePoint_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void MusclePoint_copy__SWIG_1(long jarg1, MusclePoint jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native long new_MuscleWrapPoint__SWIG_0();
  public final static native long new_MuscleWrapPoint__SWIG_1(long jarg1, MuscleWrapPoint jarg1_);
  public final static native void delete_MuscleWrapPoint(long jarg1);
  public final static native long MuscleWrapPoint_copy__SWIG_0(long jarg1, MuscleWrapPoint jarg1_);
  public final static native void MuscleWrapPoint_copyData(long jarg1, MuscleWrapPoint jarg1_, long jarg2, MuscleWrapPoint jarg2_);
  public final static native void MuscleWrapPoint_setup(long jarg1, MuscleWrapPoint jarg1_, long jarg2, Model jarg2_, long jarg3, AbstractMuscle jarg3_);
  public final static native long MuscleWrapPoint_getWrapPath(long jarg1, MuscleWrapPoint jarg1_);
  public final static native double MuscleWrapPoint_getWrapLength(long jarg1, MuscleWrapPoint jarg1_);
  public final static native void MuscleWrapPoint_setWrapLength(long jarg1, MuscleWrapPoint jarg1_, double jarg2);
  public final static native long MuscleWrapPoint_getWrapObject(long jarg1, MuscleWrapPoint jarg1_);
  public final static native void MuscleWrapPoint_setWrapObject(long jarg1, MuscleWrapPoint jarg1_, long jarg2, AbstractWrapObject jarg2_);
  public final static native void MuscleWrapPoint_peteTest(long jarg1, MuscleWrapPoint jarg1_);
  public final static native boolean MuscleWrapPoint_isKindOf(String jarg1);
  public final static native boolean MuscleWrapPoint_isA(long jarg1, MuscleWrapPoint jarg1_, String jarg2);
  public final static native long MuscleWrapPoint_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void MuscleWrapPoint_copy__SWIG_1(long jarg1, MuscleWrapPoint jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native long new_MuscleViaPoint__SWIG_0();
  public final static native long new_MuscleViaPoint__SWIG_1(long jarg1, MuscleViaPoint jarg1_);
  public final static native void delete_MuscleViaPoint(long jarg1);
  public final static native long MuscleViaPoint_copy__SWIG_0(long jarg1, MuscleViaPoint jarg1_);
  public final static native void MuscleViaPoint_copyData(long jarg1, MuscleViaPoint jarg1_, long jarg2, MuscleViaPoint jarg2_);
  public final static native long MuscleViaPoint_getRange(long jarg1, MuscleViaPoint jarg1_);
  public final static native long MuscleViaPoint_getCoordinate(long jarg1, MuscleViaPoint jarg1_);
  public final static native void MuscleViaPoint_setCoordinate(long jarg1, MuscleViaPoint jarg1_, long jarg2, AbstractCoordinate jarg2_);
  public final static native String MuscleViaPoint_getCoordinateName(long jarg1, MuscleViaPoint jarg1_);
  public final static native void MuscleViaPoint_setRangeMin(long jarg1, MuscleViaPoint jarg1_, double jarg2);
  public final static native void MuscleViaPoint_setRangeMax(long jarg1, MuscleViaPoint jarg1_, double jarg2);
  public final static native boolean MuscleViaPoint_isActive(long jarg1, MuscleViaPoint jarg1_);
  public final static native void MuscleViaPoint_setup(long jarg1, MuscleViaPoint jarg1_, long jarg2, Model jarg2_, long jarg3, AbstractMuscle jarg3_);
  public final static native void MuscleViaPoint_peteTest(long jarg1, MuscleViaPoint jarg1_);
  public final static native boolean MuscleViaPoint_isKindOf(String jarg1);
  public final static native boolean MuscleViaPoint_isA(long jarg1, MuscleViaPoint jarg1_, String jarg2);
  public final static native long MuscleViaPoint_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void MuscleViaPoint_copy__SWIG_1(long jarg1, MuscleViaPoint jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native void delete_SetMusclePoint(long jarg1);
  public final static native long new_SetMusclePoint__SWIG_0();
  public final static native long new_SetMusclePoint__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_SetMusclePoint__SWIG_2(String jarg1);
  public final static native long new_SetMusclePoint__SWIG_3(long jarg1, SetMusclePoint jarg1_);
  public final static native long SetMusclePoint_copy(long jarg1, SetMusclePoint jarg1_);
  public final static native void SetMusclePoint_setup(long jarg1, SetMusclePoint jarg1_);
  public final static native void SetMusclePoint_setMemoryOwner(long jarg1, SetMusclePoint jarg1_, boolean jarg2);
  public final static native boolean SetMusclePoint_getMemoryOwner(long jarg1, SetMusclePoint jarg1_);
  public final static native boolean SetMusclePoint_computeNewCapacity(long jarg1, SetMusclePoint jarg1_, int jarg2, long jarg3);
  public final static native boolean SetMusclePoint_ensureCapacity(long jarg1, SetMusclePoint jarg1_, int jarg2);
  public final static native void SetMusclePoint_trim(long jarg1, SetMusclePoint jarg1_);
  public final static native int SetMusclePoint_getCapacity(long jarg1, SetMusclePoint jarg1_);
  public final static native void SetMusclePoint_setCapacityIncrement(long jarg1, SetMusclePoint jarg1_, int jarg2);
  public final static native int SetMusclePoint_getCapacityIncrement(long jarg1, SetMusclePoint jarg1_);
  public final static native boolean SetMusclePoint_setSize(long jarg1, SetMusclePoint jarg1_, int jarg2);
  public final static native int SetMusclePoint_getSize(long jarg1, SetMusclePoint jarg1_);
  public final static native int SetMusclePoint_getIndex__SWIG_0(long jarg1, SetMusclePoint jarg1_, long jarg2, MusclePoint jarg2_, int jarg3);
  public final static native int SetMusclePoint_getIndex__SWIG_1(long jarg1, SetMusclePoint jarg1_, long jarg2, MusclePoint jarg2_);
  public final static native int SetMusclePoint_getIndex__SWIG_2(long jarg1, SetMusclePoint jarg1_, String jarg2, int jarg3);
  public final static native int SetMusclePoint_getIndex__SWIG_3(long jarg1, SetMusclePoint jarg1_, String jarg2);
  public final static native void SetMusclePoint_getGroupNamesContaining(long jarg1, SetMusclePoint jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetMusclePoint_append__SWIG_0(long jarg1, SetMusclePoint jarg1_, long jarg2, MusclePoint jarg2_);
  public final static native boolean SetMusclePoint_append__SWIG_1(long jarg1, SetMusclePoint jarg1_, long jarg2);
  public final static native boolean SetMusclePoint_insert(long jarg1, SetMusclePoint jarg1_, int jarg2, long jarg3, MusclePoint jarg3_);
  public final static native boolean SetMusclePoint_remove__SWIG_0(long jarg1, SetMusclePoint jarg1_, int jarg2);
  public final static native boolean SetMusclePoint_remove__SWIG_1(long jarg1, SetMusclePoint jarg1_, long jarg2, MusclePoint jarg2_);
  public final static native void SetMusclePoint_clearAndDestroy(long jarg1, SetMusclePoint jarg1_);
  public final static native boolean SetMusclePoint_set(long jarg1, SetMusclePoint jarg1_, int jarg2, long jarg3, MusclePoint jarg3_);
  public final static native long SetMusclePoint_get__SWIG_0(long jarg1, SetMusclePoint jarg1_, int jarg2);
  public final static native long SetMusclePoint_get__SWIG_1(long jarg1, SetMusclePoint jarg1_, String jarg2);
  public final static native void SetMusclePoint_getNames(long jarg1, SetMusclePoint jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetMusclePoint_getLast(long jarg1, SetMusclePoint jarg1_);
  public final static native int SetMusclePoint_searchBinary__SWIG_0(long jarg1, SetMusclePoint jarg1_, long jarg2, MusclePoint jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int SetMusclePoint_searchBinary__SWIG_1(long jarg1, SetMusclePoint jarg1_, long jarg2, MusclePoint jarg2_, boolean jarg3, int jarg4);
  public final static native int SetMusclePoint_searchBinary__SWIG_2(long jarg1, SetMusclePoint jarg1_, long jarg2, MusclePoint jarg2_, boolean jarg3);
  public final static native int SetMusclePoint_searchBinary__SWIG_3(long jarg1, SetMusclePoint jarg1_, long jarg2, MusclePoint jarg2_);
  public final static native int SetMusclePoint_getNumGroups(long jarg1, SetMusclePoint jarg1_);
  public final static native void SetMusclePoint_addGroup(long jarg1, SetMusclePoint jarg1_, String jarg2);
  public final static native void SetMusclePoint_removeGroup(long jarg1, SetMusclePoint jarg1_, String jarg2);
  public final static native void SetMusclePoint_renameGroup(long jarg1, SetMusclePoint jarg1_, String jarg2, String jarg3);
  public final static native void SetMusclePoint_addObjectToGroup(long jarg1, SetMusclePoint jarg1_, String jarg2, String jarg3);
  public final static native void SetMusclePoint_getGroupNames(long jarg1, SetMusclePoint jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetMusclePoint_getGroup__SWIG_0(long jarg1, SetMusclePoint jarg1_, String jarg2);
  public final static native long SetMusclePoint_getGroup__SWIG_1(long jarg1, SetMusclePoint jarg1_, int jarg2);
  public final static native void delete_ArrayMusclePoint(long jarg1);
  public final static native long new_ArrayMusclePoint__SWIG_0(long jarg1, int jarg2, int jarg3);
  public final static native long new_ArrayMusclePoint__SWIG_1(long jarg1, int jarg2);
  public final static native long new_ArrayMusclePoint__SWIG_2(long jarg1);
  public final static native long new_ArrayMusclePoint__SWIG_3();
  public final static native long new_ArrayMusclePoint__SWIG_4(long jarg1, ArrayMusclePoint jarg1_);
  public final static native boolean ArrayMusclePoint_computeNewCapacity(long jarg1, ArrayMusclePoint jarg1_, int jarg2, long jarg3);
  public final static native boolean ArrayMusclePoint_ensureCapacity(long jarg1, ArrayMusclePoint jarg1_, int jarg2);
  public final static native void ArrayMusclePoint_trim(long jarg1, ArrayMusclePoint jarg1_);
  public final static native int ArrayMusclePoint_getCapacity(long jarg1, ArrayMusclePoint jarg1_);
  public final static native void ArrayMusclePoint_setCapacityIncrement(long jarg1, ArrayMusclePoint jarg1_, int jarg2);
  public final static native int ArrayMusclePoint_getCapacityIncrement(long jarg1, ArrayMusclePoint jarg1_);
  public final static native boolean ArrayMusclePoint_setSize(long jarg1, ArrayMusclePoint jarg1_, int jarg2);
  public final static native int ArrayMusclePoint_getSize(long jarg1, ArrayMusclePoint jarg1_);
  public final static native int ArrayMusclePoint_append__SWIG_0(long jarg1, ArrayMusclePoint jarg1_, long jarg2);
  public final static native int ArrayMusclePoint_append__SWIG_1(long jarg1, ArrayMusclePoint jarg1_, long jarg2, ArrayMusclePoint jarg2_);
  public final static native int ArrayMusclePoint_append__SWIG_2(long jarg1, ArrayMusclePoint jarg1_, int jarg2, long jarg3);
  public final static native int ArrayMusclePoint_insert(long jarg1, ArrayMusclePoint jarg1_, int jarg2, long jarg3);
  public final static native int ArrayMusclePoint_remove(long jarg1, ArrayMusclePoint jarg1_, int jarg2);
  public final static native void ArrayMusclePoint_set(long jarg1, ArrayMusclePoint jarg1_, int jarg2, long jarg3);
  public final static native long ArrayMusclePoint_get__SWIG_0(long jarg1, ArrayMusclePoint jarg1_);
  public final static native long ArrayMusclePoint_get__SWIG_1(long jarg1, ArrayMusclePoint jarg1_, int jarg2);
  public final static native long ArrayMusclePoint_getitem(long jarg1, ArrayMusclePoint jarg1_, int jarg2);
  public final static native void ArrayMusclePoint_setitem(long jarg1, ArrayMusclePoint jarg1_, int jarg2, long jarg3, MusclePoint jarg3_);
  public final static native long ArrayMusclePoint_getLast(long jarg1, ArrayMusclePoint jarg1_);
  public final static native int ArrayMusclePoint_findIndex(long jarg1, ArrayMusclePoint jarg1_, long jarg2);
  public final static native int ArrayMusclePoint_rfindIndex(long jarg1, ArrayMusclePoint jarg1_, long jarg2);
  public final static native int ArrayMusclePoint_searchBinary__SWIG_0(long jarg1, ArrayMusclePoint jarg1_, long jarg2, boolean jarg3, int jarg4, int jarg5);
  public final static native int ArrayMusclePoint_searchBinary__SWIG_1(long jarg1, ArrayMusclePoint jarg1_, long jarg2, boolean jarg3, int jarg4);
  public final static native int ArrayMusclePoint_searchBinary__SWIG_2(long jarg1, ArrayMusclePoint jarg1_, long jarg2, boolean jarg3);
  public final static native int ArrayMusclePoint_searchBinary__SWIG_3(long jarg1, ArrayMusclePoint jarg1_, long jarg2);
  public final static native long new_MusclePointSet__SWIG_0();
  public final static native long new_MusclePointSet__SWIG_1(long jarg1, MusclePointSet jarg1_);
  public final static native void delete_MusclePointSet(long jarg1);
  public final static native void delete_AbstractMuscle(long jarg1);
  public final static native long AbstractMuscle_copy__SWIG_0(long jarg1, AbstractMuscle jarg1_);
  public final static native void AbstractMuscle_setup(long jarg1, AbstractMuscle jarg1_, long jarg2, Model jarg2_);
  public final static native void AbstractMuscle_copyData(long jarg1, AbstractMuscle jarg1_, long jarg2, AbstractMuscle jarg2_);
  public final static native long AbstractMuscle_getAttachmentSet(long jarg1, AbstractMuscle jarg1_);
  public final static native long AbstractMuscle_getCurrentPath(long jarg1, AbstractMuscle jarg1_);
  public final static native int AbstractMuscle_getMuscleModelIndex(long jarg1, AbstractMuscle jarg1_);
  public final static native boolean AbstractMuscle_getMuscleModelIndexUseDefault(long jarg1, AbstractMuscle jarg1_);
  public final static native long AbstractMuscle_getWrapSet(long jarg1, AbstractMuscle jarg1_);
  public final static native long AbstractMuscle_addAttachmentPoint(long jarg1, AbstractMuscle jarg1_, int jarg2, long jarg3, AbstractBody jarg3_);
  public final static native void AbstractMuscle_deleteAttachmentPoint(long jarg1, AbstractMuscle jarg1_, int jarg2);
  public final static native void AbstractMuscle_addMuscleWrap(long jarg1, AbstractMuscle jarg1_, long jarg2, AbstractWrapObject jarg2_);
  public final static native void AbstractMuscle_moveUpMuscleWrap(long jarg1, AbstractMuscle jarg1_, int jarg2);
  public final static native void AbstractMuscle_moveDownMuscleWrap(long jarg1, AbstractMuscle jarg1_, int jarg2);
  public final static native void AbstractMuscle_deleteMuscleWrap(long jarg1, AbstractMuscle jarg1_, int jarg2);
  public final static native double AbstractMuscle_getPennationAngle(long jarg1, AbstractMuscle jarg1_);
  public final static native double AbstractMuscle_getPennationAngleAtOptimalFiberLength(long jarg1, AbstractMuscle jarg1_);
  public final static native double AbstractMuscle_getLength(long jarg1, AbstractMuscle jarg1_);
  public final static native double AbstractMuscle_getTendonLength(long jarg1, AbstractMuscle jarg1_);
  public final static native double AbstractMuscle_getFiberLength(long jarg1, AbstractMuscle jarg1_);
  public final static native double AbstractMuscle_getNormalizedFiberLength(long jarg1, AbstractMuscle jarg1_);
  public final static native double AbstractMuscle_getFiberLengthAlongTendon(long jarg1, AbstractMuscle jarg1_);
  public final static native double AbstractMuscle_getShorteningSpeed(long jarg1, AbstractMuscle jarg1_);
  public final static native double AbstractMuscle_getFiberForce(long jarg1, AbstractMuscle jarg1_);
  public final static native double AbstractMuscle_getActiveFiberForce(long jarg1, AbstractMuscle jarg1_);
  public final static native double AbstractMuscle_getPassiveFiberForce(long jarg1, AbstractMuscle jarg1_);
  public final static native double AbstractMuscle_getActiveFiberForceAlongTendon(long jarg1, AbstractMuscle jarg1_);
  public final static native double AbstractMuscle_getPassiveFiberForceAlongTendon(long jarg1, AbstractMuscle jarg1_);
  public final static native void AbstractMuscle_computeActuation(long jarg1, AbstractMuscle jarg1_);
  public final static native double AbstractMuscle_computeMomentArm(long jarg1, AbstractMuscle jarg1_, long jarg2, AbstractCoordinate jarg2_);
  public final static native void AbstractMuscle_computeMomentArms(long jarg1, AbstractMuscle jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void AbstractMuscle_computePath(long jarg1, AbstractMuscle jarg1_);
  public final static native void AbstractMuscle_applyWrapObjects(long jarg1, AbstractMuscle jarg1_);
  public final static native double AbstractMuscle__calc_muscle_length_change(long jarg1, AbstractMuscle jarg1_, long jarg2, AbstractWrapObject jarg2_, long jarg3);
  public final static native void AbstractMuscle_calcLengthAfterPathComputation(long jarg1, AbstractMuscle jarg1_);
  public final static native double AbstractMuscle_calcPennation(long jarg1, AbstractMuscle jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void AbstractMuscle_invalidatePath(long jarg1, AbstractMuscle jarg1_);
  public final static native void AbstractMuscle_preScale(long jarg1, AbstractMuscle jarg1_, long jarg2, ScaleSet jarg2_);
  public final static native void AbstractMuscle_scale(long jarg1, AbstractMuscle jarg1_, long jarg2, ScaleSet jarg2_);
  public final static native void AbstractMuscle_postScale(long jarg1, AbstractMuscle jarg1_, long jarg2, ScaleSet jarg2_);
  public final static native void AbstractMuscle_apply(long jarg1, AbstractMuscle jarg1_);
  public final static native void AbstractMuscle_peteTest(long jarg1, AbstractMuscle jarg1_);
  public final static native void AbstractMuscle_updateGeometry(long jarg1, AbstractMuscle jarg1_);
  public final static native long AbstractMuscle_getDisplayer(long jarg1, AbstractMuscle jarg1_);
  public final static native boolean AbstractMuscle_isKindOf(String jarg1);
  public final static native boolean AbstractMuscle_isA(long jarg1, AbstractMuscle jarg1_, String jarg2);
  public final static native long AbstractMuscle_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void AbstractMuscle_copy__SWIG_1(long jarg1, AbstractMuscle jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native long new_Force__SWIG_0(String jarg1, String jarg2);
  public final static native long new_Force__SWIG_1(String jarg1);
  public final static native long new_Force__SWIG_2();
  public final static native long new_Force__SWIG_3(long jarg1, Force jarg1_);
  public final static native void delete_Force(long jarg1);
  public final static native long Force_copy__SWIG_0(long jarg1, Force jarg1_);
  public final static native void Force_setBodyA(long jarg1, Force jarg1_, long jarg2, AbstractBody jarg2_);
  public final static native long Force_getBodyA(long jarg1, Force jarg1_);
  public final static native void Force_setPointA(long jarg1, Force jarg1_, double[] jarg2);
  public final static native void Force_getPointA(long jarg1, Force jarg1_, double[] jarg2);
  public final static native void Force_setForceDirectionA(long jarg1, Force jarg1_, double[] jarg2);
  public final static native void Force_getForceDirectionA(long jarg1, Force jarg1_, double[] jarg2);
  public final static native void Force_setBodyB(long jarg1, Force jarg1_, long jarg2, AbstractBody jarg2_);
  public final static native long Force_getBodyB(long jarg1, Force jarg1_);
  public final static native void Force_setPointB(long jarg1, Force jarg1_, double[] jarg2);
  public final static native void Force_getPointB(long jarg1, Force jarg1_, double[] jarg2);
  public final static native void Force_getForceDirectionB(long jarg1, Force jarg1_, double[] jarg2);
  public final static native void Force_setPointAFunction(long jarg1, Force jarg1_, long jarg2);
  public final static native long Force_getPointAFunction(long jarg1, Force jarg1_);
  public final static native void Force_setPointBFunction(long jarg1, Force jarg1_, long jarg2);
  public final static native long Force_getPointBFunction(long jarg1, Force jarg1_);
  public final static native void Force_setScaleFunction(long jarg1, Force jarg1_, long jarg2, Function jarg2_);
  public final static native long Force_getScaleFunction(long jarg1, Force jarg1_);
  public final static native void Force_setScaleFactor(long jarg1, Force jarg1_, double jarg2);
  public final static native double Force_getScaleFactor(long jarg1, Force jarg1_);
  public final static native void Force_setOptimalForce(long jarg1, Force jarg1_, double jarg2);
  public final static native double Force_getOptimalForce(long jarg1, Force jarg1_);
  public final static native double Force_getStress(long jarg1, Force jarg1_);
  public final static native void Force_apply(long jarg1, Force jarg1_);
  public final static native void Force_computeActuation(long jarg1, Force jarg1_);
  public final static native void Force_computeForceDirectionForBodyB(long jarg1, Force jarg1_);
  public final static native void Force_computeSpeed(long jarg1, Force jarg1_);
  public final static native void Force_updatePointA(long jarg1, Force jarg1_);
  public final static native void Force_updatePointB(long jarg1, Force jarg1_);
  public final static native boolean Force_check(long jarg1, Force jarg1_);
  public final static native void Force_setup(long jarg1, Force jarg1_, long jarg2, Model jarg2_);
  public final static native void Force_computeLineOfAction(long jarg1, Force jarg1_, double[] jarg2);
  public final static native boolean Force_isKindOf(String jarg1);
  public final static native boolean Force_isA(long jarg1, Force jarg1_, String jarg2);
  public final static native long Force_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void Force_copy__SWIG_1(long jarg1, Force jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native long new_Torque__SWIG_0(String jarg1, String jarg2);
  public final static native long new_Torque__SWIG_1(String jarg1);
  public final static native long new_Torque__SWIG_2();
  public final static native long new_Torque__SWIG_3(long jarg1, Torque jarg1_);
  public final static native void delete_Torque(long jarg1);
  public final static native long Torque_copy__SWIG_0(long jarg1, Torque jarg1_);
  public final static native void Torque_setBodyA(long jarg1, Torque jarg1_, long jarg2, AbstractBody jarg2_);
  public final static native long Torque_getBodyA(long jarg1, Torque jarg1_);
  public final static native void Torque_setDirectionA(long jarg1, Torque jarg1_, double[] jarg2);
  public final static native void Torque_getDirectionA(long jarg1, Torque jarg1_, double[] jarg2);
  public final static native void Torque_setBodyB(long jarg1, Torque jarg1_, long jarg2, AbstractBody jarg2_);
  public final static native long Torque_getBodyB(long jarg1, Torque jarg1_);
  public final static native void Torque_getDirectionB(long jarg1, Torque jarg1_, double[] jarg2);
  public final static native void Torque_setOptimalForce(long jarg1, Torque jarg1_, double jarg2);
  public final static native double Torque_getOptimalForce(long jarg1, Torque jarg1_);
  public final static native double Torque_getStress(long jarg1, Torque jarg1_);
  public final static native void Torque_apply(long jarg1, Torque jarg1_);
  public final static native void Torque_computeActuation(long jarg1, Torque jarg1_);
  public final static native void Torque_computeDirectionForBodyB(long jarg1, Torque jarg1_);
  public final static native void Torque_computeSpeed(long jarg1, Torque jarg1_);
  public final static native boolean Torque_check(long jarg1, Torque jarg1_);
  public final static native void Torque_setup(long jarg1, Torque jarg1_, long jarg2, Model jarg2_);
  public final static native boolean Torque_isKindOf(String jarg1);
  public final static native boolean Torque_isA(long jarg1, Torque jarg1_, String jarg2);
  public final static native long Torque_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void Torque_copy__SWIG_1(long jarg1, Torque jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native long new_GeneralizedForce__SWIG_0(String jarg1);
  public final static native long new_GeneralizedForce__SWIG_1();
  public final static native long new_GeneralizedForce__SWIG_2(long jarg1, GeneralizedForce jarg1_);
  public final static native void delete_GeneralizedForce(long jarg1);
  public final static native long GeneralizedForce_copy__SWIG_0(long jarg1, GeneralizedForce jarg1_);
  public final static native void GeneralizedForce_copyData(long jarg1, GeneralizedForce jarg1_, long jarg2, GeneralizedForce jarg2_);
  public final static native void GeneralizedForce_setQ(long jarg1, GeneralizedForce jarg1_, long jarg2, AbstractCoordinate jarg2_);
  public final static native long GeneralizedForce_getQ(long jarg1, GeneralizedForce jarg1_);
  public final static native void GeneralizedForce_setOptimalForce(long jarg1, GeneralizedForce jarg1_, double jarg2);
  public final static native double GeneralizedForce_getOptimalForce(long jarg1, GeneralizedForce jarg1_);
  public final static native double GeneralizedForce_getStress(long jarg1, GeneralizedForce jarg1_);
  public final static native void GeneralizedForce_apply(long jarg1, GeneralizedForce jarg1_);
  public final static native void GeneralizedForce_computeActuation(long jarg1, GeneralizedForce jarg1_);
  public final static native boolean GeneralizedForce_check(long jarg1, GeneralizedForce jarg1_);
  public final static native boolean GeneralizedForce_isQValid(long jarg1, GeneralizedForce jarg1_);
  public final static native void GeneralizedForce_setup(long jarg1, GeneralizedForce jarg1_, long jarg2, Model jarg2_);
  public final static native void GeneralizedForce_updateFromXMLNode(long jarg1, GeneralizedForce jarg1_);
  public final static native boolean GeneralizedForce_isKindOf(String jarg1);
  public final static native boolean GeneralizedForce_isA(long jarg1, GeneralizedForce jarg1_, String jarg2);
  public final static native long GeneralizedForce_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void GeneralizedForce_copy__SWIG_1(long jarg1, GeneralizedForce jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native long new_SimmDarrylMuscle__SWIG_0();
  public final static native long new_SimmDarrylMuscle__SWIG_1(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native void delete_SimmDarrylMuscle(long jarg1);
  public final static native long SimmDarrylMuscle_copy__SWIG_0(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native void SimmDarrylMuscle_copyData(long jarg1, SimmDarrylMuscle jarg1_, long jarg2, SimmDarrylMuscle jarg2_);
  public final static native double SimmDarrylMuscle_getMaxIsometricForce(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getOptimalFiberLength(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getTendonSlackLength(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getPennationAngleAtOptimalFiberLength(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getActivationTimeConstant(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getDeactivationTimeConstant(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getVmax(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getVmax0(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getFmaxTendonStrain(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getFmaxMuscleStrain(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getKshapeActive(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getKshapePassive(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getDamping(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getAf(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getFlen(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getPennationAngle(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getFiberLength(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getNormalizedFiberLength(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getPassiveFiberForce(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_getStress(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native void SimmDarrylMuscle_computeStateDerivatives(long jarg1, SimmDarrylMuscle jarg1_, double[] jarg2);
  public final static native void SimmDarrylMuscle_computeActuation(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native double SimmDarrylMuscle_calcTendonForce(long jarg1, SimmDarrylMuscle jarg1_, double jarg2);
  public final static native double SimmDarrylMuscle_calcPassiveForce(long jarg1, SimmDarrylMuscle jarg1_, double jarg2);
  public final static native double SimmDarrylMuscle_calcActiveForce(long jarg1, SimmDarrylMuscle jarg1_, double jarg2);
  public final static native double SimmDarrylMuscle_calcFiberVelocity(long jarg1, SimmDarrylMuscle jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native double SimmDarrylMuscle_computeIsometricForce(long jarg1, SimmDarrylMuscle jarg1_, double jarg2);
  public final static native void SimmDarrylMuscle_postScale(long jarg1, SimmDarrylMuscle jarg1_, long jarg2, ScaleSet jarg2_);
  public final static native void SimmDarrylMuscle_scale(long jarg1, SimmDarrylMuscle jarg1_, long jarg2, ScaleSet jarg2_);
  public final static native void SimmDarrylMuscle_setup(long jarg1, SimmDarrylMuscle jarg1_, long jarg2, Model jarg2_);
  public final static native void SimmDarrylMuscle_peteTest(long jarg1, SimmDarrylMuscle jarg1_);
  public final static native boolean SimmDarrylMuscle_isKindOf(String jarg1);
  public final static native boolean SimmDarrylMuscle_isA(long jarg1, SimmDarrylMuscle jarg1_, String jarg2);
  public final static native long SimmDarrylMuscle_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void SimmDarrylMuscle_copy__SWIG_1(long jarg1, SimmDarrylMuscle jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native long new_SimmZajacHill__SWIG_0();
  public final static native long new_SimmZajacHill__SWIG_1(long jarg1, SimmZajacHill jarg1_);
  public final static native void delete_SimmZajacHill(long jarg1);
  public final static native long SimmZajacHill_copy__SWIG_0(long jarg1, SimmZajacHill jarg1_);
  public final static native void SimmZajacHill_copyData(long jarg1, SimmZajacHill jarg1_, long jarg2, SimmZajacHill jarg2_);
  public final static native double SimmZajacHill_getMaxIsometricForce(long jarg1, SimmZajacHill jarg1_);
  public final static native double SimmZajacHill_getOptimalFiberLength(long jarg1, SimmZajacHill jarg1_);
  public final static native double SimmZajacHill_getTendonSlackLength(long jarg1, SimmZajacHill jarg1_);
  public final static native double SimmZajacHill_getPennationAngleAtOptimalFiberLength(long jarg1, SimmZajacHill jarg1_);
  public final static native double SimmZajacHill_getMaxContractionVelocity(long jarg1, SimmZajacHill jarg1_);
  public final static native double SimmZajacHill_getTimeScale(long jarg1, SimmZajacHill jarg1_);
  public final static native double SimmZajacHill_getDamping(long jarg1, SimmZajacHill jarg1_);
  public final static native double SimmZajacHill_getPennationAngle(long jarg1, SimmZajacHill jarg1_);
  public final static native double SimmZajacHill_getFiberLength(long jarg1, SimmZajacHill jarg1_);
  public final static native double SimmZajacHill_getNormalizedFiberLength(long jarg1, SimmZajacHill jarg1_);
  public final static native double SimmZajacHill_getPassiveFiberForce(long jarg1, SimmZajacHill jarg1_);
  public final static native void SimmZajacHill_computeStateDerivatives(long jarg1, SimmZajacHill jarg1_, double[] jarg2);
  public final static native void SimmZajacHill_computeEquilibrium(long jarg1, SimmZajacHill jarg1_);
  public final static native void SimmZajacHill_computeActuation(long jarg1, SimmZajacHill jarg1_);
  public final static native void SimmZajacHill_postScale(long jarg1, SimmZajacHill jarg1_, long jarg2, ScaleSet jarg2_);
  public final static native void SimmZajacHill_scale(long jarg1, SimmZajacHill jarg1_, long jarg2, ScaleSet jarg2_);
  public final static native void SimmZajacHill_setup(long jarg1, SimmZajacHill jarg1_, long jarg2, Model jarg2_);
  public final static native long SimmZajacHill_getActiveForceLengthCurve(long jarg1, SimmZajacHill jarg1_);
  public final static native long SimmZajacHill_getPassiveForceLengthCurve(long jarg1, SimmZajacHill jarg1_);
  public final static native long SimmZajacHill_getTendonForceLengthCurve(long jarg1, SimmZajacHill jarg1_);
  public final static native long SimmZajacHill_getForceVelocityCurve(long jarg1, SimmZajacHill jarg1_);
  public final static native double SimmZajacHill_calcNonzeroPassiveForce(long jarg1, SimmZajacHill jarg1_, double jarg2, double jarg3);
  public final static native double SimmZajacHill_calcFiberVelocity(long jarg1, SimmZajacHill jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native double SimmZajacHill_calcTendonForce(long jarg1, SimmZajacHill jarg1_, double jarg2);
  public final static native double SimmZajacHill_getStress(long jarg1, SimmZajacHill jarg1_);
  public final static native double SimmZajacHill_computeIsometricForce(long jarg1, SimmZajacHill jarg1_, double jarg2);
  public final static native void SimmZajacHill_peteTest(long jarg1, SimmZajacHill jarg1_);
  public final static native boolean SimmZajacHill_isKindOf(String jarg1);
  public final static native boolean SimmZajacHill_isA(long jarg1, SimmZajacHill jarg1_, String jarg2);
  public final static native long SimmZajacHill_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void SimmZajacHill_copy__SWIG_1(long jarg1, SimmZajacHill jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native long new_SimmPoint__SWIG_0();
  public final static native long new_SimmPoint__SWIG_1(double[] jarg1);
  public final static native long new_SimmPoint__SWIG_2(long jarg1, SimmPoint jarg1_);
  public final static native void delete_SimmPoint(long jarg1);
  public final static native long SimmPoint_copy(long jarg1, SimmPoint jarg1_);
  public final static native void SimmPoint_set(long jarg1, SimmPoint jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native long SimmPoint_get(long jarg1, SimmPoint jarg1_);
  public final static native void SimmPoint_scale(long jarg1, SimmPoint jarg1_, double jarg2);
  public final static native boolean SimmPoint_isVisible(long jarg1, SimmPoint jarg1_);
  public final static native void SimmPoint_peteTest(long jarg1, SimmPoint jarg1_);
  public final static native long new_SimmRotationDof__SWIG_0();
  public final static native long new_SimmRotationDof__SWIG_1(long jarg1, SimmRotationDof jarg1_);
  public final static native void delete_SimmRotationDof(long jarg1);
  public final static native long SimmRotationDof_copy(long jarg1, SimmRotationDof jarg1_);
  public final static native void SimmRotationDof_copyData(long jarg1, SimmRotationDof jarg1_, long jarg2, SimmRotationDof jarg2_);
  public final static native void SimmRotationDof_getAxis__SWIG_0(long jarg1, SimmRotationDof jarg1_, double[] jarg2);
  public final static native long SimmRotationDof_getAxis__SWIG_1(long jarg1, SimmRotationDof jarg1_);
  public final static native long SimmRotationDof_getAxisPtr(long jarg1, SimmRotationDof jarg1_);
  public final static native double SimmRotationDof_getValue(long jarg1, SimmRotationDof jarg1_);
  public final static native int SimmRotationDof_getMotionType(long jarg1, SimmRotationDof jarg1_);
  public final static native void SimmRotationDof_peteTest(long jarg1, SimmRotationDof jarg1_);
  public final static native String TX_NAME_get();
  public final static native String TY_NAME_get();
  public final static native String TZ_NAME_get();
  public final static native int SimmTranslationDof_xTranslation_get();
  public final static native long new_SimmTranslationDof__SWIG_0();
  public final static native long new_SimmTranslationDof__SWIG_1(long jarg1, SimmTranslationDof jarg1_);
  public final static native void delete_SimmTranslationDof(long jarg1);
  public final static native long SimmTranslationDof_copy(long jarg1, SimmTranslationDof jarg1_);
  public final static native void SimmTranslationDof_updateFromXMLNode(long jarg1, SimmTranslationDof jarg1_);
  public final static native void SimmTranslationDof_copyData(long jarg1, SimmTranslationDof jarg1_, long jarg2, SimmTranslationDof jarg2_);
  public final static native void SimmTranslationDof_getAxis(long jarg1, SimmTranslationDof jarg1_, double[] jarg2);
  public final static native long SimmTranslationDof_getAxisPtr(long jarg1, SimmTranslationDof jarg1_);
  public final static native double SimmTranslationDof_getValue(long jarg1, SimmTranslationDof jarg1_);
  public final static native int SimmTranslationDof_getMotionType(long jarg1, SimmTranslationDof jarg1_);
  public final static native void SimmTranslationDof_getTranslation(long jarg1, SimmTranslationDof jarg1_, double[] jarg2);
  public final static native int SimmTranslationDof_getAxisIndex(long jarg1, SimmTranslationDof jarg1_);
  public final static native void SimmTranslationDof_peteTest(long jarg1, SimmTranslationDof jarg1_);
  public final static native int Units_simmUnknownUnits_get();
  public final static native long new_Units__SWIG_0();
  public final static native long new_Units__SWIG_1(long jarg1, Units jarg1_);
  public final static native long new_Units__SWIG_2(long jarg1);
  public final static native long new_Units__SWIG_3(int jarg1);
  public final static native void delete_Units(long jarg1);
  public final static native double Units_convertTo__SWIG_0(long jarg1, Units jarg1_, int jarg2, double jarg3);
  public final static native double Units_convertTo__SWIG_1(long jarg1, Units jarg1_, int jarg2);
  public final static native double Units_convertTo__SWIG_2(long jarg1, Units jarg1_, long jarg2, Units jarg2_);
  public final static native int Units_getType(long jarg1, Units jarg1_);
  public final static native String Units_getLabel(long jarg1, Units jarg1_);
  public final static native void Units_peteTest(long jarg1, Units jarg1_);
  public final static native long new_GenericModelMaker__SWIG_0();
  public final static native long new_GenericModelMaker__SWIG_1(long jarg1, GenericModelMaker jarg1_);
  public final static native void delete_GenericModelMaker(long jarg1);
  public final static native long GenericModelMaker_copy(long jarg1, GenericModelMaker jarg1_);
  public final static native void GenericModelMaker_copyData(long jarg1, GenericModelMaker jarg1_, long jarg2, GenericModelMaker jarg2_);
  public final static native long GenericModelMaker_processModel__SWIG_0(long jarg1, GenericModelMaker jarg1_, String jarg2);
  public final static native long GenericModelMaker_processModel__SWIG_1(long jarg1, GenericModelMaker jarg1_);
  public final static native void GenericModelMaker_registerTypes();
  public final static native void GenericModelMaker_peteTest(long jarg1, GenericModelMaker jarg1_);
  public final static native String GenericModelMaker_getModelFileName(long jarg1, GenericModelMaker jarg1_);
  public final static native void GenericModelMaker_setModelFileName(long jarg1, GenericModelMaker jarg1_, String jarg2);
  public final static native long GenericModelMaker_getMarkerSet(long jarg1, GenericModelMaker jarg1_);
  public final static native long new_ModelScaler__SWIG_0();
  public final static native long new_ModelScaler__SWIG_1(long jarg1, ModelScaler jarg1_);
  public final static native void delete_ModelScaler(long jarg1);
  public final static native long ModelScaler_copy(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_copyData(long jarg1, ModelScaler jarg1_, long jarg2, ModelScaler jarg2_);
  public final static native boolean ModelScaler_processModel__SWIG_0(long jarg1, ModelScaler jarg1_, long jarg2, Model jarg2_, String jarg3, double jarg4);
  public final static native boolean ModelScaler_processModel__SWIG_1(long jarg1, ModelScaler jarg1_, long jarg2, Model jarg2_, String jarg3);
  public final static native boolean ModelScaler_processModel__SWIG_2(long jarg1, ModelScaler jarg1_, long jarg2, Model jarg2_);
  public final static native void ModelScaler_registerTypes();
  public final static native boolean ModelScaler_getPreserveMassDist(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_peteTest(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_addMeasurement(long jarg1, ModelScaler jarg1_, long jarg2);
  public final static native void ModelScaler_addScale(long jarg1, ModelScaler jarg1_, long jarg2, Scale jarg2_);
  public final static native long ModelScaler_getMeasurementSet(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setMeasurementSet(long jarg1, ModelScaler jarg1_, long jarg2);
  public final static native long ModelScaler_getScaleSet(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setScaleSetFile(long jarg1, ModelScaler jarg1_, String jarg2);
  public final static native long ModelScaler_getTimeRange(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setTimeRange(long jarg1, ModelScaler jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native void ModelScaler_setPreserveMassDist(long jarg1, ModelScaler jarg1_, boolean jarg2);
  public final static native long ModelScaler_getScalingOrder(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setScalingOrder(long jarg1, ModelScaler jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native String ModelScaler_getMarkerFileName(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setMarkerFileName(long jarg1, ModelScaler jarg1_, String jarg2);
  public final static native void ModelScaler_setMaxMarkerMovement(long jarg1, ModelScaler jarg1_, double jarg2);
  public final static native double ModelScaler_getMaxMarkerMovement(long jarg1, ModelScaler jarg1_);
  public final static native String ModelScaler_getOutputJointFileName(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setOutputJointFileName(long jarg1, ModelScaler jarg1_, String jarg2);
  public final static native String ModelScaler_getOutputMuscleFileName(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setOutputMuscleFileName(long jarg1, ModelScaler jarg1_, String jarg2);
  public final static native String ModelScaler_getOutputModelFileName(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setOutputModelFileName(long jarg1, ModelScaler jarg1_, String jarg2);
  public final static native String ModelScaler_getOutputScaleFileName(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setOutputScaleFileName(long jarg1, ModelScaler jarg1_, String jarg2);
  public final static native long new_MarkerPlacer__SWIG_0();
  public final static native long new_MarkerPlacer__SWIG_1(long jarg1, MarkerPlacer jarg1_);
  public final static native void delete_MarkerPlacer(long jarg1);
  public final static native long MarkerPlacer_copy(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_copyData(long jarg1, MarkerPlacer jarg1_, long jarg2, MarkerPlacer jarg2_);
  public final static native boolean MarkerPlacer_processModel__SWIG_0(long jarg1, MarkerPlacer jarg1_, long jarg2, Model jarg2_, String jarg3);
  public final static native boolean MarkerPlacer_processModel__SWIG_1(long jarg1, MarkerPlacer jarg1_, long jarg2, Model jarg2_);
  public final static native String MarkerPlacer_getStaticPoseFilename(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setStaticPoseFilename(long jarg1, MarkerPlacer jarg1_, String jarg2);
  public final static native long MarkerPlacer_getTimeRange(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setTimeRange(long jarg1, MarkerPlacer jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native String MarkerPlacer_getCoordinateFileName(long jarg1, MarkerPlacer jarg1_);
  public final static native double MarkerPlacer_getMaxMarkerMovement(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setMaxMarkerMovement(long jarg1, MarkerPlacer jarg1_, double jarg2);
  public final static native String MarkerPlacer_getOutputModelFileName(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setOutputModelFileName(long jarg1, MarkerPlacer jarg1_, String jarg2);
  public final static native String MarkerPlacer_getOutputJointFileName(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setOutputJointFileName(long jarg1, MarkerPlacer jarg1_, String jarg2);
  public final static native String MarkerPlacer_getOutputMuscleFileName(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setOutputMuscleFileName(long jarg1, MarkerPlacer jarg1_, String jarg2);
  public final static native String MarkerPlacer_getOutputMarkerFileName(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setOutputMarkerFileName(long jarg1, MarkerPlacer jarg1_, String jarg2);
  public final static native String MarkerPlacer_getOutputMotionFileName(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setOutputMotionFileName(long jarg1, MarkerPlacer jarg1_, String jarg2);
  public final static native void MarkerPlacer_peteTest(long jarg1, MarkerPlacer jarg1_);
  public final static native long new_IKTrial__SWIG_0();
  public final static native long new_IKTrial__SWIG_1(long jarg1, IKTrial jarg1_);
  public final static native void delete_IKTrial(long jarg1);
  public final static native long IKTrial_copy(long jarg1, IKTrial jarg1_);
  public final static native void IKTrial_copyData(long jarg1, IKTrial jarg1_, long jarg2, IKTrial jarg2_);
  public final static native double IKTrial_getStartTime(long jarg1, IKTrial jarg1_);
  public final static native double IKTrial_getEndTime(long jarg1, IKTrial jarg1_);
  public final static native double IKTrial_getKinematicsSmoothing(long jarg1, IKTrial jarg1_);
  public final static native double IKTrial_getGroundReactionSmoothing(long jarg1, IKTrial jarg1_);
  public final static native boolean IKTrial_getIncludeMarkers(long jarg1, IKTrial jarg1_);
  public final static native void IKTrial_setStartTime(long jarg1, IKTrial jarg1_, double jarg2);
  public final static native void IKTrial_setEndTime(long jarg1, IKTrial jarg1_, double jarg2);
  public final static native void IKTrial_setIncludeMarkers(long jarg1, IKTrial jarg1_, boolean jarg2);
  public final static native void IKTrial_findFrameRange(long jarg1, IKTrial jarg1_, long jarg2, Storage jarg2_, long jarg3, long jarg4);
  public final static native boolean IKTrial_processTrial(long jarg1, IKTrial jarg1_, long jarg2, Model jarg2_, long jarg3, IKTaskSet jarg3_);
  public final static native boolean IKTrial_processTrialCommon(long jarg1, IKTrial jarg1_, long jarg2, Model jarg2_, long jarg3, IKTaskSet jarg3_, long jarg4, MarkerData jarg4_, long jarg5, Storage jarg5_);
  public final static native String IKTrial_getMarkerDataFilename(long jarg1, IKTrial jarg1_);
  public final static native String IKTrial_getOutputMotionFilename(long jarg1, IKTrial jarg1_);
  public final static native void IKTrial_setOutputMotionFilename(long jarg1, IKTrial jarg1_, String jarg2);
  public final static native String IKTrial_getCoordinateFileName(long jarg1, IKTrial jarg1_);
  public final static native void IKTrial_setCoordinateFileName(long jarg1, IKTrial jarg1_, String jarg2);
  public final static native void IKTrial_setOptimizerAlgorithm(long jarg1, IKTrial jarg1_, String jarg2);
  public final static native String IKTrial_getOptimizerAlgorithm(long jarg1, IKTrial jarg1_);
  public final static native void IKTrial_peteTest(long jarg1, IKTrial jarg1_);
  public final static native void delete_SetIKTrial(long jarg1);
  public final static native long new_SetIKTrial__SWIG_0();
  public final static native long new_SetIKTrial__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_SetIKTrial__SWIG_2(String jarg1);
  public final static native long new_SetIKTrial__SWIG_3(long jarg1, SetIKTrial jarg1_);
  public final static native long SetIKTrial_copy(long jarg1, SetIKTrial jarg1_);
  public final static native void SetIKTrial_setup(long jarg1, SetIKTrial jarg1_);
  public final static native void SetIKTrial_setMemoryOwner(long jarg1, SetIKTrial jarg1_, boolean jarg2);
  public final static native boolean SetIKTrial_getMemoryOwner(long jarg1, SetIKTrial jarg1_);
  public final static native boolean SetIKTrial_computeNewCapacity(long jarg1, SetIKTrial jarg1_, int jarg2, long jarg3);
  public final static native boolean SetIKTrial_ensureCapacity(long jarg1, SetIKTrial jarg1_, int jarg2);
  public final static native void SetIKTrial_trim(long jarg1, SetIKTrial jarg1_);
  public final static native int SetIKTrial_getCapacity(long jarg1, SetIKTrial jarg1_);
  public final static native void SetIKTrial_setCapacityIncrement(long jarg1, SetIKTrial jarg1_, int jarg2);
  public final static native int SetIKTrial_getCapacityIncrement(long jarg1, SetIKTrial jarg1_);
  public final static native boolean SetIKTrial_setSize(long jarg1, SetIKTrial jarg1_, int jarg2);
  public final static native int SetIKTrial_getSize(long jarg1, SetIKTrial jarg1_);
  public final static native int SetIKTrial_getIndex__SWIG_0(long jarg1, SetIKTrial jarg1_, long jarg2, IKTrial jarg2_, int jarg3);
  public final static native int SetIKTrial_getIndex__SWIG_1(long jarg1, SetIKTrial jarg1_, long jarg2, IKTrial jarg2_);
  public final static native int SetIKTrial_getIndex__SWIG_2(long jarg1, SetIKTrial jarg1_, String jarg2, int jarg3);
  public final static native int SetIKTrial_getIndex__SWIG_3(long jarg1, SetIKTrial jarg1_, String jarg2);
  public final static native void SetIKTrial_getGroupNamesContaining(long jarg1, SetIKTrial jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetIKTrial_append__SWIG_0(long jarg1, SetIKTrial jarg1_, long jarg2, IKTrial jarg2_);
  public final static native boolean SetIKTrial_append__SWIG_1(long jarg1, SetIKTrial jarg1_, long jarg2);
  public final static native boolean SetIKTrial_insert(long jarg1, SetIKTrial jarg1_, int jarg2, long jarg3, IKTrial jarg3_);
  public final static native boolean SetIKTrial_remove__SWIG_0(long jarg1, SetIKTrial jarg1_, int jarg2);
  public final static native boolean SetIKTrial_remove__SWIG_1(long jarg1, SetIKTrial jarg1_, long jarg2, IKTrial jarg2_);
  public final static native void SetIKTrial_clearAndDestroy(long jarg1, SetIKTrial jarg1_);
  public final static native boolean SetIKTrial_set(long jarg1, SetIKTrial jarg1_, int jarg2, long jarg3, IKTrial jarg3_);
  public final static native long SetIKTrial_get__SWIG_0(long jarg1, SetIKTrial jarg1_, int jarg2);
  public final static native long SetIKTrial_get__SWIG_1(long jarg1, SetIKTrial jarg1_, String jarg2);
  public final static native void SetIKTrial_getNames(long jarg1, SetIKTrial jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetIKTrial_getLast(long jarg1, SetIKTrial jarg1_);
  public final static native int SetIKTrial_searchBinary__SWIG_0(long jarg1, SetIKTrial jarg1_, long jarg2, IKTrial jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int SetIKTrial_searchBinary__SWIG_1(long jarg1, SetIKTrial jarg1_, long jarg2, IKTrial jarg2_, boolean jarg3, int jarg4);
  public final static native int SetIKTrial_searchBinary__SWIG_2(long jarg1, SetIKTrial jarg1_, long jarg2, IKTrial jarg2_, boolean jarg3);
  public final static native int SetIKTrial_searchBinary__SWIG_3(long jarg1, SetIKTrial jarg1_, long jarg2, IKTrial jarg2_);
  public final static native int SetIKTrial_getNumGroups(long jarg1, SetIKTrial jarg1_);
  public final static native void SetIKTrial_addGroup(long jarg1, SetIKTrial jarg1_, String jarg2);
  public final static native void SetIKTrial_removeGroup(long jarg1, SetIKTrial jarg1_, String jarg2);
  public final static native void SetIKTrial_renameGroup(long jarg1, SetIKTrial jarg1_, String jarg2, String jarg3);
  public final static native void SetIKTrial_addObjectToGroup(long jarg1, SetIKTrial jarg1_, String jarg2, String jarg3);
  public final static native void SetIKTrial_getGroupNames(long jarg1, SetIKTrial jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetIKTrial_getGroup__SWIG_0(long jarg1, SetIKTrial jarg1_, String jarg2);
  public final static native long SetIKTrial_getGroup__SWIG_1(long jarg1, SetIKTrial jarg1_, int jarg2);
  public final static native long new_IKTrialSet__SWIG_0();
  public final static native long new_IKTrialSet__SWIG_1(long jarg1, IKTrialSet jarg1_);
  public final static native void delete_IKTrialSet(long jarg1);
  public final static native long new_SimmFileWriter__SWIG_0();
  public final static native long new_SimmFileWriter__SWIG_1(long jarg1, Model jarg1_);
  public final static native void delete_SimmFileWriter(long jarg1);
  public final static native boolean SimmFileWriter_writeJointFile(long jarg1, SimmFileWriter jarg1_, String jarg2);
  public final static native boolean SimmFileWriter_writeMuscleFile(long jarg1, SimmFileWriter jarg1_, String jarg2);
  public final static native long IKTask_copy(long jarg1, IKTask jarg1_);
  public final static native double IKTask_getWeight(long jarg1, IKTask jarg1_);
  public final static native void delete_IKTask(long jarg1);
  public final static native void delete_SetIKTasks(long jarg1);
  public final static native long new_SetIKTasks__SWIG_0();
  public final static native long new_SetIKTasks__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_SetIKTasks__SWIG_2(String jarg1);
  public final static native long new_SetIKTasks__SWIG_3(long jarg1, SetIKTasks jarg1_);
  public final static native long SetIKTasks_copy(long jarg1, SetIKTasks jarg1_);
  public final static native void SetIKTasks_setup(long jarg1, SetIKTasks jarg1_);
  public final static native void SetIKTasks_setMemoryOwner(long jarg1, SetIKTasks jarg1_, boolean jarg2);
  public final static native boolean SetIKTasks_getMemoryOwner(long jarg1, SetIKTasks jarg1_);
  public final static native boolean SetIKTasks_computeNewCapacity(long jarg1, SetIKTasks jarg1_, int jarg2, long jarg3);
  public final static native boolean SetIKTasks_ensureCapacity(long jarg1, SetIKTasks jarg1_, int jarg2);
  public final static native void SetIKTasks_trim(long jarg1, SetIKTasks jarg1_);
  public final static native int SetIKTasks_getCapacity(long jarg1, SetIKTasks jarg1_);
  public final static native void SetIKTasks_setCapacityIncrement(long jarg1, SetIKTasks jarg1_, int jarg2);
  public final static native int SetIKTasks_getCapacityIncrement(long jarg1, SetIKTasks jarg1_);
  public final static native boolean SetIKTasks_setSize(long jarg1, SetIKTasks jarg1_, int jarg2);
  public final static native int SetIKTasks_getSize(long jarg1, SetIKTasks jarg1_);
  public final static native int SetIKTasks_getIndex__SWIG_0(long jarg1, SetIKTasks jarg1_, long jarg2, IKTask jarg2_, int jarg3);
  public final static native int SetIKTasks_getIndex__SWIG_1(long jarg1, SetIKTasks jarg1_, long jarg2, IKTask jarg2_);
  public final static native int SetIKTasks_getIndex__SWIG_2(long jarg1, SetIKTasks jarg1_, String jarg2, int jarg3);
  public final static native int SetIKTasks_getIndex__SWIG_3(long jarg1, SetIKTasks jarg1_, String jarg2);
  public final static native void SetIKTasks_getGroupNamesContaining(long jarg1, SetIKTasks jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetIKTasks_append__SWIG_0(long jarg1, SetIKTasks jarg1_, long jarg2, IKTask jarg2_);
  public final static native boolean SetIKTasks_append__SWIG_1(long jarg1, SetIKTasks jarg1_, long jarg2);
  public final static native boolean SetIKTasks_insert(long jarg1, SetIKTasks jarg1_, int jarg2, long jarg3, IKTask jarg3_);
  public final static native boolean SetIKTasks_remove__SWIG_0(long jarg1, SetIKTasks jarg1_, int jarg2);
  public final static native boolean SetIKTasks_remove__SWIG_1(long jarg1, SetIKTasks jarg1_, long jarg2, IKTask jarg2_);
  public final static native void SetIKTasks_clearAndDestroy(long jarg1, SetIKTasks jarg1_);
  public final static native boolean SetIKTasks_set(long jarg1, SetIKTasks jarg1_, int jarg2, long jarg3, IKTask jarg3_);
  public final static native long SetIKTasks_get__SWIG_0(long jarg1, SetIKTasks jarg1_, int jarg2);
  public final static native long SetIKTasks_get__SWIG_1(long jarg1, SetIKTasks jarg1_, String jarg2);
  public final static native void SetIKTasks_getNames(long jarg1, SetIKTasks jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetIKTasks_getLast(long jarg1, SetIKTasks jarg1_);
  public final static native int SetIKTasks_searchBinary__SWIG_0(long jarg1, SetIKTasks jarg1_, long jarg2, IKTask jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int SetIKTasks_searchBinary__SWIG_1(long jarg1, SetIKTasks jarg1_, long jarg2, IKTask jarg2_, boolean jarg3, int jarg4);
  public final static native int SetIKTasks_searchBinary__SWIG_2(long jarg1, SetIKTasks jarg1_, long jarg2, IKTask jarg2_, boolean jarg3);
  public final static native int SetIKTasks_searchBinary__SWIG_3(long jarg1, SetIKTasks jarg1_, long jarg2, IKTask jarg2_);
  public final static native int SetIKTasks_getNumGroups(long jarg1, SetIKTasks jarg1_);
  public final static native void SetIKTasks_addGroup(long jarg1, SetIKTasks jarg1_, String jarg2);
  public final static native void SetIKTasks_removeGroup(long jarg1, SetIKTasks jarg1_, String jarg2);
  public final static native void SetIKTasks_renameGroup(long jarg1, SetIKTasks jarg1_, String jarg2, String jarg3);
  public final static native void SetIKTasks_addObjectToGroup(long jarg1, SetIKTasks jarg1_, String jarg2, String jarg3);
  public final static native void SetIKTasks_getGroupNames(long jarg1, SetIKTasks jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetIKTasks_getGroup__SWIG_0(long jarg1, SetIKTasks jarg1_, String jarg2);
  public final static native long SetIKTasks_getGroup__SWIG_1(long jarg1, SetIKTasks jarg1_, int jarg2);
  public final static native long new_IKTaskSet__SWIG_0();
  public final static native long new_IKTaskSet__SWIG_1(long jarg1, IKTaskSet jarg1_);
  public final static native long new_IKTaskSet__SWIG_2(String jarg1);
  public final static native void delete_IKTaskSet(long jarg1);
  public final static native long new_MarkerData__SWIG_0();
  public final static native long new_MarkerData__SWIG_1(String jarg1);
  public final static native void delete_MarkerData(long jarg1);
  public final static native void MarkerData_findFrameRange(long jarg1, MarkerData jarg1_, double jarg2, double jarg3, long jarg4, long jarg5);
  public final static native void MarkerData_averageFrames__SWIG_0(long jarg1, MarkerData jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void MarkerData_averageFrames__SWIG_1(long jarg1, MarkerData jarg1_, double jarg2, double jarg3);
  public final static native void MarkerData_averageFrames__SWIG_2(long jarg1, MarkerData jarg1_, double jarg2);
  public final static native void MarkerData_averageFrames__SWIG_3(long jarg1, MarkerData jarg1_);
  public final static native String MarkerData_getFileName(long jarg1, MarkerData jarg1_);
  public final static native void MarkerData_makeRdStorage(long jarg1, MarkerData jarg1_, long jarg2, Storage jarg2_);
  public final static native long MarkerData_getFrame(long jarg1, MarkerData jarg1_, int jarg2);
  public final static native int MarkerData_getMarkerIndex(long jarg1, MarkerData jarg1_, String jarg2);
  public final static native long MarkerData_getUnits(long jarg1, MarkerData jarg1_);
  public final static native void MarkerData_convertToUnits(long jarg1, MarkerData jarg1_, long jarg2, Units jarg2_);
  public final static native long MarkerData_getMarkerNames(long jarg1, MarkerData jarg1_);
  public final static native int MarkerData_getNumFrames(long jarg1, MarkerData jarg1_);
  public final static native double MarkerData_getStartFrameTime(long jarg1, MarkerData jarg1_);
  public final static native double MarkerData_getLastFrameTime(long jarg1, MarkerData jarg1_);
  public final static native void MarkerData_peteTest(long jarg1, MarkerData jarg1_);
  public final static native long new_IKSolverInterface(long jarg1);
  public final static native void delete_IKSolverInterface(long jarg1);
  public final static native void IKSolverInterface_solveFrames(long jarg1, IKSolverInterface jarg1_, long jarg2, IKTrial jarg2_, long jarg3, Storage jarg3_, long jarg4, Storage jarg4_);
  public final static native void delete_IKTool(long jarg1);
  public final static native long new_IKTool__SWIG_0();
  public final static native long new_IKTool__SWIG_1(String jarg1, long jarg2, Model jarg2_);
  public final static native long new_IKTool__SWIG_2(String jarg1);
  public final static native long new_IKTool__SWIG_3(long jarg1, IKTool jarg1_);
  public final static native long IKTool_copy(long jarg1, IKTool jarg1_);
  public final static native void IKTool_registerTypes();
  public final static native long IKTool_getIKTrialSet(long jarg1, IKTool jarg1_);
  public final static native void IKTool_run(long jarg1, IKTool jarg1_);
  public final static native long new_Measurement__SWIG_0();
  public final static native long new_Measurement__SWIG_1(long jarg1, Measurement jarg1_);
  public final static native void delete_Measurement(long jarg1);
  public final static native long Measurement_copy(long jarg1, Measurement jarg1_);
  public final static native void Measurement_copyData(long jarg1, Measurement jarg1_, long jarg2, Measurement jarg2_);
  public final static native int Measurement_getNumMarkerPairs(long jarg1, Measurement jarg1_);
  public final static native long Measurement_getMarkerPair(long jarg1, Measurement jarg1_, int jarg2);
  public final static native boolean Measurement_getApply(long jarg1, Measurement jarg1_);
  public final static native void Measurement_applyScaleFactor(long jarg1, Measurement jarg1_, double jarg2, long jarg3, ScaleSet jarg3_);
  public final static native void Measurement_registerTypes();
  public final static native void Measurement_peteTest(long jarg1, Measurement jarg1_);
  public final static native void delete_SetMeasurements(long jarg1);
  public final static native long new_SetMeasurements__SWIG_0();
  public final static native long new_SetMeasurements__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_SetMeasurements__SWIG_2(String jarg1);
  public final static native long new_SetMeasurements__SWIG_3(long jarg1, SetMeasurements jarg1_);
  public final static native long SetMeasurements_copy(long jarg1, SetMeasurements jarg1_);
  public final static native void SetMeasurements_setup(long jarg1, SetMeasurements jarg1_);
  public final static native void SetMeasurements_setMemoryOwner(long jarg1, SetMeasurements jarg1_, boolean jarg2);
  public final static native boolean SetMeasurements_getMemoryOwner(long jarg1, SetMeasurements jarg1_);
  public final static native boolean SetMeasurements_computeNewCapacity(long jarg1, SetMeasurements jarg1_, int jarg2, long jarg3);
  public final static native boolean SetMeasurements_ensureCapacity(long jarg1, SetMeasurements jarg1_, int jarg2);
  public final static native void SetMeasurements_trim(long jarg1, SetMeasurements jarg1_);
  public final static native int SetMeasurements_getCapacity(long jarg1, SetMeasurements jarg1_);
  public final static native void SetMeasurements_setCapacityIncrement(long jarg1, SetMeasurements jarg1_, int jarg2);
  public final static native int SetMeasurements_getCapacityIncrement(long jarg1, SetMeasurements jarg1_);
  public final static native boolean SetMeasurements_setSize(long jarg1, SetMeasurements jarg1_, int jarg2);
  public final static native int SetMeasurements_getSize(long jarg1, SetMeasurements jarg1_);
  public final static native int SetMeasurements_getIndex__SWIG_0(long jarg1, SetMeasurements jarg1_, long jarg2, Measurement jarg2_, int jarg3);
  public final static native int SetMeasurements_getIndex__SWIG_1(long jarg1, SetMeasurements jarg1_, long jarg2, Measurement jarg2_);
  public final static native int SetMeasurements_getIndex__SWIG_2(long jarg1, SetMeasurements jarg1_, String jarg2, int jarg3);
  public final static native int SetMeasurements_getIndex__SWIG_3(long jarg1, SetMeasurements jarg1_, String jarg2);
  public final static native void SetMeasurements_getGroupNamesContaining(long jarg1, SetMeasurements jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetMeasurements_append__SWIG_0(long jarg1, SetMeasurements jarg1_, long jarg2, Measurement jarg2_);
  public final static native boolean SetMeasurements_append__SWIG_1(long jarg1, SetMeasurements jarg1_, long jarg2);
  public final static native boolean SetMeasurements_insert(long jarg1, SetMeasurements jarg1_, int jarg2, long jarg3, Measurement jarg3_);
  public final static native boolean SetMeasurements_remove__SWIG_0(long jarg1, SetMeasurements jarg1_, int jarg2);
  public final static native boolean SetMeasurements_remove__SWIG_1(long jarg1, SetMeasurements jarg1_, long jarg2, Measurement jarg2_);
  public final static native void SetMeasurements_clearAndDestroy(long jarg1, SetMeasurements jarg1_);
  public final static native boolean SetMeasurements_set(long jarg1, SetMeasurements jarg1_, int jarg2, long jarg3, Measurement jarg3_);
  public final static native long SetMeasurements_get__SWIG_0(long jarg1, SetMeasurements jarg1_, int jarg2);
  public final static native long SetMeasurements_get__SWIG_1(long jarg1, SetMeasurements jarg1_, String jarg2);
  public final static native void SetMeasurements_getNames(long jarg1, SetMeasurements jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetMeasurements_getLast(long jarg1, SetMeasurements jarg1_);
  public final static native int SetMeasurements_searchBinary__SWIG_0(long jarg1, SetMeasurements jarg1_, long jarg2, Measurement jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native int SetMeasurements_searchBinary__SWIG_1(long jarg1, SetMeasurements jarg1_, long jarg2, Measurement jarg2_, boolean jarg3, int jarg4);
  public final static native int SetMeasurements_searchBinary__SWIG_2(long jarg1, SetMeasurements jarg1_, long jarg2, Measurement jarg2_, boolean jarg3);
  public final static native int SetMeasurements_searchBinary__SWIG_3(long jarg1, SetMeasurements jarg1_, long jarg2, Measurement jarg2_);
  public final static native int SetMeasurements_getNumGroups(long jarg1, SetMeasurements jarg1_);
  public final static native void SetMeasurements_addGroup(long jarg1, SetMeasurements jarg1_, String jarg2);
  public final static native void SetMeasurements_removeGroup(long jarg1, SetMeasurements jarg1_, String jarg2);
  public final static native void SetMeasurements_renameGroup(long jarg1, SetMeasurements jarg1_, String jarg2, String jarg3);
  public final static native void SetMeasurements_addObjectToGroup(long jarg1, SetMeasurements jarg1_, String jarg2, String jarg3);
  public final static native void SetMeasurements_getGroupNames(long jarg1, SetMeasurements jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetMeasurements_getGroup__SWIG_0(long jarg1, SetMeasurements jarg1_, String jarg2);
  public final static native long SetMeasurements_getGroup__SWIG_1(long jarg1, SetMeasurements jarg1_, int jarg2);
  public final static native long new_MeasurementSet__SWIG_0();
  public final static native long new_MeasurementSet__SWIG_1(long jarg1, MeasurementSet jarg1_);
  public final static native void delete_MeasurementSet(long jarg1);
  public final static native long new_IKSolverImpl(long jarg1);
  public final static native void delete_IKSolverImpl(long jarg1);
  public final static native void IKSolverImpl_solveFrames(long jarg1, IKSolverImpl jarg1_, long jarg2, IKTrial jarg2_, long jarg3, Storage jarg3_, long jarg4, Storage jarg4_);
  public final static native void delete_CMCTool(long jarg1);
  public final static native long new_CMCTool__SWIG_0();
  public final static native long new_CMCTool__SWIG_1(String jarg1);
  public final static native long new_CMCTool__SWIG_2(long jarg1, CMCTool jarg1_);
  public final static native long CMCTool_copy(long jarg1, CMCTool jarg1_);
  public final static native void CMCTool_run(long jarg1, CMCTool jarg1_);
  public final static native long new_ScaleTool__SWIG_0();
  public final static native long new_ScaleTool__SWIG_1(String jarg1);
  public final static native long new_ScaleTool__SWIG_2(long jarg1, ScaleTool jarg1_);
  public final static native void delete_ScaleTool(long jarg1);
  public final static native long ScaleTool_copy(long jarg1, ScaleTool jarg1_);
  public final static native void ScaleTool_copyData(long jarg1, ScaleTool jarg1_, long jarg2, ScaleTool jarg2_);
  public final static native boolean ScaleTool_processModel(long jarg1, ScaleTool jarg1_);
  public final static native long ScaleTool_createModel(long jarg1, ScaleTool jarg1_);
  public final static native long ScaleTool_getGenericModelMaker(long jarg1, ScaleTool jarg1_);
  public final static native long ScaleTool_getModelScaler(long jarg1, ScaleTool jarg1_);
  public final static native long ScaleTool_getMarkerPlacer(long jarg1, ScaleTool jarg1_);
  public final static native double ScaleTool_getMass(long jarg1, ScaleTool jarg1_);
  public final static native boolean ScaleTool_isDefaultGenericModelMaker(long jarg1, ScaleTool jarg1_);
  public final static native boolean ScaleTool_isDefaultModelScaler(long jarg1, ScaleTool jarg1_);
  public final static native boolean ScaleTool_isDefaultMarkerPlacer(long jarg1, ScaleTool jarg1_);
  public final static native void ScaleTool_registerTypes();
  public final static native double ScaleTool_getSubjectMass(long jarg1, ScaleTool jarg1_);
  public final static native double ScaleTool_getSubjectAge(long jarg1, ScaleTool jarg1_);
  public final static native double ScaleTool_getSubjectHeight(long jarg1, ScaleTool jarg1_);
  public final static native String ScaleTool_getPathToSubject(long jarg1, ScaleTool jarg1_);
  public final static native void ScaleTool_setPathToSubject(long jarg1, ScaleTool jarg1_, String jarg2);
  public final static native void ScaleTool_peteTest(long jarg1, ScaleTool jarg1_);
  public final static native void delete_AnalyzeTool(long jarg1);
  public final static native long new_AnalyzeTool__SWIG_0();
  public final static native long new_AnalyzeTool__SWIG_1(String jarg1);
  public final static native long new_AnalyzeTool__SWIG_2(long jarg1, AnalyzeTool jarg1_);
  public final static native long new_AnalyzeTool__SWIG_3(long jarg1, Model jarg1_);
  public final static native long AnalyzeTool_copy(long jarg1, AnalyzeTool jarg1_);
  public final static native void AnalyzeTool_setControlSet(long jarg1, AnalyzeTool jarg1_, long jarg2, ControlSet jarg2_);
  public final static native long AnalyzeTool_getControlSet(long jarg1, AnalyzeTool jarg1_);
  public final static native void AnalyzeTool_setStatesStorage(long jarg1, AnalyzeTool jarg1_, long jarg2, Storage jarg2_);
  public final static native void AnalyzeTool_setStatesStorageFromCoordinatesAndSpeeds(long jarg1, AnalyzeTool jarg1_, long jarg2, Storage jarg2_, long jarg3, Storage jarg3_);
  public final static native long AnalyzeTool_getStatesStorage(long jarg1, AnalyzeTool jarg1_);
  public final static native void AnalyzeTool_setPseudoStatesStorage(long jarg1, AnalyzeTool jarg1_, long jarg2, Storage jarg2_);
  public final static native long AnalyzeTool_getPseudoStatesStorage(long jarg1, AnalyzeTool jarg1_);
  public final static native void AnalyzeTool_loadControlsStatesPseudoStatesExternalLoadsFromFiles(long jarg1, AnalyzeTool jarg1_);
  public final static native void AnalyzeTool_verifyControlsStatesPseudoStates(long jarg1, AnalyzeTool jarg1_);
  public final static native double AnalyzeTool_getControlsStatesPseudoStates(long jarg1, AnalyzeTool jarg1_, int jarg2, long jarg3, ArrayDouble jarg3_, long jarg4, ArrayDouble jarg4_, long jarg5, ArrayDouble jarg5_);
  public final static native void AnalyzeTool_run(long jarg1, AnalyzeTool jarg1_);
  public final static native long SWIGObjectGroupUpcast(long jarg1);
  public final static native long SWIGMaterialUpcast(long jarg1);
  public final static native long SWIGVisiblePropertiesUpcast(long jarg1);
  public final static native long SWIGLineGeometryUpcast(long jarg1);
  public final static native long SWIGArrowGeometryUpcast(long jarg1);
  public final static native long SWIGAnalyticGeometryUpcast(long jarg1);
  public final static native long SWIGAnalyticSphereUpcast(long jarg1);
  public final static native long SWIGAnalyticEllipsoidUpcast(long jarg1);
  public final static native long SWIGAnalyticCylinderUpcast(long jarg1);
  public final static native long SWIGAnalyticTorusUpcast(long jarg1);
  public final static native long SWIGPolyhedralGeometryUpcast(long jarg1);
  public final static native long SWIGVisibleObjectUpcast(long jarg1);
  public final static native long SWIGSetMaterialsUpcast(long jarg1);
  public final static native long SWIGMaterialSetUpcast(long jarg1);
  public final static native long SWIGStorageUpcast(long jarg1);
  public final static native long SWIGAbstractActuatorUpcast(long jarg1);
  public final static native long SWIGSetActuatorsUpcast(long jarg1);
  public final static native long SWIGActuatorSetUpcast(long jarg1);
  public final static native long SWIGContactForceSetUpcast(long jarg1);
  public final static native long SWIGCallbackUpcast(long jarg1);
  public final static native long SWIGSetCallbackUpcast(long jarg1);
  public final static native long SWIGCallbackSetUpcast(long jarg1);
  public final static native long SWIGIntegCallbackUpcast(long jarg1);
  public final static native long SWIGAnalysisUpcast(long jarg1);
  public final static native long SWIGSetAnalysisUpcast(long jarg1);
  public final static native long SWIGAnalysisSetUpcast(long jarg1);
  public final static native long SWIGModelUpcast(long jarg1);
  public final static native long SWIGControlUpcast(long jarg1);
  public final static native long SWIGSetControlsUpcast(long jarg1);
  public final static native long SWIGControlSetUpcast(long jarg1);
  public final static native long SWIGControlConstantUpcast(long jarg1);
  public final static native long SWIGControlLinearUpcast(long jarg1);
  public final static native long SWIGIntegrandUpcast(long jarg1);
  public final static native long SWIGModelIntegrandUpcast(long jarg1);
  public final static native long SWIGIntegRKFUpcast(long jarg1);
  public final static native long SWIGAbstractToolUpcast(long jarg1);
  public final static native long SWIGForwardToolUpcast(long jarg1);
  public final static native long SWIGPerturbationToolUpcast(long jarg1);
  public final static native long SWIGSimtkAnimationCallbackUpcast(long jarg1);
  public final static native long SWIGKinematicsUpcast(long jarg1);
  public final static native long SWIGActuationUpcast(long jarg1);
  public final static native long SWIGIndAccUpcast(long jarg1);
  public final static native long SWIGGeneralizedForcesUpcast(long jarg1);
  public final static native long SWIGMuscleAnalysisUpcast(long jarg1);
  public final static native long SWIGMomentArmAnalysisUpcast(long jarg1);
  public final static native long SWIGAbstractMarkerUpcast(long jarg1);
  public final static native long SWIGSetMarkersUpcast(long jarg1);
  public final static native long SWIGMarkerSetUpcast(long jarg1);
  public final static native long SWIGRangeUpcast(long jarg1);
  public final static native long SWIGScaleUpcast(long jarg1);
  public final static native long SWIGSetScalesUpcast(long jarg1);
  public final static native long SWIGScaleSetUpcast(long jarg1);
  public final static native long SWIGAbstractWrapObjectUpcast(long jarg1);
  public final static native long SWIGWrapSphereUpcast(long jarg1);
  public final static native long SWIGWrapCylinderUpcast(long jarg1);
  public final static native long SWIGWrapTorusUpcast(long jarg1);
  public final static native long SWIGWrapEllipsoidUpcast(long jarg1);
  public final static native long SWIGSetWrapObjectUpcast(long jarg1);
  public final static native long SWIGWrapObjectSetUpcast(long jarg1);
  public final static native long SWIGMuscleWrapUpcast(long jarg1);
  public final static native long SWIGSetMuscleWrapUpcast(long jarg1);
  public final static native long SWIGMuscleWrapSetUpcast(long jarg1);
  public final static native long SWIGAbstractBodyUpcast(long jarg1);
  public final static native long SWIGSimmBodyUpcast(long jarg1);
  public final static native long SWIGSetBodiesUpcast(long jarg1);
  public final static native long SWIGBodySetUpcast(long jarg1);
  public final static native long SWIGFunctionUpcast(long jarg1);
  public final static native long SWIGConstantUpcast(long jarg1);
  public final static native long SWIGAbstractDofUpcast(long jarg1);
  public final static native long SWIGAbstractCoordinateUpcast(long jarg1);
  public final static native long SWIGSimmCoordinateUpcast(long jarg1);
  public final static native long SWIGSetCoordinatesUpcast(long jarg1);
  public final static native long SWIGCoordinateSetUpcast(long jarg1);
  public final static native long SWIGAbstractJointUpcast(long jarg1);
  public final static native long SWIGSimmJointUpcast(long jarg1);
  public final static native long SWIGSetJointsUpcast(long jarg1);
  public final static native long SWIGJointSetUpcast(long jarg1);
  public final static native long SWIGAbstractDynamicsEngineUpcast(long jarg1);
  public final static native long SWIGSimmKinematicsEngineUpcast(long jarg1);
  public final static native long SWIGMusclePointUpcast(long jarg1);
  public final static native long SWIGMuscleWrapPointUpcast(long jarg1);
  public final static native long SWIGMuscleViaPointUpcast(long jarg1);
  public final static native long SWIGSetMusclePointUpcast(long jarg1);
  public final static native long SWIGMusclePointSetUpcast(long jarg1);
  public final static native long SWIGAbstractMuscleUpcast(long jarg1);
  public final static native long SWIGForceUpcast(long jarg1);
  public final static native long SWIGTorqueUpcast(long jarg1);
  public final static native long SWIGGeneralizedForceUpcast(long jarg1);
  public final static native long SWIGSimmDarrylMuscleUpcast(long jarg1);
  public final static native long SWIGSimmZajacHillUpcast(long jarg1);
  public final static native long SWIGSimmPointUpcast(long jarg1);
  public final static native long SWIGSimmRotationDofUpcast(long jarg1);
  public final static native long SWIGSimmTranslationDofUpcast(long jarg1);
  public final static native long SWIGGenericModelMakerUpcast(long jarg1);
  public final static native long SWIGModelScalerUpcast(long jarg1);
  public final static native long SWIGMarkerPlacerUpcast(long jarg1);
  public final static native long SWIGIKTrialUpcast(long jarg1);
  public final static native long SWIGSetIKTrialUpcast(long jarg1);
  public final static native long SWIGIKTrialSetUpcast(long jarg1);
  public final static native long SWIGIKTaskUpcast(long jarg1);
  public final static native long SWIGSetIKTasksUpcast(long jarg1);
  public final static native long SWIGIKTaskSetUpcast(long jarg1);
  public final static native long SWIGMarkerDataUpcast(long jarg1);
  public final static native long SWIGIKToolUpcast(long jarg1);
  public final static native long SWIGMeasurementUpcast(long jarg1);
  public final static native long SWIGSetMeasurementsUpcast(long jarg1);
  public final static native long SWIGMeasurementSetUpcast(long jarg1);
  public final static native long SWIGIKSolverImplUpcast(long jarg1);
  public final static native long SWIGCMCToolUpcast(long jarg1);
  public final static native long SWIGScaleToolUpcast(long jarg1);
  public final static native long SWIGAnalyzeToolUpcast(long jarg1);

  public static long SwigDirector_SimtkAnimationCallback_copy(SimtkAnimationCallback self) {
    return OpenSimObject.getCPtr(self.copy());
  }
  public static long SwigDirector_SimtkAnimationCallback_copy__SWIG_1(SimtkAnimationCallback self, long aNode) {
    return OpenSimObject.getCPtr(self.copy(new SWIGTYPE_p_DOMElement(aNode, false)));
  }
  public static void SwigDirector_SimtkAnimationCallback_copy__SWIG_2(SimtkAnimationCallback self, long aObject) {
    self.copy(new OpenSimObject(aObject, false));
  }
  public static long SwigDirector_SimtkAnimationCallback_getDisplayer(SimtkAnimationCallback self) {
    return VisibleObject.getCPtr(self.getDisplayer());
  }
  public static boolean SwigDirector_SimtkAnimationCallback_isValidDefaultType(SimtkAnimationCallback self, long aObject) {
    return self.isValidDefaultType(new OpenSimObject(aObject, false));
  }
  public static void SwigDirector_SimtkAnimationCallback_updateFromXMLNode(SimtkAnimationCallback self) {
    self.updateFromXMLNode();
  }
  public static void SwigDirector_SimtkAnimationCallback_updateDefaultObjectsFromXMLNode(SimtkAnimationCallback self) {
    self.updateDefaultObjectsFromXMLNode();
  }
  public static void SwigDirector_SimtkAnimationCallback_updateXMLNode(SimtkAnimationCallback self, long aParent) {
    self.updateXMLNode(new SWIGTYPE_p_DOMElement(aParent, false));
  }
  public static void SwigDirector_SimtkAnimationCallback_updateDefaultObjectsXMLNode(SimtkAnimationCallback self, long aParent) {
    self.updateDefaultObjectsXMLNode(new SWIGTYPE_p_DOMElement(aParent, false));
  }
  public static void SwigDirector_SimtkAnimationCallback_generateXMLNode(SimtkAnimationCallback self, long aParent) {
    self.generateXMLNode(new SWIGTYPE_p_DOMElement(aParent, false));
  }
  public static void SwigDirector_SimtkAnimationCallback_update(SimtkAnimationCallback self, long aObject, long aEvent) {
    self.update(new OpenSimObject(aObject, false), new SWIGTYPE_p_Event(aEvent, false));
  }
  public static boolean SwigDirector_SimtkAnimationCallback_isA(SimtkAnimationCallback self, String type) {
    return self.isA(type);
  }
  public static void SwigDirector_SimtkAnimationCallback_setModel(SimtkAnimationCallback self, long arg0) {
    self.setModel(new Model(arg0, false));
  }
  public static int SwigDirector_SimtkAnimationCallback_begin__SWIG_0(SimtkAnimationCallback self, int aStep, double aDT, double aT, long aX, long aY, long aYP, long aDYDT, long aClientData) {
    return self.begin(aStep, aDT, aT, new SWIGTYPE_p_double(aX, false), new SWIGTYPE_p_double(aY, false), new SWIGTYPE_p_double(aYP, false), new SWIGTYPE_p_double(aDYDT, false), new SWIGTYPE_p_void(aClientData, false));
  }
  public static int SwigDirector_SimtkAnimationCallback_begin__SWIG_1(SimtkAnimationCallback self, int aStep, double aDT, double aT, long aX, long aY, long aYP, long aDYDT) {
    return self.begin(aStep, aDT, aT, new SWIGTYPE_p_double(aX, false), new SWIGTYPE_p_double(aY, false), new SWIGTYPE_p_double(aYP, false), new SWIGTYPE_p_double(aDYDT, false));
  }
  public static int SwigDirector_SimtkAnimationCallback_begin__SWIG_2(SimtkAnimationCallback self, int aStep, double aDT, double aT, long aX, long aY, long aYP) {
    return self.begin(aStep, aDT, aT, new SWIGTYPE_p_double(aX, false), new SWIGTYPE_p_double(aY, false), new SWIGTYPE_p_double(aYP, false));
  }
  public static int SwigDirector_SimtkAnimationCallback_begin__SWIG_3(SimtkAnimationCallback self, int aStep, double aDT, double aT, long aX, long aY) {
    return self.begin(aStep, aDT, aT, new SWIGTYPE_p_double(aX, false), new SWIGTYPE_p_double(aY, false));
  }
  public static int SwigDirector_SimtkAnimationCallback_step__SWIG_0(SimtkAnimationCallback self, long aXPrev, long aYPrev, long aYPPrev, int aStep, double aDT, double aT, long aX, long aY, long aYP, long aDYDT, long aClientData) {
    return self.step(new SWIGTYPE_p_double(aXPrev, false), new SWIGTYPE_p_double(aYPrev, false), new SWIGTYPE_p_double(aYPPrev, false), aStep, aDT, aT, new SWIGTYPE_p_double(aX, false), new SWIGTYPE_p_double(aY, false), new SWIGTYPE_p_double(aYP, false), new SWIGTYPE_p_double(aDYDT, false), new SWIGTYPE_p_void(aClientData, false));
  }
  public static int SwigDirector_SimtkAnimationCallback_step__SWIG_1(SimtkAnimationCallback self, long aXPrev, long aYPrev, long aYPPrev, int aStep, double aDT, double aT, long aX, long aY, long aYP, long aDYDT) {
    return self.step(new SWIGTYPE_p_double(aXPrev, false), new SWIGTYPE_p_double(aYPrev, false), new SWIGTYPE_p_double(aYPPrev, false), aStep, aDT, aT, new SWIGTYPE_p_double(aX, false), new SWIGTYPE_p_double(aY, false), new SWIGTYPE_p_double(aYP, false), new SWIGTYPE_p_double(aDYDT, false));
  }
  public static int SwigDirector_SimtkAnimationCallback_step__SWIG_2(SimtkAnimationCallback self, long aXPrev, long aYPrev, long aYPPrev, int aStep, double aDT, double aT, long aX, long aY, long aYP) {
    return self.step(new SWIGTYPE_p_double(aXPrev, false), new SWIGTYPE_p_double(aYPrev, false), new SWIGTYPE_p_double(aYPPrev, false), aStep, aDT, aT, new SWIGTYPE_p_double(aX, false), new SWIGTYPE_p_double(aY, false), new SWIGTYPE_p_double(aYP, false));
  }
  public static int SwigDirector_SimtkAnimationCallback_step__SWIG_3(SimtkAnimationCallback self, long aXPrev, long aYPrev, long aYPPrev, int aStep, double aDT, double aT, long aX, long aY) {
    return self.step(new SWIGTYPE_p_double(aXPrev, false), new SWIGTYPE_p_double(aYPrev, false), new SWIGTYPE_p_double(aYPPrev, false), aStep, aDT, aT, new SWIGTYPE_p_double(aX, false), new SWIGTYPE_p_double(aY, false));
  }
  public static int SwigDirector_SimtkAnimationCallback_end__SWIG_0(SimtkAnimationCallback self, int aStep, double aDT, double aT, long aX, long aY, long aYP, long aDYDT, long aClientData) {
    return self.end(aStep, aDT, aT, new SWIGTYPE_p_double(aX, false), new SWIGTYPE_p_double(aY, false), new SWIGTYPE_p_double(aYP, false), new SWIGTYPE_p_double(aDYDT, false), new SWIGTYPE_p_void(aClientData, false));
  }
  public static int SwigDirector_SimtkAnimationCallback_end__SWIG_1(SimtkAnimationCallback self, int aStep, double aDT, double aT, long aX, long aY, long aYP, long aDYDT) {
    return self.end(aStep, aDT, aT, new SWIGTYPE_p_double(aX, false), new SWIGTYPE_p_double(aY, false), new SWIGTYPE_p_double(aYP, false), new SWIGTYPE_p_double(aDYDT, false));
  }
  public static int SwigDirector_SimtkAnimationCallback_end__SWIG_2(SimtkAnimationCallback self, int aStep, double aDT, double aT, long aX, long aY, long aYP) {
    return self.end(aStep, aDT, aT, new SWIGTYPE_p_double(aX, false), new SWIGTYPE_p_double(aY, false), new SWIGTYPE_p_double(aYP, false));
  }
  public static int SwigDirector_SimtkAnimationCallback_end__SWIG_3(SimtkAnimationCallback self, int aStep, double aDT, double aT, long aX, long aY) {
    return self.end(aStep, aDT, aT, new SWIGTYPE_p_double(aX, false), new SWIGTYPE_p_double(aY, false));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
