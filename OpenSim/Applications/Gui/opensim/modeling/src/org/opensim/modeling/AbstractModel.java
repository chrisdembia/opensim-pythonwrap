/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class AbstractModel extends OpenSimObject {
  private long swigCPtr;

  public AbstractModel(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGStorageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(AbstractModel obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_AbstractModel(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public AbstractModel() {
    this(opensimModelJNI.new_AbstractModel__SWIG_0(), true);
  }

  public AbstractModel(String aFileName) throws java.io.IOException {
    this(opensimModelJNI.new_AbstractModel__SWIG_1(aFileName), true);
  }

  public AbstractModel(AbstractModel aModel) {
    this(opensimModelJNI.new_AbstractModel__SWIG_2(AbstractModel.getCPtr(aModel)), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.AbstractModel_copy(swigCPtr);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void copyData(AbstractModel aModel) {
    opensimModelJNI.AbstractModel_copyData(swigCPtr, AbstractModel.getCPtr(aModel));
  }

  public void setupProperties() {
    opensimModelJNI.AbstractModel_setupProperties(swigCPtr);
  }

  public AbstractModel clone() {
    long cPtr = opensimModelJNI.AbstractModel_clone(swigCPtr);
    return (cPtr == 0) ? null : new AbstractModel(cPtr, false);
  }

  public SWIGTYPE_p_SimmMuscleGroup enterGroup(String aName) {
    long cPtr = opensimModelJNI.AbstractModel_enterGroup(swigCPtr, aName);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SimmMuscleGroup(cPtr, false);
  }

  public void setup() {
    opensimModelJNI.AbstractModel_setup(swigCPtr);
  }

  public boolean builtOK() {
    return opensimModelJNI.AbstractModel_builtOK(swigCPtr);
  }

  public String getInputFileName() {
    return opensimModelJNI.AbstractModel_getInputFileName(swigCPtr);
  }

  public SWIGTYPE_p_SimmUnits getLengthUnits() {
    return new SWIGTYPE_p_SimmUnits(opensimModelJNI.AbstractModel_getLengthUnits(swigCPtr), false);
  }

  public SWIGTYPE_p_SimmUnits getForceUnits() {
    return new SWIGTYPE_p_SimmUnits(opensimModelJNI.AbstractModel_getForceUnits(swigCPtr), false);
  }

  public void getGravity(double[] rGrav) {
    opensimModelJNI.AbstractModel_getGravity(swigCPtr, rGrav);
  }

  public boolean setGravity(double[] aGrav) {
    return opensimModelJNI.AbstractModel_setGravity(swigCPtr, aGrav);
  }

  public int getNumControls() {
    return opensimModelJNI.AbstractModel_getNumControls(swigCPtr);
  }

  public int getNumStates() {
    return opensimModelJNI.AbstractModel_getNumStates(swigCPtr);
  }

  public int getNumPseudoStates() {
    return opensimModelJNI.AbstractModel_getNumPseudoStates(swigCPtr);
  }

  public int getNumBodies() {
    return opensimModelJNI.AbstractModel_getNumBodies(swigCPtr);
  }

  public int getNumJoints() {
    return opensimModelJNI.AbstractModel_getNumJoints(swigCPtr);
  }

  public int getNumCoordinates() {
    return opensimModelJNI.AbstractModel_getNumCoordinates(swigCPtr);
  }

  public int getNumSpeeds() {
    return opensimModelJNI.AbstractModel_getNumSpeeds(swigCPtr);
  }

  public int getNumActuators() {
    return opensimModelJNI.AbstractModel_getNumActuators(swigCPtr);
  }

  public int getNumMuscleGroups() {
    return opensimModelJNI.AbstractModel_getNumMuscleGroups(swigCPtr);
  }

  public int getNumContacts() {
    return opensimModelJNI.AbstractModel_getNumContacts(swigCPtr);
  }

  public int getNumAnalyses() {
    return opensimModelJNI.AbstractModel_getNumAnalyses(swigCPtr);
  }

  public int getNumConfigurations() {
    return opensimModelJNI.AbstractModel_getNumConfigurations(swigCPtr);
  }

  public boolean hasDynamicsEngine() {
    return opensimModelJNI.AbstractModel_hasDynamicsEngine(swigCPtr);
  }

  public AbstractDynamicsEngine getDynamicsEngine() {
    return new AbstractDynamicsEngine(opensimModelJNI.AbstractModel_getDynamicsEngine(swigCPtr), false);
  }

  public void setDynamicsEngine(AbstractDynamicsEngine aEngine) {
    opensimModelJNI.AbstractModel_setDynamicsEngine(swigCPtr, AbstractDynamicsEngine.getCPtr(aEngine));
  }

  public void set(double aT, double[] aX, double[] aY) {
    opensimModelJNI.AbstractModel_set(swigCPtr, aT, aX, aY);
  }

  public void setTime(double aTime) {
    opensimModelJNI.AbstractModel_setTime(swigCPtr, aTime);
  }

  public double getTime() {
    return opensimModelJNI.AbstractModel_getTime(swigCPtr);
  }

  public void setTimeNormConstant(double aNormConst) {
    opensimModelJNI.AbstractModel_setTimeNormConstant(swigCPtr, aNormConst);
  }

  public double getTimeNormConstant() {
    return opensimModelJNI.AbstractModel_getTimeNormConstant(swigCPtr);
  }

  public void setControls(double[] aX) {
    opensimModelJNI.AbstractModel_setControls(swigCPtr, aX);
  }

  public void setControl(int aIndex, double aValue) {
    opensimModelJNI.AbstractModel_setControl__SWIG_0(swigCPtr, aIndex, aValue);
  }

  public void setControl(String aName, double aValue) {
    opensimModelJNI.AbstractModel_setControl__SWIG_1(swigCPtr, aName, aValue);
  }

  public void getControls(double[] rX) {
    opensimModelJNI.AbstractModel_getControls(swigCPtr, rX);
  }

  public double getControl(int aIndex) {
    return opensimModelJNI.AbstractModel_getControl__SWIG_0(swigCPtr, aIndex);
  }

  public double getControl(String aName) {
    return opensimModelJNI.AbstractModel_getControl__SWIG_1(swigCPtr, aName);
  }

  public String getControlName(int aIndex) {
    return opensimModelJNI.AbstractModel_getControlName(swigCPtr, aIndex);
  }

  public void getStateNames(ArrayStr rStateNames) {
    opensimModelJNI.AbstractModel_getStateNames(swigCPtr, ArrayStr.getCPtr(rStateNames));
  }

  public void setStates(double[] aY) {
    opensimModelJNI.AbstractModel_setStates(swigCPtr, aY);
  }

  public void getStates(double[] rY) {
    opensimModelJNI.AbstractModel_getStates(swigCPtr, rY);
  }

  public void setInitialStates(double[] aYI) {
    opensimModelJNI.AbstractModel_setInitialStates(swigCPtr, aYI);
  }

  public void getInitialStates(double[] rYI) {
    opensimModelJNI.AbstractModel_getInitialStates(swigCPtr, rYI);
  }

  public int getPseudoStateNames(ArrayStr rStateNames) {
    return opensimModelJNI.AbstractModel_getPseudoStateNames(swigCPtr, ArrayStr.getCPtr(rStateNames));
  }

  public void setPseudoStates(double[] aYP) {
    opensimModelJNI.AbstractModel_setPseudoStates(swigCPtr, aYP);
  }

  public void getPseudoStates(double[] rYP) {
    opensimModelJNI.AbstractModel_getPseudoStates(swigCPtr, rYP);
  }

  public void setInitialPseudoStates(double[] aYPI) {
    opensimModelJNI.AbstractModel_setInitialPseudoStates(swigCPtr, aYPI);
  }

  public void getInitialPseudoStates(double[] rYPI) {
    opensimModelJNI.AbstractModel_getInitialPseudoStates(swigCPtr, rYPI);
  }

  public ActuatorSet getActuatorSet() {
    long cPtr = opensimModelJNI.AbstractModel_getActuatorSet__SWIG_0(swigCPtr);
    return (cPtr == 0) ? null : new ActuatorSet(cPtr, false);
  }

  public SWIGTYPE_p_SimmMuscleGroup enterMuscleGroup(String aName) {
    long cPtr = opensimModelJNI.AbstractModel_enterMuscleGroup(swigCPtr, aName);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SimmMuscleGroup(cPtr, false);
  }

  public ContactForceSet getContactSet() {
    long cPtr = opensimModelJNI.AbstractModel_getContactSet__SWIG_0(swigCPtr);
    return (cPtr == 0) ? null : new ContactForceSet(cPtr, false);
  }

  public SWIGTYPE_p_OpenSim__IntegCallbackSet getIntegCallbackSet() {
    long cPtr = opensimModelJNI.AbstractModel_getIntegCallbackSet__SWIG_0(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_OpenSim__IntegCallbackSet(cPtr, false);
  }

  public void addIntegCallback(IntegCallback aCallback) {
    opensimModelJNI.AbstractModel_addIntegCallback(swigCPtr, IntegCallback.getCPtr(aCallback));
  }

  public SWIGTYPE_p_OpenSim__DerivCallbackSet getDerivCallbackSet() {
    long cPtr = opensimModelJNI.AbstractModel_getDerivCallbackSet__SWIG_0(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_OpenSim__DerivCallbackSet(cPtr, false);
  }

  public void addDerivCallback(SWIGTYPE_p_OpenSim__DerivCallback aCallback) {
    opensimModelJNI.AbstractModel_addDerivCallback(swigCPtr, SWIGTYPE_p_OpenSim__DerivCallback.getCPtr(aCallback));
  }

  public SWIGTYPE_p_AnalysisSet getAnalysisSet() {
    long cPtr = opensimModelJNI.AbstractModel_getAnalysisSet__SWIG_0(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_AnalysisSet(cPtr, false);
  }

  public void addAnalysis(SWIGTYPE_p_Analysis aAnalysis) {
    opensimModelJNI.AbstractModel_addAnalysis(swigCPtr, SWIGTYPE_p_Analysis.getCPtr(aAnalysis));
  }

  public void computeDerivatives(double[] rDYDT) {
    opensimModelJNI.AbstractModel_computeDerivatives(swigCPtr, rDYDT);
  }

  public void computeAuxiliaryDerivatives(double[] rDYDT) {
    opensimModelJNI.AbstractModel_computeAuxiliaryDerivatives(swigCPtr, rDYDT);
  }

  public boolean scale(SWIGTYPE_p_ScaleSet aScaleSet, double aFinalMass, boolean aPreserveMassDist) {
    return opensimModelJNI.AbstractModel_scale__SWIG_0(swigCPtr, SWIGTYPE_p_ScaleSet.getCPtr(aScaleSet), aFinalMass, aPreserveMassDist);
  }

  public boolean scale(SWIGTYPE_p_ScaleSet aScaleSet, double aFinalMass) {
    return opensimModelJNI.AbstractModel_scale__SWIG_1(swigCPtr, SWIGTYPE_p_ScaleSet.getCPtr(aScaleSet), aFinalMass);
  }

  public boolean scale(SWIGTYPE_p_ScaleSet aScaleSet) {
    return opensimModelJNI.AbstractModel_scale__SWIG_2(swigCPtr, SWIGTYPE_p_ScaleSet.getCPtr(aScaleSet));
  }

  public void printBasicInfo(SWIGTYPE_p_std__ostream aOStream) {
    opensimModelJNI.AbstractModel_printBasicInfo(swigCPtr, SWIGTYPE_p_std__ostream.getCPtr(aOStream));
  }

  public void printDetailedInfo(SWIGTYPE_p_std__ostream aOStream) {
    opensimModelJNI.AbstractModel_printDetailedInfo(swigCPtr, SWIGTYPE_p_std__ostream.getCPtr(aOStream));
  }

  public void peteTest() {
    opensimModelJNI.AbstractModel_peteTest(swigCPtr);
  }

  public void kinTest() {
    opensimModelJNI.AbstractModel_kinTest(swigCPtr);
  }

}
