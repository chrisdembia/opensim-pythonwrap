/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class AbstractCoordinate extends OpenSimObject {
  private long swigCPtr;

  public AbstractCoordinate(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGStorageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(AbstractCoordinate obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_AbstractCoordinate(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.AbstractCoordinate_copy(swigCPtr);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void copyData(AbstractCoordinate aCoordinate) {
    opensimModelJNI.AbstractCoordinate_copyData(swigCPtr, AbstractCoordinate.getCPtr(aCoordinate));
  }

  public AbstractDynamicsEngine getDynamicsEngine() {
    long cPtr = opensimModelJNI.AbstractCoordinate_getDynamicsEngine(swigCPtr);
    return (cPtr == 0) ? null : new AbstractDynamicsEngine(cPtr, false);
  }

  public void setup(AbstractDynamicsEngine aEngine) {
    opensimModelJNI.AbstractCoordinate_setup(swigCPtr, AbstractDynamicsEngine.getCPtr(aEngine));
  }

  public void updateFromCoordinate(AbstractCoordinate aCoordinate) {
    opensimModelJNI.AbstractCoordinate_updateFromCoordinate(swigCPtr, AbstractCoordinate.getCPtr(aCoordinate));
  }

  public double getValue() {
    return opensimModelJNI.AbstractCoordinate_getValue(swigCPtr);
  }

  public boolean setValue(double aValue) {
    return opensimModelJNI.AbstractCoordinate_setValue(swigCPtr, aValue);
  }

  public boolean getValueUseDefault() {
    return opensimModelJNI.AbstractCoordinate_getValueUseDefault(swigCPtr);
  }

  public void getRange(double[] rRange) {
    opensimModelJNI.AbstractCoordinate_getRange(swigCPtr, rRange);
  }

  public boolean setRange(double[] aRange) {
    return opensimModelJNI.AbstractCoordinate_setRange(swigCPtr, aRange);
  }

  public double getRangeMin() {
    return opensimModelJNI.AbstractCoordinate_getRangeMin(swigCPtr);
  }

  public double getRangeMax() {
    return opensimModelJNI.AbstractCoordinate_getRangeMax(swigCPtr);
  }

  public boolean setRangeMin(double aMin) {
    return opensimModelJNI.AbstractCoordinate_setRangeMin(swigCPtr, aMin);
  }

  public boolean setRangeMax(double aMax) {
    return opensimModelJNI.AbstractCoordinate_setRangeMax(swigCPtr, aMax);
  }

  public boolean getRangeUseDefault() {
    return opensimModelJNI.AbstractCoordinate_getRangeUseDefault(swigCPtr);
  }

  public double getTolerance() {
    return opensimModelJNI.AbstractCoordinate_getTolerance(swigCPtr);
  }

  public boolean setTolerance(double aTolerance) {
    return opensimModelJNI.AbstractCoordinate_setTolerance(swigCPtr, aTolerance);
  }

  public boolean getToleranceUseDefault() {
    return opensimModelJNI.AbstractCoordinate_getToleranceUseDefault(swigCPtr);
  }

  public double getStiffness() {
    return opensimModelJNI.AbstractCoordinate_getStiffness(swigCPtr);
  }

  public boolean setStiffness(double aStiffness) {
    return opensimModelJNI.AbstractCoordinate_setStiffness(swigCPtr, aStiffness);
  }

  public boolean getStiffnessUseDefault() {
    return opensimModelJNI.AbstractCoordinate_getStiffnessUseDefault(swigCPtr);
  }

  public double getDefaultValue() {
    return opensimModelJNI.AbstractCoordinate_getDefaultValue(swigCPtr);
  }

  public boolean setDefaultValue(double aDefaultValue) {
    return opensimModelJNI.AbstractCoordinate_setDefaultValue(swigCPtr, aDefaultValue);
  }

  public boolean getDefaultValueUseDefault() {
    return opensimModelJNI.AbstractCoordinate_getDefaultValueUseDefault(swigCPtr);
  }

  public boolean getClamped() {
    return opensimModelJNI.AbstractCoordinate_getClamped(swigCPtr);
  }

  public boolean setClamped(boolean aClamped) {
    return opensimModelJNI.AbstractCoordinate_setClamped(swigCPtr, aClamped);
  }

  public boolean getClampedUseDefault() {
    return opensimModelJNI.AbstractCoordinate_getClampedUseDefault(swigCPtr);
  }

  public boolean getLocked() {
    return opensimModelJNI.AbstractCoordinate_getLocked(swigCPtr);
  }

  public boolean setLocked(boolean aLocked) {
    return opensimModelJNI.AbstractCoordinate_setLocked(swigCPtr, aLocked);
  }

  public boolean getLockedUseDefault() {
    return opensimModelJNI.AbstractCoordinate_getLockedUseDefault(swigCPtr);
  }

  public void addJointToList(AbstractJoint aJoint) {
    opensimModelJNI.AbstractCoordinate_addJointToList(swigCPtr, AbstractJoint.getCPtr(aJoint));
  }

  public void addPathToList(SWIGTYPE_p_OpenSim__SimmPath aJoint) {
    opensimModelJNI.AbstractCoordinate_addPathToList(swigCPtr, SWIGTYPE_p_OpenSim__SimmPath.getCPtr(aJoint));
  }

  public boolean isUsedInModel() {
    return opensimModelJNI.AbstractCoordinate_isUsedInModel(swigCPtr);
  }

  public boolean isRestraintActive() {
    return opensimModelJNI.AbstractCoordinate_isRestraintActive(swigCPtr);
  }

  public Function getRestraintFunction() {
    long cPtr = opensimModelJNI.AbstractCoordinate_getRestraintFunction(swigCPtr);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public Function getMinRestraintFunction() {
    long cPtr = opensimModelJNI.AbstractCoordinate_getMinRestraintFunction(swigCPtr);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public Function getMaxRestraintFunction() {
    long cPtr = opensimModelJNI.AbstractCoordinate_getMaxRestraintFunction(swigCPtr);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public AbstractDof.DofType getMotionType() {
    return AbstractDof.DofType.swigToEnum(opensimModelJNI.AbstractCoordinate_getMotionType(swigCPtr));
  }

  public void determineType() {
    opensimModelJNI.AbstractCoordinate_determineType(swigCPtr);
  }

  public void peteTest() {
    opensimModelJNI.AbstractCoordinate_peteTest(swigCPtr);
  }

}
