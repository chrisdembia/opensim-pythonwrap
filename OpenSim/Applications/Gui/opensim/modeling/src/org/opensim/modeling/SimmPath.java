/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class SimmPath {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected SimmPath(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SimmPath obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_SimmPath(swigCPtr);
    }
    swigCPtr = 0;
  }

  public SimmPath() {
    this(opensimModelJNI.new_SimmPath__SWIG_0(), true);
  }

  public SimmPath(SWIGTYPE_p_std__vectorTSimmStep_t aPath, SimmBody aFromBody, SimmBody aToBody) {
    this(opensimModelJNI.new_SimmPath__SWIG_1(SWIGTYPE_p_std__vectorTSimmStep_t.getCPtr(aPath), SimmBody.getCPtr(aFromBody), SimmBody.getCPtr(aToBody)), true);
  }

  public void invalidate() {
    opensimModelJNI.SimmPath_invalidate(swigCPtr);
  }

  public SimmBody getFromBody() {
    long cPtr = opensimModelJNI.SimmPath_getFromBody(swigCPtr);
    return (cPtr == 0) ? null : new SimmBody(cPtr, false);
  }

  public SimmBody getToBody() {
    long cPtr = opensimModelJNI.SimmPath_getToBody(swigCPtr);
    return (cPtr == 0) ? null : new SimmBody(cPtr, false);
  }

  public SWIGTYPE_p_std__vectorTSimmStep_t getPath() {
    return new SWIGTYPE_p_std__vectorTSimmStep_t(opensimModelJNI.SimmPath_getPath(swigCPtr), false);
  }

  public Transform getForwardTransform() {
    return new Transform(opensimModelJNI.SimmPath_getForwardTransform(swigCPtr), false);
  }

  public Transform getInverseTransform() {
    return new Transform(opensimModelJNI.SimmPath_getInverseTransform(swigCPtr), false);
  }

  public void peteTest() {
    opensimModelJNI.SimmPath_peteTest(swigCPtr);
  }

}
