/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class SimmMusclePoint extends OpenSimObject {
  private long swigCPtr;

  public SimmMusclePoint(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGStorageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(SimmMusclePoint obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_SimmMusclePoint(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public SimmMusclePoint() {
    this(opensimModelJNI.new_SimmMusclePoint__SWIG_0(), true);
  }

  public SimmMusclePoint(SWIGTYPE_p_DOMElement aElement) {
    this(opensimModelJNI.new_SimmMusclePoint__SWIG_1(SWIGTYPE_p_DOMElement.getCPtr(aElement)), true);
  }

  public SimmMusclePoint(SimmMusclePoint aPoint) {
    this(opensimModelJNI.new_SimmMusclePoint__SWIG_2(SimmMusclePoint.getCPtr(aPoint)), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.SimmMusclePoint_copy__SWIG_0(swigCPtr);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public OpenSimObject copy(SWIGTYPE_p_DOMElement aElement) {
    long cPtr = opensimModelJNI.SimmMusclePoint_copy__SWIG_1(swigCPtr, SWIGTYPE_p_DOMElement.getCPtr(aElement));
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void copyData(SimmMusclePoint aPoint) {
    opensimModelJNI.SimmMusclePoint_copyData(swigCPtr, SimmMusclePoint.getCPtr(aPoint));
  }

  public ArrayDouble getAttachment() {
    return new ArrayDouble(opensimModelJNI.SimmMusclePoint_getAttachment(swigCPtr), false);
  }

  public AbstractBody getBody() {
    long cPtr = opensimModelJNI.SimmMusclePoint_getBody(swigCPtr);
    return (cPtr == 0) ? null : new AbstractBody(cPtr, false);
  }

  public SWIGTYPE_p_std__string getBodyName() {
    return new SWIGTYPE_p_std__string(opensimModelJNI.SimmMusclePoint_getBodyName(swigCPtr), false);
  }

  public void scale(ArrayDouble aScaleFactors) {
    opensimModelJNI.SimmMusclePoint_scale(swigCPtr, ArrayDouble.getCPtr(aScaleFactors));
  }

  public boolean isActive() {
    return opensimModelJNI.SimmMusclePoint_isActive(swigCPtr);
  }

  public SWIGTYPE_p_OpenSim__AbstractWrapObject getWrapObject() {
    long cPtr = opensimModelJNI.SimmMusclePoint_getWrapObject(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_OpenSim__AbstractWrapObject(cPtr, false);
  }

  public void setup(AbstractModel aModel, SWIGTYPE_p_OpenSim__AbstractSimmMuscle aMuscle) {
    opensimModelJNI.SimmMusclePoint_setup(swigCPtr, AbstractModel.getCPtr(aModel), SWIGTYPE_p_OpenSim__AbstractSimmMuscle.getCPtr(aMuscle));
  }

  public VisibleObject getDisplayer() {
    long cPtr = opensimModelJNI.SimmMusclePoint_getDisplayer(swigCPtr);
    return (cPtr == 0) ? null : new VisibleObject(cPtr, false);
  }

  public void updateGeometry() {
    opensimModelJNI.SimmMusclePoint_updateGeometry(swigCPtr);
  }

  public void peteTest() {
    opensimModelJNI.SimmMusclePoint_peteTest(swigCPtr);
  }

}
