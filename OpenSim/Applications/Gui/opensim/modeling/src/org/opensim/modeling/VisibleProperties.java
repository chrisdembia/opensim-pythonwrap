/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class VisibleProperties extends OpenSimObject {
  private long swigCPtr;

  protected VisibleProperties(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGVisiblePropertiesUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(VisibleProperties obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_VisibleProperties(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public VisibleProperties() {
    this(opensimModelJNI.new_VisibleProperties__SWIG_0(), true);
  }

  public VisibleProperties(String aFileName) {
    this(opensimModelJNI.new_VisibleProperties__SWIG_1(aFileName), true);
  }

  public VisibleProperties(SWIGTYPE_p_OpenSim__XMLDocument aDocument) {
    this(opensimModelJNI.new_VisibleProperties__SWIG_2(SWIGTYPE_p_OpenSim__XMLDocument.getCPtr(aDocument)), true);
  }

  public VisibleProperties(SWIGTYPE_p_DOMElement aNode) {
    this(opensimModelJNI.new_VisibleProperties__SWIG_3(SWIGTYPE_p_DOMElement.getCPtr(aNode)), true);
  }

  public VisibleProperties(VisibleProperties aVisibleProperties) {
    this(opensimModelJNI.new_VisibleProperties__SWIG_4(VisibleProperties.getCPtr(aVisibleProperties)), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.VisibleProperties_copy__SWIG_0(swigCPtr);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public OpenSimObject copy(SWIGTYPE_p_DOMElement aElement) {
    long cPtr = opensimModelJNI.VisibleProperties_copy__SWIG_1(swigCPtr, SWIGTYPE_p_DOMElement.getCPtr(aElement));
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void setDisplayPreference(VisibleProperties.DisplayPreference aDisplayPreference) {
    opensimModelJNI.VisibleProperties_setDisplayPreference(swigCPtr, aDisplayPreference.swigValue());
  }

  public VisibleProperties.DisplayPreference getDisplayPreference() {
    return VisibleProperties.DisplayPreference.swigToEnum(opensimModelJNI.VisibleProperties_getDisplayPreference(swigCPtr));
  }

  public void setShowNormals(boolean showNormals) {
    opensimModelJNI.VisibleProperties_setShowNormals(swigCPtr, showNormals);
  }

  public boolean getShowNormals() {
    return opensimModelJNI.VisibleProperties_getShowNormals(swigCPtr);
  }

  public void setShowAxes(boolean showAxes) {
    opensimModelJNI.VisibleProperties_setShowAxes(swigCPtr, showAxes);
  }

  public boolean getShowAxes() {
    return opensimModelJNI.VisibleProperties_getShowAxes(swigCPtr);
  }

  public void setMaterialName(String matName) {
    opensimModelJNI.VisibleProperties_setMaterialName(swigCPtr, matName);
  }

  public String getMaterialName() {
    return opensimModelJNI.VisibleProperties_getMaterialName(swigCPtr);
  }

  public void getColor(double[] aColor) {
    opensimModelJNI.VisibleProperties_getColor(swigCPtr, aColor);
  }

  public void setColor(double[] aColor) {
    opensimModelJNI.VisibleProperties_setColor(swigCPtr, aColor);
  }

  public final static class DisplayPreference {
    public final static DisplayPreference None = new DisplayPreference("None", opensimModelJNI.VisibleProperties_None_get());
    public final static DisplayPreference WireFrame = new DisplayPreference("WireFrame", opensimModelJNI.VisibleProperties_WireFrame_get());
    public final static DisplayPreference SolidFill = new DisplayPreference("SolidFill", opensimModelJNI.VisibleProperties_SolidFill_get());
    public final static DisplayPreference FlatShaded = new DisplayPreference("FlatShaded", opensimModelJNI.VisibleProperties_FlatShaded_get());
    public final static DisplayPreference GouraudShaded = new DisplayPreference("GouraudShaded", opensimModelJNI.VisibleProperties_GouraudShaded_get());
    public final static DisplayPreference PhongShaded = new DisplayPreference("PhongShaded", opensimModelJNI.VisibleProperties_PhongShaded_get());
    public final static DisplayPreference BoundingBox = new DisplayPreference("BoundingBox", opensimModelJNI.VisibleProperties_BoundingBox_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static DisplayPreference swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + DisplayPreference.class + " with value " + swigValue);
    }

    private DisplayPreference(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private DisplayPreference(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private DisplayPreference(String swigName, DisplayPreference swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static DisplayPreference[] swigValues = { None, WireFrame, SolidFill, FlatShaded, GouraudShaded, PhongShaded, BoundingBox };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
