/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class PrescribedForce extends Force {
  private long swigCPtr;

  public PrescribedForce(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGStorageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(PrescribedForce obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimModelJNI.delete_PrescribedForce(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public PrescribedForce(Body body) {
    this(opensimModelJNI.new_PrescribedForce__SWIG_0(Body.getCPtr(body), body), true);
  }

  public PrescribedForce() {
    this(opensimModelJNI.new_PrescribedForce__SWIG_1(), true);
  }

  public PrescribedForce(PrescribedForce force) {
    this(opensimModelJNI.new_PrescribedForce__SWIG_2(PrescribedForce.getCPtr(force), force), true);
  }

  public PrescribedForce(SWIGTYPE_p_DOMElement aNode) {
    this(opensimModelJNI.new_PrescribedForce__SWIG_3(SWIGTYPE_p_DOMElement.getCPtr(aNode)), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.PrescribedForce_copy__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void updateFromXMLNode() {
    opensimModelJNI.PrescribedForce_updateFromXMLNode(swigCPtr, this);
  }

  public void setBodyName(String aBodyName) {
    opensimModelJNI.PrescribedForce_setBodyName(swigCPtr, this, aBodyName);
  }

  public String getBodyName() {
    return opensimModelJNI.PrescribedForce_getBodyName(swigCPtr, this);
  }

  public void setForceFunctions(Function forceX, Function forceY, Function forceZ) {
    opensimModelJNI.PrescribedForce_setForceFunctions(swigCPtr, this, Function.getCPtr(forceX), forceX, Function.getCPtr(forceY), forceY, Function.getCPtr(forceZ), forceZ);
  }

  public SWIGTYPE_p_OpenSim__FunctionSet getForceFunctions() {
    return new SWIGTYPE_p_OpenSim__FunctionSet(opensimModelJNI.PrescribedForce_getForceFunctions(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__FunctionSet updForceFunctions() {
    return new SWIGTYPE_p_OpenSim__FunctionSet(opensimModelJNI.PrescribedForce_updForceFunctions(swigCPtr, this), false);
  }

  public void getForceFunctionNames(ArrayStr aFunctionNames) {
    opensimModelJNI.PrescribedForce_getForceFunctionNames(swigCPtr, this, ArrayStr.getCPtr(aFunctionNames), aFunctionNames);
  }

  public void setForceFunctionNames(ArrayStr aFunctionNames, Storage kineticsStore) {
    opensimModelJNI.PrescribedForce_setForceFunctionNames(swigCPtr, this, ArrayStr.getCPtr(aFunctionNames), aFunctionNames, Storage.getCPtr(kineticsStore), kineticsStore);
  }

  public void clearForceFunctions() {
    opensimModelJNI.PrescribedForce_clearForceFunctions(swigCPtr, this);
  }

  public void setPointFunctions(Function pointX, Function pointY, Function pointZ) {
    opensimModelJNI.PrescribedForce_setPointFunctions(swigCPtr, this, Function.getCPtr(pointX), pointX, Function.getCPtr(pointY), pointY, Function.getCPtr(pointZ), pointZ);
  }

  public SWIGTYPE_p_OpenSim__FunctionSet getPointFunctions() {
    return new SWIGTYPE_p_OpenSim__FunctionSet(opensimModelJNI.PrescribedForce_getPointFunctions(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__FunctionSet updPointFunctions() {
    return new SWIGTYPE_p_OpenSim__FunctionSet(opensimModelJNI.PrescribedForce_updPointFunctions(swigCPtr, this), false);
  }

  public void getPointFunctionNames(ArrayStr aFunctionNames) {
    opensimModelJNI.PrescribedForce_getPointFunctionNames(swigCPtr, this, ArrayStr.getCPtr(aFunctionNames), aFunctionNames);
  }

  public void setPointFunctionNames(ArrayStr aFunctionNames, Storage kineticsStore) {
    opensimModelJNI.PrescribedForce_setPointFunctionNames(swigCPtr, this, ArrayStr.getCPtr(aFunctionNames), aFunctionNames, Storage.getCPtr(kineticsStore), kineticsStore);
  }

  public void clearPointFunctions() {
    opensimModelJNI.PrescribedForce_clearPointFunctions(swigCPtr, this);
  }

  public void setTorqueFunctions(Function torqueX, Function torqueY, Function torqueZ) {
    opensimModelJNI.PrescribedForce_setTorqueFunctions(swigCPtr, this, Function.getCPtr(torqueX), torqueX, Function.getCPtr(torqueY), torqueY, Function.getCPtr(torqueZ), torqueZ);
  }

  public SWIGTYPE_p_OpenSim__FunctionSet getTorqueFunctions() {
    return new SWIGTYPE_p_OpenSim__FunctionSet(opensimModelJNI.PrescribedForce_getTorqueFunctions(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__FunctionSet updTorqueFunctions() {
    return new SWIGTYPE_p_OpenSim__FunctionSet(opensimModelJNI.PrescribedForce_updTorqueFunctions(swigCPtr, this), false);
  }

  public void getTorqueFunctionNames(ArrayStr aFunctionNames) {
    opensimModelJNI.PrescribedForce_getTorqueFunctionNames(swigCPtr, this, ArrayStr.getCPtr(aFunctionNames), aFunctionNames);
  }

  public void setTorqueFunctionNames(ArrayStr aFunctionNames, Storage kineticsStore) {
    opensimModelJNI.PrescribedForce_setTorqueFunctionNames(swigCPtr, this, ArrayStr.getCPtr(aFunctionNames), aFunctionNames, Storage.getCPtr(kineticsStore), kineticsStore);
  }

  public void clearTorqueFunctions() {
    opensimModelJNI.PrescribedForce_clearTorqueFunctions(swigCPtr, this);
  }

  public boolean getForceIsInGlobalFrame() {
    return opensimModelJNI.PrescribedForce_getForceIsInGlobalFrame(swigCPtr, this);
  }

  public void setForceIsInGlobalFrame(boolean isGlobal) {
    opensimModelJNI.PrescribedForce_setForceIsInGlobalFrame(swigCPtr, this, isGlobal);
  }

  public boolean getPointIsInGlobalFrame() {
    return opensimModelJNI.PrescribedForce_getPointIsInGlobalFrame(swigCPtr, this);
  }

  public void setPointIsInGlobalFrame(boolean isGlobal) {
    opensimModelJNI.PrescribedForce_setPointIsInGlobalFrame(swigCPtr, this, isGlobal);
  }

  public Body getBody() {
    return new Body(opensimModelJNI.PrescribedForce_getBody(swigCPtr, this), false);
  }

  public SWIGTYPE_p_SimTK__Vec3 getForceAtTime(double aTime) {
    return new SWIGTYPE_p_SimTK__Vec3(opensimModelJNI.PrescribedForce_getForceAtTime(swigCPtr, this, aTime), true);
  }

  public SWIGTYPE_p_SimTK__Vec3 getPointAtTime(double aTime) {
    return new SWIGTYPE_p_SimTK__Vec3(opensimModelJNI.PrescribedForce_getPointAtTime(swigCPtr, this, aTime), true);
  }

  public SWIGTYPE_p_SimTK__Vec3 getTorqueAtTime(double aTime) {
    return new SWIGTYPE_p_SimTK__Vec3(opensimModelJNI.PrescribedForce_getTorqueAtTime(swigCPtr, this, aTime), true);
  }

  public ArrayStr getRecordLabels() {
    return new ArrayStr(opensimModelJNI.PrescribedForce_getRecordLabels(swigCPtr, this), true);
  }

  public ArrayDouble getRecordValues(SWIGTYPE_p_SimTK__State state) {
    return new ArrayDouble(opensimModelJNI.PrescribedForce_getRecordValues(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(state)), true);
  }

  public static boolean isKindOf(String type) {
    return opensimModelJNI.PrescribedForce_isKindOf(type);
  }

  public boolean isA(String type) {
    return opensimModelJNI.PrescribedForce_isA(swigCPtr, this, type);
  }

  public static PrescribedForce safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelJNI.PrescribedForce_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new PrescribedForce(cPtr, false);
  }

  public void copy(OpenSimObject aObject) {
    opensimModelJNI.PrescribedForce_copy__SWIG_1(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

}
