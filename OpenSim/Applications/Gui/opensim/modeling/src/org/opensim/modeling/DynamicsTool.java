/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class DynamicsTool extends Tool {
  private long swigCPtr;

  public DynamicsTool(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGStorageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(DynamicsTool obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimModelJNI.delete_DynamicsTool(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.DynamicsTool_copy(swigCPtr, this);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void disableModelForces(Model model, SWIGTYPE_p_SimTK__State s, ArrayStr forcesByNameOrGroup) {
    opensimModelJNI.DynamicsTool_disableModelForces(swigCPtr, this, Model.getCPtr(model), model, SWIGTYPE_p_SimTK__State.getCPtr(s), ArrayStr.getCPtr(forcesByNameOrGroup), forcesByNameOrGroup);
  }

  public boolean run() throws java.io.IOException {
    return opensimModelJNI.DynamicsTool_run(swigCPtr, this);
  }

}
