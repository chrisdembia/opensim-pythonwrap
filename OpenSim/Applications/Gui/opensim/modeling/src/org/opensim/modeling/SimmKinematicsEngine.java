/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class SimmKinematicsEngine extends AbstractDynamicsEngine {
  private long swigCPtr;

  public SimmKinematicsEngine(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGStorageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(SimmKinematicsEngine obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_SimmKinematicsEngine(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public SimmKinematicsEngine() {
    this(opensimModelJNI.new_SimmKinematicsEngine__SWIG_0(), true);
  }

  public SimmKinematicsEngine(String aFileName) {
    this(opensimModelJNI.new_SimmKinematicsEngine__SWIG_1(aFileName), true);
  }

  public SimmKinematicsEngine(SimmKinematicsEngine aEngine) {
    this(opensimModelJNI.new_SimmKinematicsEngine__SWIG_2(SimmKinematicsEngine.getCPtr(aEngine), aEngine), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.SimmKinematicsEngine_copy(swigCPtr, this);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public static void registerTypes() {
    opensimModelJNI.SimmKinematicsEngine_registerTypes();
  }

  public void setup(Model aModel) {
    opensimModelJNI.SimmKinematicsEngine_setup(swigCPtr, this, Model.getCPtr(aModel), aModel);
  }

  public void makePaths() {
    opensimModelJNI.SimmKinematicsEngine_makePaths(swigCPtr, this);
  }

  public void updateCoordinateSet(CoordinateSet aCoordinateSet) {
    opensimModelJNI.SimmKinematicsEngine_updateCoordinateSet(swigCPtr, this, CoordinateSet.getCPtr(aCoordinateSet), aCoordinateSet);
  }

  public void getUnlockedCoordinates(CoordinateSet rUnlockedCoordinates) {
    opensimModelJNI.SimmKinematicsEngine_getUnlockedCoordinates(swigCPtr, this, CoordinateSet.getCPtr(rUnlockedCoordinates), rUnlockedCoordinates);
  }

  public AbstractDof findUnconstrainedDof(AbstractCoordinate aCoordinate, AbstractJoint rJoint) {
    long cPtr = opensimModelJNI.SimmKinematicsEngine_findUnconstrainedDof(swigCPtr, this, AbstractCoordinate.getCPtr(aCoordinate), aCoordinate, AbstractJoint.getCPtr(rJoint));
    return (cPtr == 0) ? null : new AbstractDof(cPtr, false);
  }

  public void setConfiguration(double[] aY) {
    opensimModelJNI.SimmKinematicsEngine_setConfiguration__SWIG_0(swigCPtr, this, aY);
  }

  public void getConfiguration(double[] rY) {
    opensimModelJNI.SimmKinematicsEngine_getConfiguration__SWIG_0(swigCPtr, this, rY);
  }

  public void setConfiguration(double[] aQ, double[] aU) {
    opensimModelJNI.SimmKinematicsEngine_setConfiguration__SWIG_1(swigCPtr, this, aQ, aU);
  }

  public void getConfiguration(double[] rQ, double[] rU) {
    opensimModelJNI.SimmKinematicsEngine_getConfiguration__SWIG_1(swigCPtr, this, rQ, rU);
  }

  public void getCoordinates(double[] rQ) {
    opensimModelJNI.SimmKinematicsEngine_getCoordinates(swigCPtr, this, rQ);
  }

  public void getSpeeds(double[] rU) {
    opensimModelJNI.SimmKinematicsEngine_getSpeeds(swigCPtr, this, rU);
  }

  public void getAccelerations(double[] rDUDT) {
    opensimModelJNI.SimmKinematicsEngine_getAccelerations(swigCPtr, this, rDUDT);
  }

  public double getAcceleration(int aIndex) {
    return opensimModelJNI.SimmKinematicsEngine_getAcceleration__SWIG_0(swigCPtr, this, aIndex);
  }

  public double getAcceleration(String aSpeedName) {
    return opensimModelJNI.SimmKinematicsEngine_getAcceleration__SWIG_1(swigCPtr, this, aSpeedName);
  }

  public void extractConfiguration(double[] aY, double[] rQ, double[] rU) {
    opensimModelJNI.SimmKinematicsEngine_extractConfiguration(swigCPtr, this, aY, rQ, rU);
  }

  public void applyDefaultConfiguration() {
    opensimModelJNI.SimmKinematicsEngine_applyDefaultConfiguration(swigCPtr, this);
  }

  public int assemble(double aTime, SWIGTYPE_p_double rState, SWIGTYPE_p_int aLock, double aTol, int aMaxevals, SWIGTYPE_p_int rFcnt, SWIGTYPE_p_int rErr) {
    return opensimModelJNI.SimmKinematicsEngine_assemble(swigCPtr, this, aTime, SWIGTYPE_p_double.getCPtr(rState), SWIGTYPE_p_int.getCPtr(aLock), aTol, aMaxevals, SWIGTYPE_p_int.getCPtr(rFcnt), SWIGTYPE_p_int.getCPtr(rErr));
  }

  public boolean scale(ScaleSet aScaleSet, double aFinalMass, boolean aPreserveMassDist) {
    return opensimModelJNI.SimmKinematicsEngine_scale__SWIG_0(swigCPtr, this, ScaleSet.getCPtr(aScaleSet), aScaleSet, aFinalMass, aPreserveMassDist);
  }

  public boolean scale(ScaleSet aScaleSet, double aFinalMass) {
    return opensimModelJNI.SimmKinematicsEngine_scale__SWIG_1(swigCPtr, this, ScaleSet.getCPtr(aScaleSet), aScaleSet, aFinalMass);
  }

  public boolean scale(ScaleSet aScaleSet) {
    return opensimModelJNI.SimmKinematicsEngine_scale__SWIG_2(swigCPtr, this, ScaleSet.getCPtr(aScaleSet), aScaleSet);
  }

  public AbstractBody getGroundBody() {
    return new AbstractBody(opensimModelJNI.SimmKinematicsEngine_getGroundBody(swigCPtr, this), false);
  }

  public AbstractBody getLeafBody(AbstractJoint aJoint) {
    long cPtr = opensimModelJNI.SimmKinematicsEngine_getLeafBody(swigCPtr, this, AbstractJoint.getCPtr(aJoint), aJoint);
    return (cPtr == 0) ? null : new AbstractBody(cPtr, false);
  }

  public double getMass() {
    return opensimModelJNI.SimmKinematicsEngine_getMass(swigCPtr, this);
  }

  public void getSystemInertia(SWIGTYPE_p_double rM, double[] rCOM, SWIGTYPE_p_a_3__double rI) {
    opensimModelJNI.SimmKinematicsEngine_getSystemInertia__SWIG_0(swigCPtr, this, SWIGTYPE_p_double.getCPtr(rM), rCOM, SWIGTYPE_p_a_3__double.getCPtr(rI));
  }

  public void getSystemInertia(SWIGTYPE_p_double rM, SWIGTYPE_p_double rCOM, SWIGTYPE_p_double rI) {
    opensimModelJNI.SimmKinematicsEngine_getSystemInertia__SWIG_1(swigCPtr, this, SWIGTYPE_p_double.getCPtr(rM), SWIGTYPE_p_double.getCPtr(rCOM), SWIGTYPE_p_double.getCPtr(rI));
  }

  public void getPosition(AbstractBody aBody, double[] aPoint, double[] rPos) {
    opensimModelJNI.SimmKinematicsEngine_getPosition(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, aPoint, rPos);
  }

  public void getVelocity(AbstractBody aBody, double[] aPoint, double[] rVel) {
    opensimModelJNI.SimmKinematicsEngine_getVelocity(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, aPoint, rVel);
  }

  public void getAcceleration(AbstractBody aBody, double[] aPoint, double[] rAcc) {
    opensimModelJNI.SimmKinematicsEngine_getAcceleration__SWIG_2(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, aPoint, rAcc);
  }

  public void getDirectionCosines(AbstractBody aBody, SWIGTYPE_p_a_3__double rDirCos) {
    opensimModelJNI.SimmKinematicsEngine_getDirectionCosines__SWIG_0(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, SWIGTYPE_p_a_3__double.getCPtr(rDirCos));
  }

  public void getDirectionCosines(AbstractBody aBody, SWIGTYPE_p_double rDirCos) {
    opensimModelJNI.SimmKinematicsEngine_getDirectionCosines__SWIG_1(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, SWIGTYPE_p_double.getCPtr(rDirCos));
  }

  public void getAngularVelocity(AbstractBody aBody, double[] rAngVel) {
    opensimModelJNI.SimmKinematicsEngine_getAngularVelocity(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, rAngVel);
  }

  public void getAngularVelocityBodyLocal(AbstractBody aBody, double[] rAngVel) {
    opensimModelJNI.SimmKinematicsEngine_getAngularVelocityBodyLocal(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, rAngVel);
  }

  public void getAngularAcceleration(AbstractBody aBody, double[] rAngAcc) {
    opensimModelJNI.SimmKinematicsEngine_getAngularAcceleration(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, rAngAcc);
  }

  public void getAngularAccelerationBodyLocal(AbstractBody aBody, double[] rAngAcc) {
    opensimModelJNI.SimmKinematicsEngine_getAngularAccelerationBodyLocal(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, rAngAcc);
  }

  public Transform getTransform(AbstractBody aBody) {
    return new Transform(opensimModelJNI.SimmKinematicsEngine_getTransform(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody), true);
  }

  public void applyForce(AbstractBody aBody, double[] aPoint, double[] aForce) {
    opensimModelJNI.SimmKinematicsEngine_applyForce(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, aPoint, aForce);
  }

  public void applyForces(int aN, SWIGTYPE_p_p_OpenSim__AbstractBody aBodies, SWIGTYPE_p_a_3__double aPoints, SWIGTYPE_p_a_3__double aForces) {
    opensimModelJNI.SimmKinematicsEngine_applyForces__SWIG_0(swigCPtr, this, aN, SWIGTYPE_p_p_OpenSim__AbstractBody.getCPtr(aBodies), SWIGTYPE_p_a_3__double.getCPtr(aPoints), SWIGTYPE_p_a_3__double.getCPtr(aForces));
  }

  public void applyForces(int aN, SWIGTYPE_p_p_OpenSim__AbstractBody aBodies, SWIGTYPE_p_double aPoints, SWIGTYPE_p_double aForces) {
    opensimModelJNI.SimmKinematicsEngine_applyForces__SWIG_1(swigCPtr, this, aN, SWIGTYPE_p_p_OpenSim__AbstractBody.getCPtr(aBodies), SWIGTYPE_p_double.getCPtr(aPoints), SWIGTYPE_p_double.getCPtr(aForces));
  }

  public void applyForceBodyLocal(AbstractBody aBody, double[] aPoint, double[] aForce) {
    opensimModelJNI.SimmKinematicsEngine_applyForceBodyLocal(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, aPoint, aForce);
  }

  public void applyForcesBodyLocal(int aN, SWIGTYPE_p_p_OpenSim__AbstractBody aBodies, SWIGTYPE_p_a_3__double aPoints, SWIGTYPE_p_a_3__double aForces) {
    opensimModelJNI.SimmKinematicsEngine_applyForcesBodyLocal__SWIG_0(swigCPtr, this, aN, SWIGTYPE_p_p_OpenSim__AbstractBody.getCPtr(aBodies), SWIGTYPE_p_a_3__double.getCPtr(aPoints), SWIGTYPE_p_a_3__double.getCPtr(aForces));
  }

  public void applyForcesBodyLocal(int aN, SWIGTYPE_p_p_OpenSim__AbstractBody aBodies, SWIGTYPE_p_double aPoints, SWIGTYPE_p_double aForces) {
    opensimModelJNI.SimmKinematicsEngine_applyForcesBodyLocal__SWIG_1(swigCPtr, this, aN, SWIGTYPE_p_p_OpenSim__AbstractBody.getCPtr(aBodies), SWIGTYPE_p_double.getCPtr(aPoints), SWIGTYPE_p_double.getCPtr(aForces));
  }

  public void applyTorque(AbstractBody aBody, double[] aTorque) {
    opensimModelJNI.SimmKinematicsEngine_applyTorque(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, aTorque);
  }

  public void applyTorques(int aN, SWIGTYPE_p_p_OpenSim__AbstractBody aBodies, SWIGTYPE_p_a_3__double aTorques) {
    opensimModelJNI.SimmKinematicsEngine_applyTorques__SWIG_0(swigCPtr, this, aN, SWIGTYPE_p_p_OpenSim__AbstractBody.getCPtr(aBodies), SWIGTYPE_p_a_3__double.getCPtr(aTorques));
  }

  public void applyTorques(int aN, SWIGTYPE_p_p_OpenSim__AbstractBody aBodies, SWIGTYPE_p_double aTorques) {
    opensimModelJNI.SimmKinematicsEngine_applyTorques__SWIG_1(swigCPtr, this, aN, SWIGTYPE_p_p_OpenSim__AbstractBody.getCPtr(aBodies), SWIGTYPE_p_double.getCPtr(aTorques));
  }

  public void applyTorqueBodyLocal(AbstractBody aBody, double[] aTorque) {
    opensimModelJNI.SimmKinematicsEngine_applyTorqueBodyLocal(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, aTorque);
  }

  public void applyTorquesBodyLocal(int aN, SWIGTYPE_p_p_OpenSim__AbstractBody aBodies, SWIGTYPE_p_a_3__double aTorques) {
    opensimModelJNI.SimmKinematicsEngine_applyTorquesBodyLocal__SWIG_0(swigCPtr, this, aN, SWIGTYPE_p_p_OpenSim__AbstractBody.getCPtr(aBodies), SWIGTYPE_p_a_3__double.getCPtr(aTorques));
  }

  public void applyTorquesBodyLocal(int aN, SWIGTYPE_p_p_OpenSim__AbstractBody aBodies, SWIGTYPE_p_double aTorques) {
    opensimModelJNI.SimmKinematicsEngine_applyTorquesBodyLocal__SWIG_1(swigCPtr, this, aN, SWIGTYPE_p_p_OpenSim__AbstractBody.getCPtr(aBodies), SWIGTYPE_p_double.getCPtr(aTorques));
  }

  public void applyGeneralizedForce(AbstractCoordinate aU, double aF) {
    opensimModelJNI.SimmKinematicsEngine_applyGeneralizedForce(swigCPtr, this, AbstractCoordinate.getCPtr(aU), aU, aF);
  }

  public void applyGeneralizedForces(double[] aF) {
    opensimModelJNI.SimmKinematicsEngine_applyGeneralizedForces__SWIG_0(swigCPtr, this, aF);
  }

  public void applyGeneralizedForces(int aN, SWIGTYPE_p_p_OpenSim__AbstractCoordinate aU, double[] aF) {
    opensimModelJNI.SimmKinematicsEngine_applyGeneralizedForces__SWIG_1(swigCPtr, this, aN, SWIGTYPE_p_p_OpenSim__AbstractCoordinate.getCPtr(aU), aF);
  }

  public double getNetAppliedGeneralizedForce(AbstractCoordinate aU) {
    return opensimModelJNI.SimmKinematicsEngine_getNetAppliedGeneralizedForce(swigCPtr, this, AbstractCoordinate.getCPtr(aU), aU);
  }

  public void computeGeneralizedForces(double[] aDUDT, double[] rF) {
    opensimModelJNI.SimmKinematicsEngine_computeGeneralizedForces(swigCPtr, this, aDUDT, rF);
  }

  public void computeReactions(SWIGTYPE_p_a_3__double rForces, SWIGTYPE_p_a_3__double rTorques) {
    opensimModelJNI.SimmKinematicsEngine_computeReactions(swigCPtr, this, SWIGTYPE_p_a_3__double.getCPtr(rForces), SWIGTYPE_p_a_3__double.getCPtr(rTorques));
  }

  public void formMassMatrix(SWIGTYPE_p_double rI) {
    opensimModelJNI.SimmKinematicsEngine_formMassMatrix(swigCPtr, this, SWIGTYPE_p_double.getCPtr(rI));
  }

  public void formEulerTransform(AbstractBody aBody, SWIGTYPE_p_double rE) {
    opensimModelJNI.SimmKinematicsEngine_formEulerTransform(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, SWIGTYPE_p_double.getCPtr(rE));
  }

  public void formJacobianTranslation(AbstractBody aBody, double[] aPoint, SWIGTYPE_p_double rJ, AbstractBody aRefBody) {
    opensimModelJNI.SimmKinematicsEngine_formJacobianTranslation__SWIG_0(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, aPoint, SWIGTYPE_p_double.getCPtr(rJ), AbstractBody.getCPtr(aRefBody), aRefBody);
  }

  public void formJacobianTranslation(AbstractBody aBody, double[] aPoint, SWIGTYPE_p_double rJ) {
    opensimModelJNI.SimmKinematicsEngine_formJacobianTranslation__SWIG_1(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, aPoint, SWIGTYPE_p_double.getCPtr(rJ));
  }

  public void formJacobianOrientation(AbstractBody aBody, SWIGTYPE_p_double rJ0, AbstractBody aRefBody) {
    opensimModelJNI.SimmKinematicsEngine_formJacobianOrientation__SWIG_0(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, SWIGTYPE_p_double.getCPtr(rJ0), AbstractBody.getCPtr(aRefBody), aRefBody);
  }

  public void formJacobianOrientation(AbstractBody aBody, SWIGTYPE_p_double rJ0) {
    opensimModelJNI.SimmKinematicsEngine_formJacobianOrientation__SWIG_1(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, SWIGTYPE_p_double.getCPtr(rJ0));
  }

  public void formJacobianEuler(AbstractBody aBody, SWIGTYPE_p_double rJE, AbstractBody aRefBody) {
    opensimModelJNI.SimmKinematicsEngine_formJacobianEuler__SWIG_0(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, SWIGTYPE_p_double.getCPtr(rJE), AbstractBody.getCPtr(aRefBody), aRefBody);
  }

  public void formJacobianEuler(AbstractBody aBody, SWIGTYPE_p_double rJE) {
    opensimModelJNI.SimmKinematicsEngine_formJacobianEuler__SWIG_1(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody, SWIGTYPE_p_double.getCPtr(rJE));
  }

  public void computeDerivatives(SWIGTYPE_p_double dqdt, SWIGTYPE_p_double dudt) {
    opensimModelJNI.SimmKinematicsEngine_computeDerivatives(swigCPtr, this, SWIGTYPE_p_double.getCPtr(dqdt), SWIGTYPE_p_double.getCPtr(dudt));
  }

  public void transform(AbstractBody aBodyFrom, double[] aVec, AbstractBody aBodyTo, double[] rVec) {
    opensimModelJNI.SimmKinematicsEngine_transform__SWIG_0(swigCPtr, this, AbstractBody.getCPtr(aBodyFrom), aBodyFrom, aVec, AbstractBody.getCPtr(aBodyTo), aBodyTo, rVec);
  }

  public void transform(AbstractBody aBodyFrom, ArrayDouble aVec, AbstractBody aBodyTo, ArrayDouble rVec) {
    opensimModelJNI.SimmKinematicsEngine_transform__SWIG_1(swigCPtr, this, AbstractBody.getCPtr(aBodyFrom), aBodyFrom, ArrayDouble.getCPtr(aVec), aVec, AbstractBody.getCPtr(aBodyTo), aBodyTo, ArrayDouble.getCPtr(rVec), rVec);
  }

  public void transformPosition(AbstractBody aBodyFrom, double[] aPos, AbstractBody aBodyTo, double[] rPos) {
    opensimModelJNI.SimmKinematicsEngine_transformPosition__SWIG_0(swigCPtr, this, AbstractBody.getCPtr(aBodyFrom), aBodyFrom, aPos, AbstractBody.getCPtr(aBodyTo), aBodyTo, rPos);
  }

  public void transformPosition(AbstractBody aBodyFrom, ArrayDouble aPos, AbstractBody aBodyTo, ArrayDouble rPos) {
    opensimModelJNI.SimmKinematicsEngine_transformPosition__SWIG_1(swigCPtr, this, AbstractBody.getCPtr(aBodyFrom), aBodyFrom, ArrayDouble.getCPtr(aPos), aPos, AbstractBody.getCPtr(aBodyTo), aBodyTo, ArrayDouble.getCPtr(rPos), rPos);
  }

  public void transformPosition(AbstractBody aBodyFrom, double[] aPos, double[] rPos) {
    opensimModelJNI.SimmKinematicsEngine_transformPosition__SWIG_2(swigCPtr, this, AbstractBody.getCPtr(aBodyFrom), aBodyFrom, aPos, rPos);
  }

  public void transformPosition(AbstractBody aBodyFrom, ArrayDouble aPos, ArrayDouble rPos) {
    opensimModelJNI.SimmKinematicsEngine_transformPosition__SWIG_3(swigCPtr, this, AbstractBody.getCPtr(aBodyFrom), aBodyFrom, ArrayDouble.getCPtr(aPos), aPos, ArrayDouble.getCPtr(rPos), rPos);
  }

  public double calcDistance(AbstractBody aBody1, double[] aPoint1, AbstractBody aBody2, double[] aPoint2) {
    return opensimModelJNI.SimmKinematicsEngine_calcDistance__SWIG_0(swigCPtr, this, AbstractBody.getCPtr(aBody1), aBody1, aPoint1, AbstractBody.getCPtr(aBody2), aBody2, aPoint2);
  }

  public double calcDistance(AbstractBody aBody1, ArrayDouble aPoint1, AbstractBody aBody2, ArrayDouble aPoint2) {
    return opensimModelJNI.SimmKinematicsEngine_calcDistance__SWIG_1(swigCPtr, this, AbstractBody.getCPtr(aBody1), aBody1, ArrayDouble.getCPtr(aPoint1), aPoint1, AbstractBody.getCPtr(aBody2), aBody2, ArrayDouble.getCPtr(aPoint2), aPoint2);
  }

  public void convertQuaternionsToAngles(SWIGTYPE_p_double aQ, SWIGTYPE_p_double rQAng) {
    opensimModelJNI.SimmKinematicsEngine_convertQuaternionsToAngles__SWIG_0(swigCPtr, this, SWIGTYPE_p_double.getCPtr(aQ), SWIGTYPE_p_double.getCPtr(rQAng));
  }

  public void convertQuaternionsToAngles(Storage rQStore) {
    opensimModelJNI.SimmKinematicsEngine_convertQuaternionsToAngles__SWIG_1(swigCPtr, this, Storage.getCPtr(rQStore), rQStore);
  }

  public void convertAnglesToQuaternions(SWIGTYPE_p_double aQAng, SWIGTYPE_p_double rQ) {
    opensimModelJNI.SimmKinematicsEngine_convertAnglesToQuaternions__SWIG_0(swigCPtr, this, SWIGTYPE_p_double.getCPtr(aQAng), SWIGTYPE_p_double.getCPtr(rQ));
  }

  public void convertAnglesToQuaternions(Storage rQStore) {
    opensimModelJNI.SimmKinematicsEngine_convertAnglesToQuaternions__SWIG_1(swigCPtr, this, Storage.getCPtr(rQStore), rQStore);
  }

  public void convertAnglesToDirectionCosines(double aE1, double aE2, double aE3, SWIGTYPE_p_a_3__double rDirCos) {
    opensimModelJNI.SimmKinematicsEngine_convertAnglesToDirectionCosines__SWIG_0(swigCPtr, this, aE1, aE2, aE3, SWIGTYPE_p_a_3__double.getCPtr(rDirCos));
  }

  public void convertAnglesToDirectionCosines(double aE1, double aE2, double aE3, SWIGTYPE_p_double rDirCos) {
    opensimModelJNI.SimmKinematicsEngine_convertAnglesToDirectionCosines__SWIG_1(swigCPtr, this, aE1, aE2, aE3, SWIGTYPE_p_double.getCPtr(rDirCos));
  }

  public void convertDirectionCosinesToAngles(SWIGTYPE_p_a_3__double aDirCos, SWIGTYPE_p_double rE1, SWIGTYPE_p_double rE2, SWIGTYPE_p_double rE3) {
    opensimModelJNI.SimmKinematicsEngine_convertDirectionCosinesToAngles__SWIG_0(swigCPtr, this, SWIGTYPE_p_a_3__double.getCPtr(aDirCos), SWIGTYPE_p_double.getCPtr(rE1), SWIGTYPE_p_double.getCPtr(rE2), SWIGTYPE_p_double.getCPtr(rE3));
  }

  public void convertDirectionCosinesToAngles(SWIGTYPE_p_double aDirCos, SWIGTYPE_p_double rE1, SWIGTYPE_p_double rE2, SWIGTYPE_p_double rE3) {
    opensimModelJNI.SimmKinematicsEngine_convertDirectionCosinesToAngles__SWIG_1(swigCPtr, this, SWIGTYPE_p_double.getCPtr(aDirCos), SWIGTYPE_p_double.getCPtr(rE1), SWIGTYPE_p_double.getCPtr(rE2), SWIGTYPE_p_double.getCPtr(rE3));
  }

  public void convertDirectionCosinesToQuaternions(SWIGTYPE_p_a_3__double aDirCos, SWIGTYPE_p_double rQ1, SWIGTYPE_p_double rQ2, SWIGTYPE_p_double rQ3, SWIGTYPE_p_double rQ4) {
    opensimModelJNI.SimmKinematicsEngine_convertDirectionCosinesToQuaternions__SWIG_0(swigCPtr, this, SWIGTYPE_p_a_3__double.getCPtr(aDirCos), SWIGTYPE_p_double.getCPtr(rQ1), SWIGTYPE_p_double.getCPtr(rQ2), SWIGTYPE_p_double.getCPtr(rQ3), SWIGTYPE_p_double.getCPtr(rQ4));
  }

  public void convertDirectionCosinesToQuaternions(SWIGTYPE_p_double aDirCos, SWIGTYPE_p_double rQ1, SWIGTYPE_p_double rQ2, SWIGTYPE_p_double rQ3, SWIGTYPE_p_double rQ4) {
    opensimModelJNI.SimmKinematicsEngine_convertDirectionCosinesToQuaternions__SWIG_1(swigCPtr, this, SWIGTYPE_p_double.getCPtr(aDirCos), SWIGTYPE_p_double.getCPtr(rQ1), SWIGTYPE_p_double.getCPtr(rQ2), SWIGTYPE_p_double.getCPtr(rQ3), SWIGTYPE_p_double.getCPtr(rQ4));
  }

  public void convertQuaternionsToDirectionCosines(double aQ1, double aQ2, double aQ3, double aQ4, SWIGTYPE_p_a_3__double rDirCos) {
    opensimModelJNI.SimmKinematicsEngine_convertQuaternionsToDirectionCosines__SWIG_0(swigCPtr, this, aQ1, aQ2, aQ3, aQ4, SWIGTYPE_p_a_3__double.getCPtr(rDirCos));
  }

  public void convertQuaternionsToDirectionCosines(double aQ1, double aQ2, double aQ3, double aQ4, SWIGTYPE_p_double rDirCos) {
    opensimModelJNI.SimmKinematicsEngine_convertQuaternionsToDirectionCosines__SWIG_1(swigCPtr, this, aQ1, aQ2, aQ3, aQ4, SWIGTYPE_p_double.getCPtr(rDirCos));
  }

  public void computeConstrainedCoordinates(double[] rQ) {
    opensimModelJNI.SimmKinematicsEngine_computeConstrainedCoordinates(swigCPtr, this, rQ);
  }

}
