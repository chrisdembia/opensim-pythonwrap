/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class GeneralizedForce extends AbstractActuator {
  private long swigCPtr;

  public GeneralizedForce(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGStorageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(GeneralizedForce obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_GeneralizedForce(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public GeneralizedForce(String aCoordinateName) {
    this(opensimModelJNI.new_GeneralizedForce__SWIG_0(aCoordinateName), true);
  }

  public GeneralizedForce() {
    this(opensimModelJNI.new_GeneralizedForce__SWIG_1(), true);
  }

  public GeneralizedForce(GeneralizedForce aGenForce) {
    this(opensimModelJNI.new_GeneralizedForce__SWIG_2(GeneralizedForce.getCPtr(aGenForce), aGenForce), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.GeneralizedForce_copy__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void copyData(GeneralizedForce aGenForce) {
    opensimModelJNI.GeneralizedForce_copyData(swigCPtr, this, GeneralizedForce.getCPtr(aGenForce), aGenForce);
  }

  public void setQ(AbstractCoordinate aQ) {
    opensimModelJNI.GeneralizedForce_setQ(swigCPtr, this, AbstractCoordinate.getCPtr(aQ), aQ);
  }

  public AbstractCoordinate getQ() {
    long cPtr = opensimModelJNI.GeneralizedForce_getQ(swigCPtr, this);
    return (cPtr == 0) ? null : new AbstractCoordinate(cPtr, false);
  }

  public void setOptimalForce(double aOptimalForce) {
    opensimModelJNI.GeneralizedForce_setOptimalForce(swigCPtr, this, aOptimalForce);
  }

  public double getOptimalForce() {
    return opensimModelJNI.GeneralizedForce_getOptimalForce(swigCPtr, this);
  }

  public double getStress() {
    return opensimModelJNI.GeneralizedForce_getStress(swigCPtr, this);
  }

  public void apply() {
    opensimModelJNI.GeneralizedForce_apply(swigCPtr, this);
  }

  public void computeActuation() {
    opensimModelJNI.GeneralizedForce_computeActuation(swigCPtr, this);
  }

  public static ActuatorSet CreateActuatorSetOfGeneralizedForcesForModel(Model aModel, double aOptimalForce, boolean aIncludeLockedAndConstrainedCoordinates) {
    long cPtr = opensimModelJNI.GeneralizedForce_CreateActuatorSetOfGeneralizedForcesForModel__SWIG_0(Model.getCPtr(aModel), aModel, aOptimalForce, aIncludeLockedAndConstrainedCoordinates);
    return (cPtr == 0) ? null : new ActuatorSet(cPtr, false);
  }

  public static ActuatorSet CreateActuatorSetOfGeneralizedForcesForModel(Model aModel, double aOptimalForce) {
    long cPtr = opensimModelJNI.GeneralizedForce_CreateActuatorSetOfGeneralizedForcesForModel__SWIG_1(Model.getCPtr(aModel), aModel, aOptimalForce);
    return (cPtr == 0) ? null : new ActuatorSet(cPtr, false);
  }

  public static ActuatorSet CreateActuatorSetOfGeneralizedForcesForModel(Model aModel) {
    long cPtr = opensimModelJNI.GeneralizedForce_CreateActuatorSetOfGeneralizedForcesForModel__SWIG_2(Model.getCPtr(aModel), aModel);
    return (cPtr == 0) ? null : new ActuatorSet(cPtr, false);
  }

  public boolean check() {
    return opensimModelJNI.GeneralizedForce_check(swigCPtr, this);
  }

  public boolean isQValid() {
    return opensimModelJNI.GeneralizedForce_isQValid(swigCPtr, this);
  }

  public void setup(Model aModel) {
    opensimModelJNI.GeneralizedForce_setup(swigCPtr, this, Model.getCPtr(aModel), aModel);
  }

  public void updateFromXMLNode() {
    opensimModelJNI.GeneralizedForce_updateFromXMLNode(swigCPtr, this);
  }

  public static boolean isKindOf(String type) {
    return opensimModelJNI.GeneralizedForce_isKindOf(type);
  }

  public boolean isA(String type) {
    return opensimModelJNI.GeneralizedForce_isA(swigCPtr, this, type);
  }

  public static GeneralizedForce safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelJNI.GeneralizedForce_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new GeneralizedForce(cPtr, false);
  }

  public void copy(OpenSimObject aObject) {
    opensimModelJNI.GeneralizedForce_copy__SWIG_1(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

}
