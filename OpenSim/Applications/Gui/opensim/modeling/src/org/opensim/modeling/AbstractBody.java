/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class AbstractBody extends OpenSimObject {
  private long swigCPtr;

  public AbstractBody(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGStorageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(AbstractBody obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_AbstractBody(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.AbstractBody_copy__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void copyData(AbstractBody aBody) {
    opensimModelJNI.AbstractBody_copyData(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody);
  }

  public AbstractDynamicsEngine getDynamicsEngine() {
    long cPtr = opensimModelJNI.AbstractBody_getDynamicsEngine(swigCPtr, this);
    return (cPtr == 0) ? null : new AbstractDynamicsEngine(cPtr, false);
  }

  public void setup(AbstractDynamicsEngine aEngine) {
    opensimModelJNI.AbstractBody_setup(swigCPtr, this, AbstractDynamicsEngine.getCPtr(aEngine), aEngine);
  }

  public double getMass() {
    return opensimModelJNI.AbstractBody_getMass(swigCPtr, this);
  }

  public boolean setMass(double aMass) {
    return opensimModelJNI.AbstractBody_setMass(swigCPtr, this, aMass);
  }

  public void getMassCenter(SWIGTYPE_p_SimTK__Vec3 rVec) {
    opensimModelJNI.AbstractBody_getMassCenter(swigCPtr, this, SWIGTYPE_p_SimTK__Vec3.getCPtr(rVec));
  }

  public boolean setMassCenter(SWIGTYPE_p_SimTK__Vec3 aVec) {
    return opensimModelJNI.AbstractBody_setMassCenter(swigCPtr, this, SWIGTYPE_p_SimTK__Vec3.getCPtr(aVec));
  }

  public void getInertia(SWIGTYPE_p_SimTK__Mat33 rInertia) {
    opensimModelJNI.AbstractBody_getInertia(swigCPtr, this, SWIGTYPE_p_SimTK__Mat33.getCPtr(rInertia));
  }

  public boolean setInertia(SWIGTYPE_p_SimTK__Mat33 aInertia) {
    return opensimModelJNI.AbstractBody_setInertia(swigCPtr, this, SWIGTYPE_p_SimTK__Mat33.getCPtr(aInertia));
  }

  public void scale(SWIGTYPE_p_SimTK__Vec3 aScaleFactors, boolean aScaleMass) {
    opensimModelJNI.AbstractBody_scale__SWIG_0(swigCPtr, this, SWIGTYPE_p_SimTK__Vec3.getCPtr(aScaleFactors), aScaleMass);
  }

  public void scale(SWIGTYPE_p_SimTK__Vec3 aScaleFactors) {
    opensimModelJNI.AbstractBody_scale__SWIG_1(swigCPtr, this, SWIGTYPE_p_SimTK__Vec3.getCPtr(aScaleFactors));
  }

  public void scaleInertialProperties(SWIGTYPE_p_SimTK__Vec3 aScaleFactors, boolean aScaleMass) {
    opensimModelJNI.AbstractBody_scaleInertialProperties__SWIG_0(swigCPtr, this, SWIGTYPE_p_SimTK__Vec3.getCPtr(aScaleFactors), aScaleMass);
  }

  public void scaleInertialProperties(SWIGTYPE_p_SimTK__Vec3 aScaleFactors) {
    opensimModelJNI.AbstractBody_scaleInertialProperties__SWIG_1(swigCPtr, this, SWIGTYPE_p_SimTK__Vec3.getCPtr(aScaleFactors));
  }

  public void scaleMass(double aScaleFactor) {
    opensimModelJNI.AbstractBody_scaleMass(swigCPtr, this, aScaleFactor);
  }

  public VisibleObject getDisplayer() {
    long cPtr = opensimModelJNI.AbstractBody_getDisplayer(swigCPtr, this);
    return (cPtr == 0) ? null : new VisibleObject(cPtr, false);
  }

  public void setDisplayer(VisibleObject aVisibleObject) {
    opensimModelJNI.AbstractBody_setDisplayer(swigCPtr, this, VisibleObject.getCPtr(aVisibleObject), aVisibleObject);
  }

  public AbstractWrapObject getWrapObject(String aName) {
    long cPtr = opensimModelJNI.AbstractBody_getWrapObject(swigCPtr, this, aName);
    return (cPtr == 0) ? null : new AbstractWrapObject(cPtr, false);
  }

  public WrapObjectSet getWrapObjectSet() {
    return new WrapObjectSet(opensimModelJNI.AbstractBody_getWrapObjectSet(swigCPtr, this), false);
  }

  public void setDynamicsEngine(AbstractDynamicsEngine aEngine) {
    opensimModelJNI.AbstractBody_setDynamicsEngine(swigCPtr, this, AbstractDynamicsEngine.getCPtr(aEngine), aEngine);
  }

  public static boolean isKindOf(String type) {
    return opensimModelJNI.AbstractBody_isKindOf(type);
  }

  public boolean isA(String type) {
    return opensimModelJNI.AbstractBody_isA(swigCPtr, this, type);
  }

  public static AbstractBody safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelJNI.AbstractBody_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new AbstractBody(cPtr, false);
  }

  public void copy(OpenSimObject aObject) {
    opensimModelJNI.AbstractBody_copy__SWIG_1(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

}
