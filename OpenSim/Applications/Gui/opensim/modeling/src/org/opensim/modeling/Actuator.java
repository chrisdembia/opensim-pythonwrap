/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class Actuator extends OpenSimObject {
  private long swigCPtr;

  protected Actuator(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGActuatorUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Actuator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_Actuator(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public static double getLARGE() {
    return opensimModelJNI.Actuator_LARGE_get();
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.Actuator_copy__SWIG_0(swigCPtr);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public OpenSimObject copy(SWIGTYPE_p_DOMElement aElement) {
    long cPtr = opensimModelJNI.Actuator_copy__SWIG_1(swigCPtr, SWIGTYPE_p_DOMElement.getCPtr(aElement));
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void setModel(Model aModel) {
    opensimModelJNI.Actuator_setModel(swigCPtr, Model.getCPtr(aModel));
  }

  public Model getModel() {
    long cPtr = opensimModelJNI.Actuator_getModel(swigCPtr);
    return (cPtr == 0) ? null : new Model(cPtr, false);
  }

  public int getNX() {
    return opensimModelJNI.Actuator_getNX(swigCPtr);
  }

  public String getControlName(int aIndex) {
    return opensimModelJNI.Actuator_getControlName(swigCPtr, aIndex);
  }

  public int getControlIndex(String aName) {
    return opensimModelJNI.Actuator_getControlIndex(swigCPtr, aName);
  }

  public void setControl(int aIndex, double aValue) {
    opensimModelJNI.Actuator_setControl__SWIG_0(swigCPtr, aIndex, aValue);
  }

  public void setControl(String aName, double aValue) {
    opensimModelJNI.Actuator_setControl__SWIG_1(swigCPtr, aName, aValue);
  }

  public void setControls(double[] aX) {
    opensimModelJNI.Actuator_setControls(swigCPtr, aX);
  }

  public double getControl(int aIndex) {
    return opensimModelJNI.Actuator_getControl__SWIG_0(swigCPtr, aIndex);
  }

  public double getControl(String aName) {
    return opensimModelJNI.Actuator_getControl__SWIG_1(swigCPtr, aName);
  }

  public void getControls(double[] rX) {
    opensimModelJNI.Actuator_getControls(swigCPtr, rX);
  }

  public int getNY() {
    return opensimModelJNI.Actuator_getNY(swigCPtr);
  }

  public String getStateName(int aIndex) {
    return opensimModelJNI.Actuator_getStateName(swigCPtr, aIndex);
  }

  public int getStateIndex(String aName) {
    return opensimModelJNI.Actuator_getStateIndex(swigCPtr, aName);
  }

  public void setState(int aIndex, double aValue) {
    opensimModelJNI.Actuator_setState__SWIG_0(swigCPtr, aIndex, aValue);
  }

  public void setState(String aName, double aValue) {
    opensimModelJNI.Actuator_setState__SWIG_1(swigCPtr, aName, aValue);
  }

  public void setStates(double[] aY) {
    opensimModelJNI.Actuator_setStates(swigCPtr, aY);
  }

  public double getState(int aIndex) {
    return opensimModelJNI.Actuator_getState__SWIG_0(swigCPtr, aIndex);
  }

  public double getState(String aName) {
    return opensimModelJNI.Actuator_getState__SWIG_1(swigCPtr, aName);
  }

  public void getStates(double[] rY) {
    opensimModelJNI.Actuator_getStates(swigCPtr, rY);
  }

  public int getNYP() {
    return opensimModelJNI.Actuator_getNYP(swigCPtr);
  }

  public String getPseudoStateName(int aIndex) {
    return opensimModelJNI.Actuator_getPseudoStateName(swigCPtr, aIndex);
  }

  public int getPseudoStateIndex(String aName) {
    return opensimModelJNI.Actuator_getPseudoStateIndex(swigCPtr, aName);
  }

  public void setPseudoState(int aIndex, double aValue) {
    opensimModelJNI.Actuator_setPseudoState__SWIG_0(swigCPtr, aIndex, aValue);
  }

  public void setPseudoState(String aName, double aValue) {
    opensimModelJNI.Actuator_setPseudoState__SWIG_1(swigCPtr, aName, aValue);
  }

  public void setPseudoStates(double[] aY) {
    opensimModelJNI.Actuator_setPseudoStates(swigCPtr, aY);
  }

  public double getPseudoState(int aIndex) {
    return opensimModelJNI.Actuator_getPseudoState__SWIG_0(swigCPtr, aIndex);
  }

  public double getPseudoState(String aName) {
    return opensimModelJNI.Actuator_getPseudoState__SWIG_1(swigCPtr, aName);
  }

  public void getPseudoStates(double[] rY) {
    opensimModelJNI.Actuator_getPseudoStates(swigCPtr, rY);
  }

  public void setArea(double aArea) {
    opensimModelJNI.Actuator_setArea(swigCPtr, aArea);
  }

  public double getArea() {
    return opensimModelJNI.Actuator_getArea(swigCPtr);
  }

  public boolean getAppliesForce() {
    return opensimModelJNI.Actuator_getAppliesForce(swigCPtr);
  }

  public void setForce(double aForce) {
    opensimModelJNI.Actuator_setForce(swigCPtr, aForce);
  }

  public double getForce() {
    return opensimModelJNI.Actuator_getForce(swigCPtr);
  }

  public double getStress() {
    return opensimModelJNI.Actuator_getStress(swigCPtr);
  }

  public double getSpeed() {
    return opensimModelJNI.Actuator_getSpeed(swigCPtr);
  }

  public double getPower() {
    return opensimModelJNI.Actuator_getPower(swigCPtr);
  }

  public void setMaxForce(double aMax) {
    opensimModelJNI.Actuator_setMaxForce(swigCPtr, aMax);
  }

  public double getMaxForce() {
    return opensimModelJNI.Actuator_getMaxForce(swigCPtr);
  }

  public void setMinForce(double aMin) {
    opensimModelJNI.Actuator_setMinForce(swigCPtr, aMin);
  }

  public double getMinForce() {
    return opensimModelJNI.Actuator_getMinForce(swigCPtr);
  }

  public void setOptimalForce(double aOptimalForce) {
    opensimModelJNI.Actuator_setOptimalForce(swigCPtr, aOptimalForce);
  }

  public double getOptimalForce() {
    return opensimModelJNI.Actuator_getOptimalForce(swigCPtr);
  }

  public void promoteControlsToStates(double[] aX, double aDT) {
    opensimModelJNI.Actuator_promoteControlsToStates(swigCPtr, aX, aDT);
  }

  public void computeActuation() {
    opensimModelJNI.Actuator_computeActuation(swigCPtr);
  }

  public void computeStateDerivatives(double[] rDYDT) {
    opensimModelJNI.Actuator_computeStateDerivatives(swigCPtr, rDYDT);
  }

  public void updatePseudoStates() {
    opensimModelJNI.Actuator_updatePseudoStates(swigCPtr);
  }

  public void apply() {
    opensimModelJNI.Actuator_apply(swigCPtr);
  }

  public boolean check() {
    return opensimModelJNI.Actuator_check(swigCPtr);
  }

}
