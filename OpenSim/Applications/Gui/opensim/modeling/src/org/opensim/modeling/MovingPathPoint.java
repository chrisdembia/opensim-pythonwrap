/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class MovingPathPoint extends PathPoint {
  private long swigCPtr;

  public MovingPathPoint(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGStorageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(MovingPathPoint obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_MovingPathPoint(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public MovingPathPoint() {
    this(opensimModelJNI.new_MovingPathPoint__SWIG_0(), true);
  }

  public MovingPathPoint(MovingPathPoint aPoint) {
    this(opensimModelJNI.new_MovingPathPoint__SWIG_1(MovingPathPoint.getCPtr(aPoint), aPoint), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.MovingPathPoint_copy__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void copyData(MovingPathPoint aPoint) {
    opensimModelJNI.MovingPathPoint_copyData(swigCPtr, this, MovingPathPoint.getCPtr(aPoint), aPoint);
  }

  public void updateFromXMLNode() {
    opensimModelJNI.MovingPathPoint_updateFromXMLNode(swigCPtr, this);
  }

  public void init(PathPoint aPoint) {
    opensimModelJNI.MovingPathPoint_init(swigCPtr, this, PathPoint.getCPtr(aPoint), aPoint);
  }

  public Coordinate getXCoordinate() {
    long cPtr = opensimModelJNI.MovingPathPoint_getXCoordinate(swigCPtr, this);
    return (cPtr == 0) ? null : new Coordinate(cPtr, false);
  }

  public Coordinate getYCoordinate() {
    long cPtr = opensimModelJNI.MovingPathPoint_getYCoordinate(swigCPtr, this);
    return (cPtr == 0) ? null : new Coordinate(cPtr, false);
  }

  public Coordinate getZCoordinate() {
    long cPtr = opensimModelJNI.MovingPathPoint_getZCoordinate(swigCPtr, this);
    return (cPtr == 0) ? null : new Coordinate(cPtr, false);
  }

  public String getXCoordinateName() {
    return opensimModelJNI.MovingPathPoint_getXCoordinateName(swigCPtr, this);
  }

  public String getYCoordinateName() {
    return opensimModelJNI.MovingPathPoint_getYCoordinateName(swigCPtr, this);
  }

  public String getZCoordinateName() {
    return opensimModelJNI.MovingPathPoint_getZCoordinateName(swigCPtr, this);
  }

  public Function getXFunction() {
    long cPtr = opensimModelJNI.MovingPathPoint_getXFunction(swigCPtr, this);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public Function getYFunction() {
    long cPtr = opensimModelJNI.MovingPathPoint_getYFunction(swigCPtr, this);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public Function getZFunction() {
    long cPtr = opensimModelJNI.MovingPathPoint_getZFunction(swigCPtr, this);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public void scale(SWIGTYPE_p_SimTK__State s, SWIGTYPE_p_SimTK__Vec3 aScaleFactors) {
    opensimModelJNI.MovingPathPoint_scale(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), SWIGTYPE_p_SimTK__Vec3.getCPtr(aScaleFactors));
  }

  public static boolean isKindOf(String type) {
    return opensimModelJNI.MovingPathPoint_isKindOf(type);
  }

  public boolean isA(String type) {
    return opensimModelJNI.MovingPathPoint_isA(swigCPtr, this, type);
  }

  public static MovingPathPoint safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelJNI.MovingPathPoint_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new MovingPathPoint(cPtr, false);
  }

  public void copy(OpenSimObject aObject) {
    opensimModelJNI.MovingPathPoint_copy__SWIG_1(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

}
