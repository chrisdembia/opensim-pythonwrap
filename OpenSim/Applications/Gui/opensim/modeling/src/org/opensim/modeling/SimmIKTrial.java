/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class SimmIKTrial extends OpenSimObject {
  private long swigCPtr;

  public SimmIKTrial(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGStorageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(SimmIKTrial obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_SimmIKTrial(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public SimmIKTrial() {
    this(opensimModelJNI.new_SimmIKTrial__SWIG_0(), true);
  }

  public SimmIKTrial(SimmIKTrial aIKTrialParams) {
    this(opensimModelJNI.new_SimmIKTrial__SWIG_1(SimmIKTrial.getCPtr(aIKTrialParams)), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.SimmIKTrial_copy(swigCPtr);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void copyData(SimmIKTrial aIKTrialParams) {
    opensimModelJNI.SimmIKTrial_copyData(swigCPtr, SimmIKTrial.getCPtr(aIKTrialParams));
  }

  public double getStartTime() {
    return opensimModelJNI.SimmIKTrial_getStartTime(swigCPtr);
  }

  public double getEndTime() {
    return opensimModelJNI.SimmIKTrial_getEndTime(swigCPtr);
  }

  public double getKinematicsSmoothing() {
    return opensimModelJNI.SimmIKTrial_getKinematicsSmoothing(swigCPtr);
  }

  public double getGroundReactionSmoothing() {
    return opensimModelJNI.SimmIKTrial_getGroundReactionSmoothing(swigCPtr);
  }

  public boolean getIncludeMarkers() {
    return opensimModelJNI.SimmIKTrial_getIncludeMarkers(swigCPtr);
  }

  public void setStartTime(double aTime) {
    opensimModelJNI.SimmIKTrial_setStartTime(swigCPtr, aTime);
  }

  public void setEndTime(double aTime) {
    opensimModelJNI.SimmIKTrial_setEndTime(swigCPtr, aTime);
  }

  public void setIncludeMarkers(boolean aValue) {
    opensimModelJNI.SimmIKTrial_setIncludeMarkers(swigCPtr, aValue);
  }

  public void findFrameRange(Storage aData, SWIGTYPE_p_int oStartFrame, SWIGTYPE_p_int oEndFrame) {
    opensimModelJNI.SimmIKTrial_findFrameRange(swigCPtr, Storage.getCPtr(aData), SWIGTYPE_p_int.getCPtr(oStartFrame), SWIGTYPE_p_int.getCPtr(oEndFrame));
  }

  public boolean processTrial(AbstractModel aModel, IKTaskSet aIKTaskSet) {
    return opensimModelJNI.SimmIKTrial_processTrial(swigCPtr, AbstractModel.getCPtr(aModel), IKTaskSet.getCPtr(aIKTaskSet));
  }

  public boolean processTrialCommon(AbstractModel aModel, IKTaskSet aIKTaskSet, SimmMarkerData aMarkerData, Storage aOutputStorage) {
    return opensimModelJNI.SimmIKTrial_processTrialCommon(swigCPtr, AbstractModel.getCPtr(aModel), IKTaskSet.getCPtr(aIKTaskSet), SimmMarkerData.getCPtr(aMarkerData), Storage.getCPtr(aOutputStorage));
  }

  public String getMarkerDataFilename() {
    return opensimModelJNI.SimmIKTrial_getMarkerDataFilename(swigCPtr);
  }

  public String getOutputMotionFilename() {
    return opensimModelJNI.SimmIKTrial_getOutputMotionFilename(swigCPtr);
  }

  public void setOutputMotionFilename(String aOutputMotionFilename) {
    opensimModelJNI.SimmIKTrial_setOutputMotionFilename(swigCPtr, aOutputMotionFilename);
  }

  public String getCoordinateFileName() {
    return opensimModelJNI.SimmIKTrial_getCoordinateFileName(swigCPtr);
  }

  public void setCoordinateFileName(String aFilename) {
    opensimModelJNI.SimmIKTrial_setCoordinateFileName(swigCPtr, aFilename);
  }

  public void peteTest() {
    opensimModelJNI.SimmIKTrial_peteTest(swigCPtr);
  }

}
