/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class ArrayMusclePoint {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public ArrayMusclePoint(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(ArrayMusclePoint obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_ArrayMusclePoint(swigCPtr);
    }
    swigCPtr = 0;
  }

  public ArrayMusclePoint(MusclePoint aDefaultValue, int aSize, int aCapacity) {
    this(opensimModelJNI.new_ArrayMusclePoint__SWIG_0(MusclePoint.getCPtr(aDefaultValue), aSize, aCapacity), true);
  }

  public ArrayMusclePoint(MusclePoint aDefaultValue, int aSize) {
    this(opensimModelJNI.new_ArrayMusclePoint__SWIG_1(MusclePoint.getCPtr(aDefaultValue), aSize), true);
  }

  public ArrayMusclePoint(MusclePoint aDefaultValue) {
    this(opensimModelJNI.new_ArrayMusclePoint__SWIG_2(MusclePoint.getCPtr(aDefaultValue)), true);
  }

  public ArrayMusclePoint() {
    this(opensimModelJNI.new_ArrayMusclePoint__SWIG_3(), true);
  }

  public ArrayMusclePoint(ArrayMusclePoint aArray) {
    this(opensimModelJNI.new_ArrayMusclePoint__SWIG_4(ArrayMusclePoint.getCPtr(aArray), aArray), true);
  }

  public boolean computeNewCapacity(int aMinCapacity, SWIGTYPE_p_int rNewCapacity) {
    return opensimModelJNI.ArrayMusclePoint_computeNewCapacity(swigCPtr, this, aMinCapacity, SWIGTYPE_p_int.getCPtr(rNewCapacity));
  }

  public boolean ensureCapacity(int aCapacity) {
    return opensimModelJNI.ArrayMusclePoint_ensureCapacity(swigCPtr, this, aCapacity);
  }

  public void trim() {
    opensimModelJNI.ArrayMusclePoint_trim(swigCPtr, this);
  }

  public int getCapacity() {
    return opensimModelJNI.ArrayMusclePoint_getCapacity(swigCPtr, this);
  }

  public void setCapacityIncrement(int aIncrement) {
    opensimModelJNI.ArrayMusclePoint_setCapacityIncrement(swigCPtr, this, aIncrement);
  }

  public int getCapacityIncrement() {
    return opensimModelJNI.ArrayMusclePoint_getCapacityIncrement(swigCPtr, this);
  }

  public boolean setSize(int aSize) {
    return opensimModelJNI.ArrayMusclePoint_setSize(swigCPtr, this, aSize);
  }

  public int getSize() {
    return opensimModelJNI.ArrayMusclePoint_getSize(swigCPtr, this);
  }

  public int append(MusclePoint aValue) {
    return opensimModelJNI.ArrayMusclePoint_append__SWIG_0(swigCPtr, this, MusclePoint.getCPtr(aValue));
  }

  public int append(ArrayMusclePoint aArray) {
    return opensimModelJNI.ArrayMusclePoint_append__SWIG_1(swigCPtr, this, ArrayMusclePoint.getCPtr(aArray), aArray);
  }

  public int append(int aSize, SWIGTYPE_p_p_OpenSim__MusclePoint aArray) {
    return opensimModelJNI.ArrayMusclePoint_append__SWIG_2(swigCPtr, this, aSize, SWIGTYPE_p_p_OpenSim__MusclePoint.getCPtr(aArray));
  }

  public int insert(int aIndex, MusclePoint aValue) {
    return opensimModelJNI.ArrayMusclePoint_insert(swigCPtr, this, aIndex, MusclePoint.getCPtr(aValue));
  }

  public int remove(int aIndex) {
    return opensimModelJNI.ArrayMusclePoint_remove(swigCPtr, this, aIndex);
  }

  public void set(int aIndex, MusclePoint aValue) {
    opensimModelJNI.ArrayMusclePoint_set(swigCPtr, this, aIndex, MusclePoint.getCPtr(aValue));
  }

  public SWIGTYPE_p_p_OpenSim__MusclePoint get() {
    long cPtr = opensimModelJNI.ArrayMusclePoint_get__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_OpenSim__MusclePoint(cPtr, false);
  }

  public MusclePoint get(int aIndex) {
    long cPtr = opensimModelJNI.ArrayMusclePoint_get__SWIG_1(swigCPtr, this, aIndex);
    return (cPtr == 0) ? null : new MusclePoint(cPtr, false);
  }

  public MusclePoint getitem(int index) {
    long cPtr = opensimModelJNI.ArrayMusclePoint_getitem(swigCPtr, this, index);
    return (cPtr == 0) ? null : new MusclePoint(cPtr, false);
  }

  public void setitem(int index, MusclePoint val) {
    opensimModelJNI.ArrayMusclePoint_setitem(swigCPtr, this, index, MusclePoint.getCPtr(val), val);
  }

  public MusclePoint getLast() {
    long cPtr = opensimModelJNI.ArrayMusclePoint_getLast(swigCPtr, this);
    return (cPtr == 0) ? null : new MusclePoint(cPtr, false);
  }

  public int findIndex(MusclePoint aValue) {
    return opensimModelJNI.ArrayMusclePoint_findIndex(swigCPtr, this, MusclePoint.getCPtr(aValue));
  }

  public int rfindIndex(MusclePoint aValue) {
    return opensimModelJNI.ArrayMusclePoint_rfindIndex(swigCPtr, this, MusclePoint.getCPtr(aValue));
  }

  public int searchBinary(MusclePoint aValue, boolean aFindFirst, int aLo, int aHi) {
    return opensimModelJNI.ArrayMusclePoint_searchBinary__SWIG_0(swigCPtr, this, MusclePoint.getCPtr(aValue), aFindFirst, aLo, aHi);
  }

  public int searchBinary(MusclePoint aValue, boolean aFindFirst, int aLo) {
    return opensimModelJNI.ArrayMusclePoint_searchBinary__SWIG_1(swigCPtr, this, MusclePoint.getCPtr(aValue), aFindFirst, aLo);
  }

  public int searchBinary(MusclePoint aValue, boolean aFindFirst) {
    return opensimModelJNI.ArrayMusclePoint_searchBinary__SWIG_2(swigCPtr, this, MusclePoint.getCPtr(aValue), aFindFirst);
  }

  public int searchBinary(MusclePoint aValue) {
    return opensimModelJNI.ArrayMusclePoint_searchBinary__SWIG_3(swigCPtr, this, MusclePoint.getCPtr(aValue));
  }

}
