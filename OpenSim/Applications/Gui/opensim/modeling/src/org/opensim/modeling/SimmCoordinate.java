/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class SimmCoordinate extends Coordinate {
  private long swigCPtr;

  protected SimmCoordinate(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGSimmCoordinateUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SimmCoordinate obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_SimmCoordinate(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public SimmCoordinate() {
    this(opensimModelJNI.new_SimmCoordinate__SWIG_0(), true);
  }

  public SimmCoordinate(SWIGTYPE_p_DOMElement aElement) {
    this(opensimModelJNI.new_SimmCoordinate__SWIG_1(SWIGTYPE_p_DOMElement.getCPtr(aElement)), true);
  }

  public SimmCoordinate(SimmCoordinate aCoordinate) {
    this(opensimModelJNI.new_SimmCoordinate__SWIG_2(SimmCoordinate.getCPtr(aCoordinate)), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.SimmCoordinate_copy__SWIG_0(swigCPtr);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public OpenSimObject copy(SWIGTYPE_p_DOMElement aElement) {
    long cPtr = opensimModelJNI.SimmCoordinate_copy__SWIG_1(swigCPtr, SWIGTYPE_p_DOMElement.getCPtr(aElement));
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void copyData(SimmCoordinate aCoordinate) {
    opensimModelJNI.SimmCoordinate_copyData(swigCPtr, SimmCoordinate.getCPtr(aCoordinate));
  }

  public void addJointToList(SimmJoint aJoint) {
    opensimModelJNI.SimmCoordinate_addJointToList(swigCPtr, SimmJoint.getCPtr(aJoint));
  }

  public void addPathToList(SimmPath aPath) {
    opensimModelJNI.SimmCoordinate_addPathToList(swigCPtr, SimmPath.getCPtr(aPath));
  }

  public void setup(SimmKinematicsEngine aEngine) {
    opensimModelJNI.SimmCoordinate_setup(swigCPtr, SimmKinematicsEngine.getCPtr(aEngine));
  }

  public boolean setValue(double value) {
    return opensimModelJNI.SimmCoordinate_setValue__SWIG_0(swigCPtr, value);
  }

  public boolean setValue(SWIGTYPE_p_std__string aValueStr) {
    return opensimModelJNI.SimmCoordinate_setValue__SWIG_1(swigCPtr, SWIGTYPE_p_std__string.getCPtr(aValueStr));
  }

  public double getValue() {
    return opensimModelJNI.SimmCoordinate_getValue(swigCPtr);
  }

  public String getValueStr() {
    return opensimModelJNI.SimmCoordinate_getValueStr(swigCPtr);
  }

  public double getTolerance() {
    return opensimModelJNI.SimmCoordinate_getTolerance(swigCPtr);
  }

  public double getDefaultValue() {
    return opensimModelJNI.SimmCoordinate_getDefaultValue(swigCPtr);
  }

  public double getPDStiffness() {
    return opensimModelJNI.SimmCoordinate_getPDStiffness(swigCPtr);
  }

  public double getIKweight() {
    return opensimModelJNI.SimmCoordinate_getIKweight(swigCPtr);
  }

  public void getRange(double[] range) {
    opensimModelJNI.SimmCoordinate_getRange(swigCPtr, range);
  }

  public double getRangeMin() {
    return opensimModelJNI.SimmCoordinate_getRangeMin(swigCPtr);
  }

  public double getRangeMax() {
    return opensimModelJNI.SimmCoordinate_getRangeMax(swigCPtr);
  }

  public void getKeys(SWIGTYPE_p_std__string keys) {
    opensimModelJNI.SimmCoordinate_getKeys(swigCPtr, SWIGTYPE_p_std__string.getCPtr(keys));
  }

  public SWIGTYPE_p_OpenSim__ArrayTOpenSim__SimmJoint_p_t getJointList() {
    return new SWIGTYPE_p_OpenSim__ArrayTOpenSim__SimmJoint_p_t(opensimModelJNI.SimmCoordinate_getJointList(swigCPtr), false);
  }

  public SWIGTYPE_p_OpenSim__ArrayTOpenSim__SimmPath_p_t getPathList() {
    return new SWIGTYPE_p_OpenSim__ArrayTOpenSim__SimmPath_p_t(opensimModelJNI.SimmCoordinate_getPathList(swigCPtr), false);
  }

  public boolean isUsedInModel() {
    return opensimModelJNI.SimmCoordinate_isUsedInModel(swigCPtr);
  }

  public boolean isClamped() {
    return opensimModelJNI.SimmCoordinate_isClamped(swigCPtr);
  }

  public boolean isLocked() {
    return opensimModelJNI.SimmCoordinate_isLocked(swigCPtr);
  }

  public void setLocked(boolean aState) {
    opensimModelJNI.SimmCoordinate_setLocked(swigCPtr, aState);
  }

  public boolean isRestraintActive() {
    return opensimModelJNI.SimmCoordinate_isRestraintActive(swigCPtr);
  }

  public Function getRestraintFunction() {
    long cPtr = opensimModelJNI.SimmCoordinate_getRestraintFunction(swigCPtr);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public Function getMinRestraintFunction() {
    long cPtr = opensimModelJNI.SimmCoordinate_getMinRestraintFunction(swigCPtr);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public Function getMaxRestraintFunction() {
    long cPtr = opensimModelJNI.SimmCoordinate_getMaxRestraintFunction(swigCPtr);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public void updateFromCoordinate(SimmCoordinate aCoordinate) {
    opensimModelJNI.SimmCoordinate_updateFromCoordinate(swigCPtr, SimmCoordinate.getCPtr(aCoordinate));
  }

  public void writeSIMM(SWIGTYPE_p_std__ofstream out, SWIGTYPE_p_int aFunctionIndex) {
    opensimModelJNI.SimmCoordinate_writeSIMM(swigCPtr, SWIGTYPE_p_std__ofstream.getCPtr(out), SWIGTYPE_p_int.getCPtr(aFunctionIndex));
  }

  public void peteTest() {
    opensimModelJNI.SimmCoordinate_peteTest(swigCPtr);
  }

  public void setRestraintFunction(Function aFunction) {
    opensimModelJNI.SimmCoordinate_setRestraintFunction(swigCPtr, Function.getCPtr(aFunction));
  }

}
