/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class ModelScaler extends OpenSimObject {
  private long swigCPtr;

  public ModelScaler(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGStorageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(ModelScaler obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_ModelScaler(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public ModelScaler() {
    this(opensimModelJNI.new_ModelScaler__SWIG_0(), true);
  }

  public ModelScaler(ModelScaler aModelScaler) {
    this(opensimModelJNI.new_ModelScaler__SWIG_1(ModelScaler.getCPtr(aModelScaler), aModelScaler), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.ModelScaler_copy(swigCPtr, this);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void copyData(ModelScaler aModelScaler) {
    opensimModelJNI.ModelScaler_copyData(swigCPtr, this, ModelScaler.getCPtr(aModelScaler), aModelScaler);
  }

  public boolean processModel(SWIGTYPE_p_SimTK__State s, Model aModel, String aPathToSubject, double aFinalMass) {
    return opensimModelJNI.ModelScaler_processModel__SWIG_0(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), Model.getCPtr(aModel), aModel, aPathToSubject, aFinalMass);
  }

  public boolean processModel(SWIGTYPE_p_SimTK__State s, Model aModel, String aPathToSubject) {
    return opensimModelJNI.ModelScaler_processModel__SWIG_1(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), Model.getCPtr(aModel), aModel, aPathToSubject);
  }

  public boolean processModel(SWIGTYPE_p_SimTK__State s, Model aModel) {
    return opensimModelJNI.ModelScaler_processModel__SWIG_2(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), Model.getCPtr(aModel), aModel);
  }

  public static void registerTypes() {
    opensimModelJNI.ModelScaler_registerTypes();
  }

  public void addMeasurement(Measurement aMeasurement) {
    opensimModelJNI.ModelScaler_addMeasurement(swigCPtr, this, Measurement.getCPtr(aMeasurement), aMeasurement);
  }

  public void addScale(Scale aScale) {
    opensimModelJNI.ModelScaler_addScale(swigCPtr, this, Scale.getCPtr(aScale), aScale);
  }

  public boolean getApply() {
    return opensimModelJNI.ModelScaler_getApply(swigCPtr, this);
  }

  public void setApply(boolean aApply) {
    opensimModelJNI.ModelScaler_setApply(swigCPtr, this, aApply);
  }

  public MeasurementSet getMeasurementSet() {
    return new MeasurementSet(opensimModelJNI.ModelScaler_getMeasurementSet(swigCPtr, this), false);
  }

  public void setMeasurementSet(MeasurementSet measurementSet) {
    opensimModelJNI.ModelScaler_setMeasurementSet(swigCPtr, this, MeasurementSet.getCPtr(measurementSet), measurementSet);
  }

  public ScaleSet getScaleSet() {
    return new ScaleSet(opensimModelJNI.ModelScaler_getScaleSet(swigCPtr, this), false);
  }

  public void setScaleSetFile(String aScaleSetFilename) {
    opensimModelJNI.ModelScaler_setScaleSetFile(swigCPtr, this, aScaleSetFilename);
  }

  public ArrayDouble getTimeRange() {
    return new ArrayDouble(opensimModelJNI.ModelScaler_getTimeRange(swigCPtr, this), false);
  }

  public void setTimeRange(ArrayDouble timeRange) {
    opensimModelJNI.ModelScaler_setTimeRange(swigCPtr, this, ArrayDouble.getCPtr(timeRange), timeRange);
  }

  public boolean getPreserveMassDist() {
    return opensimModelJNI.ModelScaler_getPreserveMassDist(swigCPtr, this);
  }

  public void setPreserveMassDist(boolean preserveMassDist) {
    opensimModelJNI.ModelScaler_setPreserveMassDist(swigCPtr, this, preserveMassDist);
  }

  public ArrayStr getScalingOrder() {
    return new ArrayStr(opensimModelJNI.ModelScaler_getScalingOrder(swigCPtr, this), false);
  }

  public void setScalingOrder(ArrayStr scalingOrder) {
    opensimModelJNI.ModelScaler_setScalingOrder(swigCPtr, this, ArrayStr.getCPtr(scalingOrder), scalingOrder);
  }

  public String getMarkerFileName() {
    return opensimModelJNI.ModelScaler_getMarkerFileName(swigCPtr, this);
  }

  public void setMarkerFileName(String aMarkerFileName) {
    opensimModelJNI.ModelScaler_setMarkerFileName(swigCPtr, this, aMarkerFileName);
  }

  public String getOutputJointFileName() {
    return opensimModelJNI.ModelScaler_getOutputJointFileName(swigCPtr, this);
  }

  public void setOutputJointFileName(String outputJointFileName) {
    opensimModelJNI.ModelScaler_setOutputJointFileName(swigCPtr, this, outputJointFileName);
  }

  public String getOutputMuscleFileName() {
    return opensimModelJNI.ModelScaler_getOutputMuscleFileName(swigCPtr, this);
  }

  public void setOutputMuscleFileName(String aOutputMuscleFileName) {
    opensimModelJNI.ModelScaler_setOutputMuscleFileName(swigCPtr, this, aOutputMuscleFileName);
  }

  public String getOutputModelFileName() {
    return opensimModelJNI.ModelScaler_getOutputModelFileName(swigCPtr, this);
  }

  public void setOutputModelFileName(String aOutputModelFileName) {
    opensimModelJNI.ModelScaler_setOutputModelFileName(swigCPtr, this, aOutputModelFileName);
  }

  public String getOutputScaleFileName() {
    return opensimModelJNI.ModelScaler_getOutputScaleFileName(swigCPtr, this);
  }

  public void setOutputScaleFileName(String aOutputScaleFileName) {
    opensimModelJNI.ModelScaler_setOutputScaleFileName(swigCPtr, this, aOutputScaleFileName);
  }

  public void setPrintResultFiles(boolean aToWrite) {
    opensimModelJNI.ModelScaler_setPrintResultFiles(swigCPtr, this, aToWrite);
  }

  public double computeMeasurementScaleFactor(SWIGTYPE_p_SimTK__State s, Model aModel, MarkerData aMarkerData, Measurement aMeasurement) {
    return opensimModelJNI.ModelScaler_computeMeasurementScaleFactor(swigCPtr, this, SWIGTYPE_p_SimTK__State.getCPtr(s), Model.getCPtr(aModel), aModel, MarkerData.getCPtr(aMarkerData), aMarkerData, Measurement.getCPtr(aMeasurement), aMeasurement);
  }

}
