/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class IKTrial extends OpenSimObject {
  private long swigCPtr;

  public IKTrial(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGStorageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(IKTrial obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_IKTrial(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public IKTrial() {
    this(opensimModelJNI.new_IKTrial__SWIG_0(), true);
  }

  public IKTrial(IKTrial aIKTrialParams) {
    this(opensimModelJNI.new_IKTrial__SWIG_1(IKTrial.getCPtr(aIKTrialParams), aIKTrialParams), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.IKTrial_copy(swigCPtr, this);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void copyData(IKTrial aIKTrialParams) {
    opensimModelJNI.IKTrial_copyData(swigCPtr, this, IKTrial.getCPtr(aIKTrialParams), aIKTrialParams);
  }

  public double getStartTime() {
    return opensimModelJNI.IKTrial_getStartTime(swigCPtr, this);
  }

  public double getEndTime() {
    return opensimModelJNI.IKTrial_getEndTime(swigCPtr, this);
  }

  public double getKinematicsSmoothing() {
    return opensimModelJNI.IKTrial_getKinematicsSmoothing(swigCPtr, this);
  }

  public double getGroundReactionSmoothing() {
    return opensimModelJNI.IKTrial_getGroundReactionSmoothing(swigCPtr, this);
  }

  public boolean getIncludeMarkers() {
    return opensimModelJNI.IKTrial_getIncludeMarkers(swigCPtr, this);
  }

  public void setStartTime(double aTime) {
    opensimModelJNI.IKTrial_setStartTime(swigCPtr, this, aTime);
  }

  public void setEndTime(double aTime) {
    opensimModelJNI.IKTrial_setEndTime(swigCPtr, this, aTime);
  }

  public void setIncludeMarkers(boolean aValue) {
    opensimModelJNI.IKTrial_setIncludeMarkers(swigCPtr, this, aValue);
  }

  public void findFrameRange(Storage aData, SWIGTYPE_p_int oStartFrame, SWIGTYPE_p_int oEndFrame) {
    opensimModelJNI.IKTrial_findFrameRange(swigCPtr, this, Storage.getCPtr(aData), aData, SWIGTYPE_p_int.getCPtr(oStartFrame), SWIGTYPE_p_int.getCPtr(oEndFrame));
  }

  public boolean processTrial(Model aModel, IKTaskSet aIKTaskSet) {
    return opensimModelJNI.IKTrial_processTrial(swigCPtr, this, Model.getCPtr(aModel), aModel, IKTaskSet.getCPtr(aIKTaskSet), aIKTaskSet);
  }

  public boolean processTrialCommon(Model aModel, IKTaskSet aIKTaskSet, MarkerData aMarkerData, Storage aOutputStorage) {
    return opensimModelJNI.IKTrial_processTrialCommon(swigCPtr, this, Model.getCPtr(aModel), aModel, IKTaskSet.getCPtr(aIKTaskSet), aIKTaskSet, MarkerData.getCPtr(aMarkerData), aMarkerData, Storage.getCPtr(aOutputStorage), aOutputStorage);
  }

  public String getMarkerDataFilename() {
    return opensimModelJNI.IKTrial_getMarkerDataFilename(swigCPtr, this);
  }

  public String getOutputMotionFilename() {
    return opensimModelJNI.IKTrial_getOutputMotionFilename(swigCPtr, this);
  }

  public void setOutputMotionFilename(String aOutputMotionFilename) {
    opensimModelJNI.IKTrial_setOutputMotionFilename(swigCPtr, this, aOutputMotionFilename);
  }

  public String getCoordinateFileName() {
    return opensimModelJNI.IKTrial_getCoordinateFileName(swigCPtr, this);
  }

  public void setCoordinateFileName(String aFilename) {
    opensimModelJNI.IKTrial_setCoordinateFileName(swigCPtr, this, aFilename);
  }

  public void peteTest() {
    opensimModelJNI.IKTrial_peteTest(swigCPtr, this);
  }

}
