/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class Torque extends AbstractActuator {
  private long swigCPtr;

  public Torque(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGStorageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Torque obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_Torque(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public Torque(String aBodyAName, String aBodyBName) {
    this(opensimModelJNI.new_Torque__SWIG_0(aBodyAName, aBodyBName), true);
  }

  public Torque(String aBodyAName) {
    this(opensimModelJNI.new_Torque__SWIG_1(aBodyAName), true);
  }

  public Torque() {
    this(opensimModelJNI.new_Torque__SWIG_2(), true);
  }

  public Torque(Torque aTorque) {
    this(opensimModelJNI.new_Torque__SWIG_3(Torque.getCPtr(aTorque), aTorque), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.Torque_copy__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void setBodyA(AbstractBody aBody) {
    opensimModelJNI.Torque_setBodyA(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody);
  }

  public AbstractBody getBodyA() {
    long cPtr = opensimModelJNI.Torque_getBodyA(swigCPtr, this);
    return (cPtr == 0) ? null : new AbstractBody(cPtr, false);
  }

  public void setDirectionA(SWIGTYPE_p_SimTK__Vec3 aDirection) {
    opensimModelJNI.Torque_setDirectionA(swigCPtr, this, SWIGTYPE_p_SimTK__Vec3.getCPtr(aDirection));
  }

  public void getDirectionA(SWIGTYPE_p_SimTK__Vec3 rDirection) {
    opensimModelJNI.Torque_getDirectionA(swigCPtr, this, SWIGTYPE_p_SimTK__Vec3.getCPtr(rDirection));
  }

  public void setBodyB(AbstractBody aBody) {
    opensimModelJNI.Torque_setBodyB(swigCPtr, this, AbstractBody.getCPtr(aBody), aBody);
  }

  public AbstractBody getBodyB() {
    long cPtr = opensimModelJNI.Torque_getBodyB(swigCPtr, this);
    return (cPtr == 0) ? null : new AbstractBody(cPtr, false);
  }

  public void getDirectionB(SWIGTYPE_p_SimTK__Vec3 rDirection) {
    opensimModelJNI.Torque_getDirectionB(swigCPtr, this, SWIGTYPE_p_SimTK__Vec3.getCPtr(rDirection));
  }

  public void setOptimalForce(double aOptimalForce) {
    opensimModelJNI.Torque_setOptimalForce(swigCPtr, this, aOptimalForce);
  }

  public double getOptimalForce() {
    return opensimModelJNI.Torque_getOptimalForce(swigCPtr, this);
  }

  public double getStress() {
    return opensimModelJNI.Torque_getStress(swigCPtr, this);
  }

  public void apply() {
    opensimModelJNI.Torque_apply(swigCPtr, this);
  }

  public void computeActuation() {
    opensimModelJNI.Torque_computeActuation(swigCPtr, this);
  }

  public void computeDirectionForBodyB() {
    opensimModelJNI.Torque_computeDirectionForBodyB(swigCPtr, this);
  }

  public void computeSpeed() {
    opensimModelJNI.Torque_computeSpeed(swigCPtr, this);
  }

  public boolean check() {
    return opensimModelJNI.Torque_check(swigCPtr, this);
  }

  public void setup(Model aModel) {
    opensimModelJNI.Torque_setup(swigCPtr, this, Model.getCPtr(aModel), aModel);
  }

  public static boolean isKindOf(String type) {
    return opensimModelJNI.Torque_isKindOf(type);
  }

  public boolean isA(String type) {
    return opensimModelJNI.Torque_isA(swigCPtr, this, type);
  }

  public static Torque safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelJNI.Torque_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new Torque(cPtr, false);
  }

  public void copy(OpenSimObject aObject) {
    opensimModelJNI.Torque_copy__SWIG_1(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

}
