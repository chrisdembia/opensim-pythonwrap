/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class ActuatorSet extends SetActuators {
  private long swigCPtr;

  protected ActuatorSet(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGActuatorSetUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ActuatorSet obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_ActuatorSet(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public ActuatorSet() {
    this(opensimModelJNI.new_ActuatorSet__SWIG_0(), true);
  }

  public ActuatorSet(String aFileName) {
    this(opensimModelJNI.new_ActuatorSet__SWIG_1(aFileName), true);
  }

  public void setModel(Model aModel) {
    opensimModelJNI.ActuatorSet_setModel(swigCPtr, Model.getCPtr(aModel));
  }

  public Model getModel() {
    long cPtr = opensimModelJNI.ActuatorSet_getModel(swigCPtr);
    return (cPtr == 0) ? null : new Model(cPtr, false);
  }

  public boolean remove(int aIndex) {
    return opensimModelJNI.ActuatorSet_remove(swigCPtr, aIndex);
  }

  public boolean append(Actuator aActuator) {
    return opensimModelJNI.ActuatorSet_append(swigCPtr, Actuator.getCPtr(aActuator));
  }

  public boolean set(int aIndex, Actuator aActuator) {
    return opensimModelJNI.ActuatorSet_set(swigCPtr, aIndex, Actuator.getCPtr(aActuator));
  }

  public int getNX() {
    return opensimModelJNI.ActuatorSet_getNX(swigCPtr);
  }

  public int mapActuatorToControl(int aActuatorIndex) {
    return opensimModelJNI.ActuatorSet_mapActuatorToControl(swigCPtr, aActuatorIndex);
  }

  public int mapControlToActuator(int aControlIndex) {
    return opensimModelJNI.ActuatorSet_mapControlToActuator(swigCPtr, aControlIndex);
  }

  public int getControlIndex(String aName) {
    return opensimModelJNI.ActuatorSet_getControlIndex(swigCPtr, aName);
  }

  public String getControlName(int aIndex) {
    return opensimModelJNI.ActuatorSet_getControlName(swigCPtr, aIndex);
  }

  public void setControl(int aIndex, double aValue) {
    opensimModelJNI.ActuatorSet_setControl__SWIG_0(swigCPtr, aIndex, aValue);
  }

  public void setControl(String aName, double aValue) {
    opensimModelJNI.ActuatorSet_setControl__SWIG_1(swigCPtr, aName, aValue);
  }

  public void setControls(double[] aX) {
    opensimModelJNI.ActuatorSet_setControls(swigCPtr, aX);
  }

  public double getControl(int aIndex) {
    return opensimModelJNI.ActuatorSet_getControl__SWIG_0(swigCPtr, aIndex);
  }

  public double getControl(String aName) {
    return opensimModelJNI.ActuatorSet_getControl__SWIG_1(swigCPtr, aName);
  }

  public void getControls(double[] rX) {
    opensimModelJNI.ActuatorSet_getControls(swigCPtr, rX);
  }

  public int getNY() {
    return opensimModelJNI.ActuatorSet_getNY(swigCPtr);
  }

  public int mapActuatorToState(int aActuatorIndex) {
    return opensimModelJNI.ActuatorSet_mapActuatorToState(swigCPtr, aActuatorIndex);
  }

  public int mapStateToActuator(int aStateIndex) {
    return opensimModelJNI.ActuatorSet_mapStateToActuator(swigCPtr, aStateIndex);
  }

  public int getStateIndex(String aName) {
    return opensimModelJNI.ActuatorSet_getStateIndex(swigCPtr, aName);
  }

  public String getStateName(int aIndex) {
    return opensimModelJNI.ActuatorSet_getStateName(swigCPtr, aIndex);
  }

  public void setState(int aIndex, double aValue) {
    opensimModelJNI.ActuatorSet_setState__SWIG_0(swigCPtr, aIndex, aValue);
  }

  public void setState(String aName, double aValue) {
    opensimModelJNI.ActuatorSet_setState__SWIG_1(swigCPtr, aName, aValue);
  }

  public void setStates(double[] aY) {
    opensimModelJNI.ActuatorSet_setStates(swigCPtr, aY);
  }

  public double getState(int aIndex) {
    return opensimModelJNI.ActuatorSet_getState__SWIG_0(swigCPtr, aIndex);
  }

  public double getState(String aName) {
    return opensimModelJNI.ActuatorSet_getState__SWIG_1(swigCPtr, aName);
  }

  public void getStates(double[] rY) {
    opensimModelJNI.ActuatorSet_getStates(swigCPtr, rY);
  }

  public int getNYP() {
    return opensimModelJNI.ActuatorSet_getNYP(swigCPtr);
  }

  public int mapActuatorToPseudoState(int aActuatorIndex) {
    return opensimModelJNI.ActuatorSet_mapActuatorToPseudoState(swigCPtr, aActuatorIndex);
  }

  public int mapPseudoStateToActuator(int aPseudoStateIndex) {
    return opensimModelJNI.ActuatorSet_mapPseudoStateToActuator(swigCPtr, aPseudoStateIndex);
  }

  public int getPseudoStateIndex(String aName) {
    return opensimModelJNI.ActuatorSet_getPseudoStateIndex(swigCPtr, aName);
  }

  public String getPseudoStateName(int aIndex) {
    return opensimModelJNI.ActuatorSet_getPseudoStateName(swigCPtr, aIndex);
  }

  public void setPseudoState(int aIndex, double aValue) {
    opensimModelJNI.ActuatorSet_setPseudoState__SWIG_0(swigCPtr, aIndex, aValue);
  }

  public void setPseudoState(String aName, double aValue) {
    opensimModelJNI.ActuatorSet_setPseudoState__SWIG_1(swigCPtr, aName, aValue);
  }

  public void setPseudoStates(double[] aY) {
    opensimModelJNI.ActuatorSet_setPseudoStates(swigCPtr, aY);
  }

  public double getPseudoState(int aIndex) {
    return opensimModelJNI.ActuatorSet_getPseudoState__SWIG_0(swigCPtr, aIndex);
  }

  public double getPseudoState(String aName) {
    return opensimModelJNI.ActuatorSet_getPseudoState__SWIG_1(swigCPtr, aName);
  }

  public void getPseudoStates(double[] rY) {
    opensimModelJNI.ActuatorSet_getPseudoStates(swigCPtr, rY);
  }

  public void promoteControlsToStates(double[] aX, double aDT) {
    opensimModelJNI.ActuatorSet_promoteControlsToStates(swigCPtr, aX, aDT);
  }

  public void computeActuation() {
    opensimModelJNI.ActuatorSet_computeActuation(swigCPtr);
  }

  public void computeStateDerivatives(double[] rDY) {
    opensimModelJNI.ActuatorSet_computeStateDerivatives(swigCPtr, rDY);
  }

  public void updatePseudoStates() {
    opensimModelJNI.ActuatorSet_updatePseudoStates(swigCPtr);
  }

  public void apply() {
    opensimModelJNI.ActuatorSet_apply(swigCPtr);
  }

  public boolean check() {
    return opensimModelJNI.ActuatorSet_check(swigCPtr);
  }

}
