/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class MovingMusclePoint extends MusclePoint {
  private long swigCPtr;

  public MovingMusclePoint(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGStorageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(MovingMusclePoint obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_MovingMusclePoint(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public MovingMusclePoint() {
    this(opensimModelJNI.new_MovingMusclePoint__SWIG_0(), true);
  }

  public MovingMusclePoint(MovingMusclePoint aPoint) {
    this(opensimModelJNI.new_MovingMusclePoint__SWIG_1(MovingMusclePoint.getCPtr(aPoint), aPoint), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.MovingMusclePoint_copy__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void copyData(MovingMusclePoint aPoint) {
    opensimModelJNI.MovingMusclePoint_copyData(swigCPtr, this, MovingMusclePoint.getCPtr(aPoint), aPoint);
  }

  public AbstractCoordinate getXCoordinate() {
    long cPtr = opensimModelJNI.MovingMusclePoint_getXCoordinate(swigCPtr, this);
    return (cPtr == 0) ? null : new AbstractCoordinate(cPtr, false);
  }

  public AbstractCoordinate getYCoordinate() {
    long cPtr = opensimModelJNI.MovingMusclePoint_getYCoordinate(swigCPtr, this);
    return (cPtr == 0) ? null : new AbstractCoordinate(cPtr, false);
  }

  public AbstractCoordinate getZCoordinate() {
    long cPtr = opensimModelJNI.MovingMusclePoint_getZCoordinate(swigCPtr, this);
    return (cPtr == 0) ? null : new AbstractCoordinate(cPtr, false);
  }

  public void setXCoordinate(AbstractCoordinate aCoordinate) {
    opensimModelJNI.MovingMusclePoint_setXCoordinate(swigCPtr, this, AbstractCoordinate.getCPtr(aCoordinate), aCoordinate);
  }

  public void setYCoordinate(AbstractCoordinate aCoordinate) {
    opensimModelJNI.MovingMusclePoint_setYCoordinate(swigCPtr, this, AbstractCoordinate.getCPtr(aCoordinate), aCoordinate);
  }

  public void setZCoordinate(AbstractCoordinate aCoordinate) {
    opensimModelJNI.MovingMusclePoint_setZCoordinate(swigCPtr, this, AbstractCoordinate.getCPtr(aCoordinate), aCoordinate);
  }

  public String getXCoordinateName() {
    return opensimModelJNI.MovingMusclePoint_getXCoordinateName(swigCPtr, this);
  }

  public String getYCoordinateName() {
    return opensimModelJNI.MovingMusclePoint_getYCoordinateName(swigCPtr, this);
  }

  public String getZCoordinateName() {
    return opensimModelJNI.MovingMusclePoint_getZCoordinateName(swigCPtr, this);
  }

  public Function getXFunction() {
    long cPtr = opensimModelJNI.MovingMusclePoint_getXFunction(swigCPtr, this);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public Function getYFunction() {
    long cPtr = opensimModelJNI.MovingMusclePoint_getYFunction(swigCPtr, this);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public Function getZFunction() {
    long cPtr = opensimModelJNI.MovingMusclePoint_getZFunction(swigCPtr, this);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public void setXFunction(Function aFunction) {
    opensimModelJNI.MovingMusclePoint_setXFunction(swigCPtr, this, Function.getCPtr(aFunction), aFunction);
  }

  public void setYFunction(Function aFunction) {
    opensimModelJNI.MovingMusclePoint_setYFunction(swigCPtr, this, Function.getCPtr(aFunction), aFunction);
  }

  public void setZFunction(Function aFunction) {
    opensimModelJNI.MovingMusclePoint_setZFunction(swigCPtr, this, Function.getCPtr(aFunction), aFunction);
  }

  public void scale(ArrayDouble aScaleFactors) {
    opensimModelJNI.MovingMusclePoint_scale(swigCPtr, this, ArrayDouble.getCPtr(aScaleFactors), aScaleFactors);
  }

  public boolean isActive() {
    return opensimModelJNI.MovingMusclePoint_isActive(swigCPtr, this);
  }

  public void setup(Model aModel, AbstractMuscle aMuscle) {
    opensimModelJNI.MovingMusclePoint_setup(swigCPtr, this, Model.getCPtr(aModel), aModel, AbstractMuscle.getCPtr(aMuscle), aMuscle);
  }

  public void update() {
    opensimModelJNI.MovingMusclePoint_update(swigCPtr, this);
  }

  public void getVelocity(double[] aVelocity) {
    opensimModelJNI.MovingMusclePoint_getVelocity(swigCPtr, this, aVelocity);
  }

  public static boolean isKindOf(String type) {
    return opensimModelJNI.MovingMusclePoint_isKindOf(type);
  }

  public boolean isA(String type) {
    return opensimModelJNI.MovingMusclePoint_isA(swigCPtr, this, type);
  }

  public static MovingMusclePoint safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelJNI.MovingMusclePoint_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new MovingMusclePoint(cPtr, false);
  }

  public void copy(OpenSimObject aObject) {
    opensimModelJNI.MovingMusclePoint_copy__SWIG_1(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

}
