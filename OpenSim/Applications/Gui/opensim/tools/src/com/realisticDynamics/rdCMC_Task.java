/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.realisticDynamics;
import org.opensim.modeling.*;

public class rdCMC_Task extends OpenSimObject {
  private long swigCPtr;

  protected rdCMC_Task(long cPtr, boolean cMemoryOwn) {
    super(cmcJNI.SWIGrdCMC_TaskUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(rdCMC_Task obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      cmcJNI.delete_rdCMC_Task(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public OpenSimObject copy() {
    long cPtr = cmcJNI.rdCMC_Task_copy__SWIG_0(swigCPtr);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public OpenSimObject copy(SWIGTYPE_p_DOMElement aElement) {
    long cPtr = cmcJNI.rdCMC_Task_copy__SWIG_1(swigCPtr, SWIGTYPE_p_DOMElement.getCPtr(aElement));
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void setModel(Model aModel) {
    cmcJNI.rdCMC_Task_setModel(swigCPtr, Model.getCPtr(aModel));
  }

  public Model getModel() {
    long cPtr = cmcJNI.rdCMC_Task_getModel(swigCPtr);
    return (cPtr == 0) ? null : new Model(cPtr, false);
  }

  public void setOn(boolean aTrueFalse) {
    cmcJNI.rdCMC_Task_setOn(swigCPtr, aTrueFalse);
  }

  public boolean getOn() {
    return cmcJNI.rdCMC_Task_getOn(swigCPtr);
  }

  public void setParametersBasedOnName() {
    cmcJNI.rdCMC_Task_setParametersBasedOnName(swigCPtr);
  }

  public void setWRTBody(int aBody) {
    cmcJNI.rdCMC_Task_setWRTBody(swigCPtr, aBody);
  }

  public int getWRTBody() {
    return cmcJNI.rdCMC_Task_getWRTBody(swigCPtr);
  }

  public void setExpressBody(int aBody) {
    cmcJNI.rdCMC_Task_setExpressBody(swigCPtr, aBody);
  }

  public int getExpressBody() {
    return cmcJNI.rdCMC_Task_getExpressBody(swigCPtr);
  }

  public void setActive(boolean a0, boolean a1, boolean a2) {
    cmcJNI.rdCMC_Task_setActive__SWIG_0(swigCPtr, a0, a1, a2);
  }

  public void setActive(boolean a0, boolean a1) {
    cmcJNI.rdCMC_Task_setActive__SWIG_1(swigCPtr, a0, a1);
  }

  public void setActive(boolean a0) {
    cmcJNI.rdCMC_Task_setActive__SWIG_2(swigCPtr, a0);
  }

  public boolean getActive(int aWhich) {
    return cmcJNI.rdCMC_Task_getActive(swigCPtr, aWhich);
  }

  public void setWeight(double aW0, double aW1, double aW2) {
    cmcJNI.rdCMC_Task_setWeight__SWIG_0(swigCPtr, aW0, aW1, aW2);
  }

  public void setWeight(double aW0, double aW1) {
    cmcJNI.rdCMC_Task_setWeight__SWIG_1(swigCPtr, aW0, aW1);
  }

  public void setWeight(double aW0) {
    cmcJNI.rdCMC_Task_setWeight__SWIG_2(swigCPtr, aW0);
  }

  public double getWeight(int aWhich) {
    return cmcJNI.rdCMC_Task_getWeight(swigCPtr, aWhich);
  }

  public void setKP(double aK0, double aK1, double aK2) {
    cmcJNI.rdCMC_Task_setKP__SWIG_0(swigCPtr, aK0, aK1, aK2);
  }

  public void setKP(double aK0, double aK1) {
    cmcJNI.rdCMC_Task_setKP__SWIG_1(swigCPtr, aK0, aK1);
  }

  public void setKP(double aK0) {
    cmcJNI.rdCMC_Task_setKP__SWIG_2(swigCPtr, aK0);
  }

  public double getKP(int aWhich) {
    return cmcJNI.rdCMC_Task_getKP(swigCPtr, aWhich);
  }

  public void setKV(double aK0, double aK1, double aK2) {
    cmcJNI.rdCMC_Task_setKV__SWIG_0(swigCPtr, aK0, aK1, aK2);
  }

  public void setKV(double aK0, double aK1) {
    cmcJNI.rdCMC_Task_setKV__SWIG_1(swigCPtr, aK0, aK1);
  }

  public void setKV(double aK0) {
    cmcJNI.rdCMC_Task_setKV__SWIG_2(swigCPtr, aK0);
  }

  public double getKV(int aWhich) {
    return cmcJNI.rdCMC_Task_getKV(swigCPtr, aWhich);
  }

  public void setKA(double aK0, double aK1, double aK2) {
    cmcJNI.rdCMC_Task_setKA__SWIG_0(swigCPtr, aK0, aK1, aK2);
  }

  public void setKA(double aK0, double aK1) {
    cmcJNI.rdCMC_Task_setKA__SWIG_1(swigCPtr, aK0, aK1);
  }

  public void setKA(double aK0) {
    cmcJNI.rdCMC_Task_setKA__SWIG_2(swigCPtr, aK0);
  }

  public double getKA(int aWhich) {
    return cmcJNI.rdCMC_Task_getKA(swigCPtr, aWhich);
  }

  public void setDirection_0(double[] aR) {
    cmcJNI.rdCMC_Task_setDirection_0(swigCPtr, aR);
  }

  public void getDirection_0(double[] rR) {
    cmcJNI.rdCMC_Task_getDirection_0(swigCPtr, rR);
  }

  public void setDirection_1(double[] aR) {
    cmcJNI.rdCMC_Task_setDirection_1(swigCPtr, aR);
  }

  public void getDirection_1(double[] rR) {
    cmcJNI.rdCMC_Task_getDirection_1(swigCPtr, rR);
  }

  public void setDirection_2(double[] aR) {
    cmcJNI.rdCMC_Task_setDirection_2(swigCPtr, aR);
  }

  public void getDirection_2(double[] rR) {
    cmcJNI.rdCMC_Task_getDirection_2(swigCPtr, rR);
  }

  public int getNumTaskFunctions() {
    return cmcJNI.rdCMC_Task_getNumTaskFunctions(swigCPtr);
  }

  public void setTaskFunctions(Function aF0, Function aF1, Function aF2) {
    cmcJNI.rdCMC_Task_setTaskFunctions__SWIG_0(swigCPtr, Function.getCPtr(aF0), Function.getCPtr(aF1), Function.getCPtr(aF2));
  }

  public void setTaskFunctions(Function aF0, Function aF1) {
    cmcJNI.rdCMC_Task_setTaskFunctions__SWIG_1(swigCPtr, Function.getCPtr(aF0), Function.getCPtr(aF1));
  }

  public void setTaskFunctions(Function aF0) {
    cmcJNI.rdCMC_Task_setTaskFunctions__SWIG_2(swigCPtr, Function.getCPtr(aF0));
  }

  public Function getTaskFunction(int aWhich) {
    long cPtr = cmcJNI.rdCMC_Task_getTaskFunction(swigCPtr, aWhich);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public void setTaskFunctionsForVelocity(Function aF0, Function aF1, Function aF2) {
    cmcJNI.rdCMC_Task_setTaskFunctionsForVelocity__SWIG_0(swigCPtr, Function.getCPtr(aF0), Function.getCPtr(aF1), Function.getCPtr(aF2));
  }

  public void setTaskFunctionsForVelocity(Function aF0, Function aF1) {
    cmcJNI.rdCMC_Task_setTaskFunctionsForVelocity__SWIG_1(swigCPtr, Function.getCPtr(aF0), Function.getCPtr(aF1));
  }

  public void setTaskFunctionsForVelocity(Function aF0) {
    cmcJNI.rdCMC_Task_setTaskFunctionsForVelocity__SWIG_2(swigCPtr, Function.getCPtr(aF0));
  }

  public Function getTaskFunctionForVelocity(int aWhich) {
    long cPtr = cmcJNI.rdCMC_Task_getTaskFunctionForVelocity(swigCPtr, aWhich);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public void setTaskFunctionsForAcceleration(Function aF0, Function aF1, Function aF2) {
    cmcJNI.rdCMC_Task_setTaskFunctionsForAcceleration__SWIG_0(swigCPtr, Function.getCPtr(aF0), Function.getCPtr(aF1), Function.getCPtr(aF2));
  }

  public void setTaskFunctionsForAcceleration(Function aF0, Function aF1) {
    cmcJNI.rdCMC_Task_setTaskFunctionsForAcceleration__SWIG_1(swigCPtr, Function.getCPtr(aF0), Function.getCPtr(aF1));
  }

  public void setTaskFunctionsForAcceleration(Function aF0) {
    cmcJNI.rdCMC_Task_setTaskFunctionsForAcceleration__SWIG_2(swigCPtr, Function.getCPtr(aF0));
  }

  public Function getTaskFunctionForAcceleration(int aWhich) {
    long cPtr = cmcJNI.rdCMC_Task_getTaskFunctionForAcceleration(swigCPtr, aWhich);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public double getTaskPosition(int aWhich, double aT) {
    return cmcJNI.rdCMC_Task_getTaskPosition(swigCPtr, aWhich, aT);
  }

  public double getTaskVelocity(int aWhich, double aT) {
    return cmcJNI.rdCMC_Task_getTaskVelocity(swigCPtr, aWhich, aT);
  }

  public double getTaskAcceleration(int aWhich, double aT) {
    return cmcJNI.rdCMC_Task_getTaskAcceleration(swigCPtr, aWhich, aT);
  }

  public void setPositionErrorLast(double aE0, double aE1, double aE2) {
    cmcJNI.rdCMC_Task_setPositionErrorLast__SWIG_0(swigCPtr, aE0, aE1, aE2);
  }

  public void setPositionErrorLast(double aE0, double aE1) {
    cmcJNI.rdCMC_Task_setPositionErrorLast__SWIG_1(swigCPtr, aE0, aE1);
  }

  public void setPositionErrorLast(double aE0) {
    cmcJNI.rdCMC_Task_setPositionErrorLast__SWIG_2(swigCPtr, aE0);
  }

  public double getPositionErrorLast(int aWhich) {
    return cmcJNI.rdCMC_Task_getPositionErrorLast(swigCPtr, aWhich);
  }

  public void setVelocityErrorLast(double aE0, double aE1, double aE2) {
    cmcJNI.rdCMC_Task_setVelocityErrorLast__SWIG_0(swigCPtr, aE0, aE1, aE2);
  }

  public void setVelocityErrorLast(double aE0, double aE1) {
    cmcJNI.rdCMC_Task_setVelocityErrorLast__SWIG_1(swigCPtr, aE0, aE1);
  }

  public void setVelocityErrorLast(double aE0) {
    cmcJNI.rdCMC_Task_setVelocityErrorLast__SWIG_2(swigCPtr, aE0);
  }

  public double getVelocityErrorLast(int aWhich) {
    return cmcJNI.rdCMC_Task_getVelocityErrorLast(swigCPtr, aWhich);
  }

  public double getPositionError(int aWhich) {
    return cmcJNI.rdCMC_Task_getPositionError(swigCPtr, aWhich);
  }

  public double getVelocityError(int aWhich) {
    return cmcJNI.rdCMC_Task_getVelocityError(swigCPtr, aWhich);
  }

  public double getDesiredAcceleration(int aWhich) {
    return cmcJNI.rdCMC_Task_getDesiredAcceleration(swigCPtr, aWhich);
  }

  public double getAcceleration(int aWhich) {
    return cmcJNI.rdCMC_Task_getAcceleration(swigCPtr, aWhich);
  }

  public void computeErrors(double aT) {
    cmcJNI.rdCMC_Task_computeErrors(swigCPtr, aT);
  }

  public void computeDesiredAccelerations(double aT) {
    cmcJNI.rdCMC_Task_computeDesiredAccelerations__SWIG_0(swigCPtr, aT);
  }

  public void computeDesiredAccelerations(double aTI, double aTF) {
    cmcJNI.rdCMC_Task_computeDesiredAccelerations__SWIG_1(swigCPtr, aTI, aTF);
  }

  public void computeAccelerations() {
    cmcJNI.rdCMC_Task_computeAccelerations(swigCPtr);
  }

  public void computeJacobian() {
    cmcJNI.rdCMC_Task_computeJacobian(swigCPtr);
  }

  public void computeEffectiveMassMatrix() {
    cmcJNI.rdCMC_Task_computeEffectiveMassMatrix(swigCPtr);
  }

  public void updateFromXMLNode() {
    cmcJNI.rdCMC_Task_updateFromXMLNode(swigCPtr);
  }

}
