package org.opensim.tracking;

import java.util.prefs.Preferences;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import org.openide.windows.WindowManager;
import org.opensim.modeling.MarkerPlacer;
import org.opensim.utils.FileUtils;
import org.opensim.utils.TheApp;

public final class MakeDModelVisualPanel extends workflowVisualPanelBase {
    
    /**
     * Creates new form MakeDModelVisualPanel
     */
    public MakeDModelVisualPanel(workflowWizardPanelBase basePanel) {
        super(basePanel);
        initComponents();
        putClientProperty("WizardPanel_helpURL",this.getClass().getResource("help/html/SubjectSpecificWorkflow.htm")); 
    }
    
    public String getName() {
        return "Generate dynamic model";
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
   // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
   private void initComponents() {
      jModelSpecPanel = new javax.swing.JPanel();
      jLabel1 = new javax.swing.JLabel();
      jModelTextField = new javax.swing.JTextField();
      jBrowse4ModelButton = new javax.swing.JButton();
      jLabel2 = new javax.swing.JLabel();
      jSDFastTextField = new javax.swing.JTextField();
      jBrowse4SDFastFileButton = new javax.swing.JButton();
      jMessageTextArea = new javax.swing.JTextArea();

      jModelSpecPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Make SDFast model"));
      org.openide.awt.Mnemonics.setLocalizedText(jLabel1, "Scaled model");

      jBrowse4ModelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/opensim/swingui/FolderOpen.gif")));
      jBrowse4ModelButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBrowse4ModelButtonActionPerformed(evt);
         }
      });

      org.openide.awt.Mnemonics.setLocalizedText(jLabel2, "SDFast model");

      jBrowse4SDFastFileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/opensim/swingui/FolderOpen.gif")));
      jBrowse4SDFastFileButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBrowse4SDFastFileButtonActionPerformed(evt);
         }
      });

      org.jdesktop.layout.GroupLayout jModelSpecPanelLayout = new org.jdesktop.layout.GroupLayout(jModelSpecPanel);
      jModelSpecPanel.setLayout(jModelSpecPanelLayout);
      jModelSpecPanelLayout.setHorizontalGroup(
         jModelSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(jModelSpecPanelLayout.createSequentialGroup()
            .add(jModelSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
               .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(31, 31, 31)
            .add(jModelSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
               .add(jSDFastTextField)
               .add(jModelTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(jModelSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
               .add(jBrowse4ModelButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
               .add(jBrowse4SDFastFileButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );
      jModelSpecPanelLayout.setVerticalGroup(
         jModelSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(jModelSpecPanelLayout.createSequentialGroup()
            .addContainerGap()
            .add(jModelSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
               .add(jLabel1)
               .add(jBrowse4ModelButton)
               .add(jModelTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(14, 14, 14)
            .add(jModelSpecPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
               .add(jLabel2)
               .add(jSDFastTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
               .add(jBrowse4SDFastFileButton))
            .addContainerGap(22, Short.MAX_VALUE))
      );

      jMessageTextArea.setBackground(new java.awt.Color(224, 223, 227));
      jMessageTextArea.setColumns(20);
      jMessageTextArea.setEditable(false);
      jMessageTextArea.setFont(new java.awt.Font("Courier", 0, 12));
      jMessageTextArea.setForeground(new java.awt.Color(204, 0, 51));
      jMessageTextArea.setRows(5);
      jMessageTextArea.setText("The scale step produced a model that needs to\nbe converted to an SDFast based model. \nThis step performs this conversion. The input is \nthe model file created by the scale step \nand the output model will be used by later steps \nthat require dynamics.");
      jMessageTextArea.setWrapStyleWord(true);
      jMessageTextArea.setBorder(null);
      jMessageTextArea.setFocusable(false);
      jMessageTextArea.setOpaque(false);

      org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(jModelSpecPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
         .add(jMessageTextArea, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(layout.createSequentialGroup()
            .add(jModelSpecPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(jMessageTextArea, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 264, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );
   }// </editor-fold>//GEN-END:initComponents

   private void jBrowse4SDFastFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBrowse4SDFastFileButtonActionPerformed
// TODO add your handling code here:
   }//GEN-LAST:event_jBrowse4SDFastFileButtonActionPerformed

    private void jBrowse4ModelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBrowse4ModelButtonActionPerformed
        String defaultDir="";
        defaultDir = Preferences.userNodeForPackage(TheApp.class).get("WorkDirectory", defaultDir);
        final JFileChooser dlog = new JFileChooser(defaultDir);
        dlog.setFileFilter(FileUtils.getFileFilter(".xml", "Model to write dynamics for"));
        if (dlog.showOpenDialog((JFrame) WindowManager.getDefault().getMainWindow()) == JFileChooser.APPROVE_OPTION && dlog.getSelectedFile() != null) {
            jModelTextField.setText(dlog.getSelectedFile().getAbsolutePath());
            Preferences.userNodeForPackage(TheApp.class).put("WorkDirectory", dlog.getSelectedFile().getParent());
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jBrowse4ModelButtonActionPerformed
    
    
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton jBrowse4ModelButton;
   private javax.swing.JButton jBrowse4SDFastFileButton;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JTextArea jMessageTextArea;
   private javax.swing.JPanel jModelSpecPanel;
   private javax.swing.JTextField jModelTextField;
   private javax.swing.JTextField jSDFastTextField;
   // End of variables declaration//GEN-END:variables
    void updateWorkflow(WorkflowDescriptor descriptor) {
        descriptor.setDynamicsModelFile(jModelTextField.getText());
        descriptor.setSDFastFilename(jSDFastTextField.getText());
    }

    void updatePanel(WorkflowDescriptor aDescriptor) {
        // file is the output file from MarkerPlacement by default
        if (aDescriptor.getDynamicsModelFile() == null || aDescriptor.getDynamicsModelFile().equals("")){
            MarkerPlacer params = aDescriptor.getSubject().getMarkerPlacer();
            jModelTextField.setText(aDescriptor.getSubject().getPathToSubject()+params.getOutputModelFileName());
        }
        else
            jModelTextField.setText(aDescriptor.getDynamicsModelFile());
        jSDFastTextField.setText(aDescriptor.getSubject().getPathToSubject());
        
                
        checkConsistentPanel();
       
    }

    public void appendMessage(String message) {
        jMessageTextArea.append(message);
        repaint();
    }
    /**
     * Query the form for the data we need to perform SaveDynamics
     */
    public String getModelFilename()
    {
        return jModelTextField.getText();
    }
    
    public String getSDFastfilename()
    {
        return jSDFastTextField.getText();
    }
    

    public void checkConsistentPanel() {
        setGuiCanAdvance(true);
    }

}

