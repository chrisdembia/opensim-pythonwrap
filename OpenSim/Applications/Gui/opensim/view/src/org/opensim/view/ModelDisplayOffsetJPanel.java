/*
 * ModelDisplayOffsetJPanel.java
 *
 * Created on May 8, 2007, 4:04 PM
 */

package org.opensim.view;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.opensim.modeling.Model;
import org.opensim.view.pub.ViewDB;
import vtk.vtkMatrix4x4;

/**
 *
 * @author  Ayman, A class that backs the model/display-edit functionality where
 * users can change display properties of a model and change its offset.
 */
public class ModelDisplayOffsetJPanel extends javax.swing.JPanel 
                                      implements ChangeListener{
    
    private SingleModelVisuals rep;
    private Model dModel;
    private String modelName;
    private vtkMatrix4x4 offset;
    private vtkMatrix4x4 saveOffset=new vtkMatrix4x4();
    private double saveOpacity;

    /** Creates new form ModelDisplayOffsetJPanel */
    public ModelDisplayOffsetJPanel(Model abstractModel) {
        rep = ViewDB.getInstance().getModelVisuals(abstractModel);
        offset= ViewDB.getInstance().getModelVisualsTransform(rep);
        
        // Save offsets and opacity incase we need to restore them
        saveOffset.DeepCopy(offset);
        saveOpacity = ViewDB.getInstance().getNominalModelOpacity(abstractModel);
        
        this.dModel = abstractModel;
        modelName = abstractModel.getName();

        initComponents();
        
        // Compute bounds and initialize text fields for offsets
        computeDisplacementBounds();
        
        textSliderJPanel1.addChangeListener(this);
        textSliderJPanel2.addChangeListener(this);
        textSliderJPanel3.addChangeListener(this);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        textSliderJPanel1 = new org.opensim.view.TextSliderJPanel();
        jLabel4 = new javax.swing.JLabel();
        textSliderJPanel2 = new org.opensim.view.TextSliderJPanel();
        textSliderJPanel3 = new org.opensim.view.TextSliderJPanel();
        jLabel5 = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel3.setText("Offset X");

        jLabel4.setText("Offset Y");

        jLabel5.setText("Offset Z");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                        .add(jLabel5)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(textSliderJPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(textSliderJPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(textSliderJPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel3)
                    .add(textSliderJPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel4)
                    .add(textSliderJPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel5)
                    .add(textSliderJPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private org.opensim.view.TextSliderJPanel textSliderJPanel1;
    private org.opensim.view.TextSliderJPanel textSliderJPanel2;
    private org.opensim.view.TextSliderJPanel textSliderJPanel3;
    // End of variables declaration//GEN-END:variables
    /**
     * Callback when slide is moved 
     **/
    public void stateChanged(ChangeEvent e) {
        if (e.getSource().equals(textSliderJPanel1.getJXSlider())){
            offset.SetElement(0, 3, textSliderJPanel1.getTheValue());
        } else if (e.getSource().equals(textSliderJPanel2.getJXSlider())){
            offset.SetElement(1, 3, textSliderJPanel2.getTheValue());
        } else if (e.getSource().equals(textSliderJPanel3.getJXSlider())){
            offset.SetElement(2, 3, textSliderJPanel3.getTheValue());
        }
        // Apply transform on screen
        ViewDB.getInstance().setModelVisualsTransform(rep, offset);
        ViewDB.getInstance().repaintAll();
    }
    /** Make up bounds for displacement. Initially it's 3 times the size of the bounding 
     * box of the scene so that the user can move everything out of intersection.
     * This may need to be tuned. When a motion is going to be applied, the user needs
     * to keep this in mind */
    private void computeDisplacementBounds() {
          double[] bounds = ViewDB.getInstance().getSceneBounds();
          // Modify bounds to make the sliders ceneter around 0
          for(int i=0; i<3; i++){
              double max=Math.max(Math.abs(bounds[2*i]), Math.abs(bounds[2*i+1]));
              bounds[2*i] = -max;
              bounds[2*i+1] =max;
          }
          
          // map bounds to range 0-100 for Slider
            double range = bounds[1] - bounds[0];
            textSliderJPanel1.setRange(bounds[0], bounds[1]);
            textSliderJPanel1.setInitialValue(offset.GetElement(0, 3));
            range = bounds[3] - bounds[2];
            textSliderJPanel2.setRange(bounds[2], bounds[3]);
            textSliderJPanel2.setInitialValue(offset.GetElement(1, 3));
            range = bounds[5] - bounds[4];
            textSliderJPanel3.setRange(bounds[4], bounds[5]);
            textSliderJPanel3.setInitialValue(offset.GetElement(2, 3));
     }

    public void restore() {
        ViewDB.getInstance().setNominalModelOpacity(dModel, saveOpacity);
        ViewDB.getInstance().setModelVisualsTransform(rep, saveOffset);
        ViewDB.getInstance().repaintAll();
    }
    
}
