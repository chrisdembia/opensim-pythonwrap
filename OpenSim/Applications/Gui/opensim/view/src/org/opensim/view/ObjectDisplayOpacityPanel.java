/*
 * Copyright (c)  2005-2008, Stanford University
 * Use of the OpenSim software in source form is permitted provided that the following
 * conditions are met:
 * 	1. The software is used only for non-commercial research and education. It may not
 *     be used in relation to any commercial activity.
 * 	2. The software is not distributed or redistributed.  Software distribution is allowed 
 *     only through https://simtk.org/home/opensim.
 * 	3. Use of the OpenSim software or derivatives must be acknowledged in all publications,
 *      presentations, or documents describing work in which OpenSim or derivatives are used.
 * 	4. Credits to developers may not be removed from executables
 *     created from modifications of the source.
 * 	5. Modifications of source code must retain the above copyright notice, this list of
 *     conditions and the following disclaimer. 
 * 
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 *  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 *  SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 *  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
 *  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 *  OR BUSINESS INTERRUPTION) OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 *  WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 * ObjectDisplayOpacityPanel.java
 *
 * Created on August 14, 2007, 7:12 PM
 */

package org.opensim.view;

import java.awt.Dialog;
import java.util.Vector;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.opensim.modeling.OpenSimObject;
import org.opensim.view.pub.ViewDB;
import vtk.vtkProperty;

/**
 *
 * @author  erang
 */
public class ObjectDisplayOpacityPanel extends javax.swing.JPanel {
  
   Vector<OpenSimObject> objects;
   Vector<Double> savedOpacities;
   boolean internalTrigger = false;

   /** Creates new form ObjectDisplayOpacityPanel */
   public ObjectDisplayOpacityPanel(Vector<OpenSimObject> objects) {
      this.objects = objects;

      initComponents();

      savedOpacities = new Vector<Double>(objects.size());
      for(int i=0; i<objects.size(); i++) {
         vtkProperty prop = new vtkProperty();
         ViewDB.getInstance().getObjectProperties(objects.get(i), prop);
         savedOpacities.add((Double)prop.GetOpacity());
      }

      if(objects.size()>0) {
         internalTrigger = true;
         opacitySlider.setValue((int)(savedOpacities.get(0)*100));
         internalTrigger = false;
      }
   }

   void restore() {
      for(int i=0; i<objects.size(); i++)
         ViewDB.getInstance().setObjectOpacity(objects.get(i), savedOpacities.get(i));
   }

   static void showDialog(Vector<OpenSimObject> objects) {
      ObjectDisplayOpacityPanel panel = new ObjectDisplayOpacityPanel(objects);
      DialogDescriptor dlg = new DialogDescriptor(panel, "Select Opacity");
      //dlg.setOptions(new Object[]{DialogDescriptor.OK_OPTION});
      //Dialog dialog = DialogDisplayer.getDefault().createDialog(dlg);
      //dialog.setVisible(true);
      Object answer = DialogDisplayer.getDefault().notify(dlg);
      if(answer != DialogDescriptor.OK_OPTION)
         panel.restore();
   }
   
   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
   private void initComponents() {
      jLabel1 = new javax.swing.JLabel();
      opacitySlider = new javax.swing.JSlider();

      jLabel1.setText("Opacity");

      opacitySlider.addChangeListener(new javax.swing.event.ChangeListener() {
         public void stateChanged(javax.swing.event.ChangeEvent evt) {
            opacitySliderStateChanged(evt);
         }
      });

      org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(layout.createSequentialGroup()
            .addContainerGap()
            .add(jLabel1)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(opacitySlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(layout.createSequentialGroup()
            .addContainerGap()
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
               .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .add(org.jdesktop.layout.GroupLayout.TRAILING, opacitySlider, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );
   }// </editor-fold>//GEN-END:initComponents

   private void opacitySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_opacitySliderStateChanged
      if(internalTrigger) return;
      double newOpacity = (double)opacitySlider.getValue()/100.0;
      for(int i=0; i<objects.size(); i++)
         ViewDB.getInstance().setObjectOpacity(objects.get(i), newOpacity);
   }//GEN-LAST:event_opacitySliderStateChanged
   
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JLabel jLabel1;
   private javax.swing.JSlider opacitySlider;
   // End of variables declaration//GEN-END:variables
}
