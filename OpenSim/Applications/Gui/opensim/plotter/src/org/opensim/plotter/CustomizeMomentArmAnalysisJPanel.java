/*
 * CustomizeMuscleAnalysisJPanel.java
 *
 * Created on June 23, 2007, 10:30 PM
 */

package org.opensim.plotter;

import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import org.opensim.modeling.Analysis;
import org.opensim.modeling.ArrayStorage;
import org.opensim.modeling.ArrayStr;
import org.opensim.modeling.Model;
import org.opensim.modeling.MomentArmAnalysis;
import org.opensim.view.SingleModelGuiElements;
import org.opensim.view.pub.ViewDB;

/**
 *
 * @author  Ayman
 */
public class CustomizeMomentArmAnalysisJPanel extends javax.swing.JPanel {
   private PlotterSourceInterface selectedSource;
   private String muscleName;
   MomentArmAnalysis analysis;
   PlotterModel plotterModel;
   /**
    * Creates new form CustomizeMuscleAnalysisJPanel
    */
   public CustomizeMomentArmAnalysisJPanel(Analysis analysis, PlotterModel plotterModel) {
      this.analysis = MomentArmAnalysis.safeDownCast(analysis);
      this.plotterModel=plotterModel;
      initComponents();
      Model currentModel = ViewDB.getInstance().getCurrentModel();
      SingleModelGuiElements guiElem = ViewDB.getInstance().getModelGuiElements(currentModel);
      Vector<String> muscleNames = guiElem.getActuatorNamesForGroup("all");
      jComboBox1.setModel(new DefaultComboBoxModel(muscleNames.toArray()));

   }

   public String getMuscleName() {
      return muscleName;
   }

   public void setMuscleName(String muscleName) {
      this.muscleName = muscleName;
   }

   public PlotterSourceInterface getSelectedSource() {
      ArrayStorage quantities = analysis.getStorageList();
      PlotterSourceInterface[] availableQuantities = new PlotterSourceInterface[quantities.getSize()];
      Model currentModel = ViewDB.getCurrentModel();
      for(int i=0;i<quantities.getSize();i++){
         String q = quantities.get(i).getName();
         plotterModel.addSource(new PlotterSourceAnalysis(currentModel, quantities.get(i), analysis.getName()+"."+quantities.get(i).getName()));
      }
      selectedSource=plotterModel.findSource(analysis.getName()+"."+quantities.get(0).getName());
      return selectedSource;
   }

   public void setSelectedSource(PlotterSourceInterface selectedSource) {
      this.selectedSource = selectedSource;
   }

   
   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
   private void initComponents() {
      jLabel1 = new javax.swing.JLabel();
      jComboBox1 = new javax.swing.JComboBox();

      jLabel1.setText("Select muscle");

      jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
      jComboBox1.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox1ActionPerformed(evt);
         }
      });

      org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(layout.createSequentialGroup()
            .add(jLabel1)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
            .add(jLabel1)
            .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
      );
   }// </editor-fold>//GEN-END:initComponents

   private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
// TODO add your handling code here:
     String selectedMuscle = (String)jComboBox1.getSelectedItem();
     setMuscleName(selectedMuscle);
     ArrayStr names = new ArrayStr();
     names.append(selectedMuscle);
     analysis.setMuscles(names);
   }//GEN-LAST:event_jComboBox1ActionPerformed
   
   
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JComboBox jComboBox1;
   private javax.swing.JLabel jLabel1;
   // End of variables declaration//GEN-END:variables
   
}
