# EXPORTS FOR CODE DEVELOPMENT
#
# The following text lines should be inserted into ONE
# of the startup files for your cygwin shells.
# This can be done, for example, by executing the command
# "cat rdiExports >> .bashrc" in your cygwin shell.
# Note that if you use ">" instead of ">>" in this
# command, the contents of .bashrc will be replaced
# instead of appended to.  So, make sure you use ">>" ! 
#
# The startup file may be either .bash_profile,
# .bash_login, .bashrc, or .profile, depending on how
# you have your bash shell set up.  See the man pages
# for bash for more details (type "man bash" in your
# cygwin shell).


# ------------------------------------------------------------
# UMASK
# The umask variable sets how permissions on new files will
# be set in your cygwin shell.  To maintain security of
# source code, a umask of 077 is used that will
# make any new file (whether checked out from a repository,
# created with a text editor, etc.) readable and writable
# only by the owner, not anybody else.
# To change the permissions on a file so that it is
# readable by everyone, use the command "chmod a+r file".
# To do this recursively on a directory and all its contents,
# use the command "chmod -R a+r dir".  See the man pages
# on chmod for more details (i.e., in your cygwin shell,
# type "man chmod").
umask 077


# ------------------------------------------------------------
# These directory definitions are made for convenience.
# They may be used for example to navigate around the
# development space.  For example, by typing  "cd $N"
# one can change directory to the $HOME/Dev/Source/Native
# directory.
# ------------------------------------------------------------
export P=$HOME/Projects
export D=$HOME/Dev
export S=$D/Source
export N=$S/Native
export J=$S/Java


# ------------------------------------------------------------
# These directory definitions locate the directories in
# which your include files and libraries are kept.
#
# The "Dev" directories are for include files and libraries
# that are under development.
#
# the "Rel" directories are for include files and libraries
# that have been released.
# ------------------------------------------------------------
export L=$D/LibDev
export I=$D/IncludeDev
export IncDev=$I
export LibDev=$L
export IncRel=$RDI_INSTALL/Include
export LibRel=$RDI_INSTALL/Lib


# ------------------------------------------------------------
# The following definitions are for simplifying using cvs
# to checkout source code from various repositories.
#
# SU identifies the location of the Stanford native (e.g., C++
# or Fortan) repository.  JSU identifies the location of the
# Stanford java repository.
#
# RD identifies the location of the RDI native repository.
#
# JRD identifies the location of the RDI java repository.
#
# PR identifies the location of your "projects" repository.
# Any code that does not consitute part of a general-use library
# or utility should not be kept in any of the Stanford or
# RDI repositories.  You are however encouraged to keep the
# source code and input files for your own projects in your
# own repository.
#
# The string ${USER} below will get set to your Microsoft
# Windows (or actually cygwin) user name when these
# environment variables are exported.
# If your cygwin user name is different from your
# bme.stanford.edu user name, you should substitute your
# bme.stanford.edu user name expcitly for ${USER} below.
# ------------------------------------------------------------
export SU=${USER}@bme.stanford.edu:/home/nmbldev/Repositories/Native
export JSU=${USER}@bme.stanford.edu:/home/nmbldev/Repositories/Java
export RD=${USER}@bme.stanford.edu:/home/fca/Repositories/RealisticDynamics/Native
export JRD=${USER}@bme.stanford.edu:/home/fca/Repositories/RealisticDynamics/Java
export PR=${USER}@bme.stanford.edu:/home/${USER}/Repositories/Projects


# ------------------------------------------------------------
# The following definitions are made so that cvs will operate
# properly.
#
# CVS_RSH tells cvs to use secure shell (ssh), which transmits
# data over the internet using encryption.  This is necessary
# to protect passwords that are used to login to the cvs
# repositories.
#
# CVS_SERVER tells the local (client) cvs where cvs
# resides on the server (bme.stanford.edu).
#
# CVSROOT tells cvs where the default repository is.  In
# this case, CVSROOT is set to be the repository for your
# projects.
# ------------------------------------------------------------
export CVS_RSH=ssh
export CVS_SERVER=/usr/pubsw/bin/cvs
export CVSROOT=$PR

