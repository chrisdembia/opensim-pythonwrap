IF(BUILD_PYTHON_WRAPPING)

# Directory containing the Python module in a CMake installation, relative
# to the CMAKE_INSTALL_PREFIX.
SET(PYTHON_WRAPPING_INSTALL_DIR Python)

FIND_PACKAGE(SWIG REQUIRED)
INCLUDE(${SWIG_USE_FILE})

SET(swig_interface_file_python
    ${CMAKE_CURRENT_SOURCE_DIR}/pythonWrapOpenSim.i)

# Need access to the Python C++ headers and libraries (Python C API).
# http://www.swig.org/Doc2.0/SWIGDocumentation.html#Introduction_build_system
FIND_PACKAGE(PythonLibs REQUIRED)

SET(SimTKSWIG_INCLUDE_PATH ${OpenSim_SOURCE_DIR}/OpenSim/Wrapping/SimTKSWIG)

# Find Python installation, etc.
# =============================================================================
# TODO the below may be worth using on Windows, but PythonLibs
# already lets the user modify these via PYTHON_INCLUDE_DIR and PYTHON_LIBRARY.
## Get the python shared library file. TODO not used yet.
#SET(PYTHON_LIB ${PYTHON_LIBRARIES} CACHE FILEPATH 
#    "Location of Python library (e.g, libpythonX.X.dll or libpythonX.X.so)")
#
## Python headers
## -----------------------------------------------------------------------------
## Get path containing Python.h for first Python installation on the PATH.
#EXECUTE_PROCESS(COMMAND
#    python -c "from distutils.sysconfig import get_python_inc; print get_python_inc()"
#    OUTPUT_VARIABLE FIND_PYTHON_INCLUDE_DIR_ON_PATH
#    OUTPUT_STRIP_TRAILING_WHITESPACE)
#
## Let the user choose actual dir, but set default based on what we found.
#SET(PYTHON_INCLUDE_DIR ${FIND_PYTHON_INCLUDE_DIR_FIRST_ON_PATH} CACHE PATH 
#    "Location of Python headers of Python installation you want to use for wrapping.")
# ^ The above may be unnecessary.
	  
# Numpy headers
# -----------------------------------------------------------------------------
# Get numpy include directory for first Python installation on the PATH.
# Need to do this for Windows machines. It seems that on Linux machines there
# may be a symlink, in the Python headers directory, to the NumPy headers.
EXECUTE_PROCESS(COMMAND
    python -c "from numpy import get_include; print get_include()"
    OUTPUT_VARIABLE FIND_NUMPY_INCLUDE_DIR_FIRST_ON_PATH
    OUTPUT_STRIP_TRAILING_WHITESPACE)

SET(PYTHON_NUMPY_INCLUDE_DIR ${FIND_NUMPY_INCLUDE_DIR_FIRST_ON_PATH} CACHE PATH 
    "Location of Numpy headers of Python installation you want to use for wrapping.")

# Include the directories containing headers needed for the wrapping.
# Our own headers/interface files, Python headers, and OpenSim headers.
INCLUDE_DIRECTORIES(
    ${CMAKE_CURRENT_SOURCE_DIR} # TODO need this?
    ${SimTKSWIG_INCLUDE_PATH}
    ${PYTHON_INCLUDE_DIR}
    ${PYTHON_NUMPY_INCLUDE_DIR}
    ${OpenSim_SOURCE_DIR}
    ${OpenSim_SOURCE_DIR}/Vendors
    )


# Set up SWIG target(s)
# =============================================================================
SET(CMAKE_SWIG_FLAGS "")

# To aid with creating multiple modules.
MACRO(OPENSIM_PYTHON_SWIG_ADD_MODULE modulename)

    # Building.
    # ---------
    SET_SOURCE_FILES_PROPERTIES(pythonWrapOpenSim.i PROPERTIES CPLUSPLUS ON)
    SET_SOURCE_FILES_PROPERTIES(${modulename}.i PROPERTIES CPLUSPLUS ON)
    SWIG_ADD_MODULE(${modulename} python ${modulename}.i simulation.i)
    SET(LIBS_TO_LINK ${PYTHON_LIBRARIES})
    FOREACH(it ${ARGN})
        SET(LIBS_TO_LINK ${LIBS_TO_LINK} ${it})
    ENDFOREACH()
    SWIG_LINK_LIBRARIES(${modulename} ${LIBS_TO_LINK})

    # Installing.
    # -----------
    # Shared libary.
    # TODO would prefer to use ${SWIG_FILE_${modulename}_REAL_NAME} below
    INSTALL(TARGETS _${modulename}
        DESTINATION ${PYTHON_WRAPPING_INSTALL_DIR}/opensim)

    # Python (.py) file.
    INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/${modulename}.py
        DESTINATION ${PYTHON_WRAPPING_INSTALL_DIR}/opensim)

ENDMACRO(OPENSIM_PYTHON_SWIG_ADD_MODULE)

# Call the macro for each module.
# -------------------------------
OPENSIM_PYTHON_SWIG_ADD_MODULE(SimTK)
OPENSIM_PYTHON_SWIG_ADD_MODULE(common)
#OPENSIM_PYTHON_SWIG_ADD_MODULE(simulation)
#OPENSIM_PYTHON_SWIG_ADD_MODULE(analyses)
#OPENSIM_PYTHON_SWIG_ADD_MODULE(actuators)
#OPENSIM_PYTHON_SWIG_ADD_MODULE(tools)

# Install the 'source' Python files in the OpenSim installation.
# =============================================================================
# These are the files that ARE version-controlled and are NOT automatically
# generated by SWIG.
# TODO write a setup.py for setuptools/distutils.
INSTALL(DIRECTORY opensim
    DESTINATION ${PYTHON_WRAPPING_INSTALL_DIR})

# Test the code.
# TODO not sure how to do this in an automatic way since the pieces aren't
# together until after installation.

ENDIF(BUILD_PYTHON_WRAPPING)
