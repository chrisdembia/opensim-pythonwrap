function actuatorsInGroup = getActuatorsInGroup( groupName )
%
% Usage: actuatorsInGroup = getActuatorsInGroup( groupName )
%
% Here actuatorsInGroup is a cell array of strings, where each string is
% the name of an actuator in the group with name groupName.  groupName is
% assumed to be a string.  If the groupName is not the name of an existing
% group of actuators, then an empty cell array {} is returned.
%

% May Liu's combo list of actuators.  The first string in each cell array
% is the name of a group of actuators, and then the remaining strings in
% each cell array are the names of the actuators that are in the group.
% I've modified some of these groups from May's original list.
comboList = { ...
    {'ercspn_r','ercspn_r'},...
    {'intobl_r','intobl_r'},...
    {'extobl_r','extobl_r'},...
    {'glut_max_r','glut_max1_r','glut_max2_r','glut_max3_r'},...
    {'glut_med_min_r','glut_med1_r','glut_med2_r','glut_med3_r',...
     'glut_min1_r','glut_min2_r','glut_min3_r'},...
    {'iliopsoas_r','iliacus_r','psoas_r'},...
    {'quad_fem_r','quad_fem_r'},...
    {'gem_r','gem_r'},...
    {'peri_r','peri_r'},...
    {'hams_r','semimem_r','semiten_r','bifemlh_r'},...
    {'bifemsh_r','bifemsh_r'},...
    {'sar_r','sar_r'},...
    {'add_long_brev_r','add_long_r','add_brev_r'},...
    {'add_mag_r','add_mag1_r','add_mag2_r','add_mag3_r'},...
    {'tfl_r','tfl_r'},...
    {'pect_r','pect_r'},...
    {'grac_r','grac_r'},...
    {'rect_fem_r','rect_fem_r'},...
    {'vas_r','vas_med_r','vas_int_r','vas_lat_r'},...
    {'gas_r','med_gas_r','lat_gas_r'},...
    {'soleus_r','soleus_r'},...
    {'tib_post_r','tib_post_r'},...
    {'flex_dig_hal_r','flex_dig_r','flex_hal_r'},...
    {'tib_ant_r','tib_ant_r'},...
    {'per_r','per_brev_r','per_long_r','per_tert_r'},...
    {'ext_dig_hal_r','ext_dig_r','ext_hal_r'},...
    {'ercspn_l','ercspn_l'},...
    {'intobl_l','intobl_l'},...
    {'extobl_l','extobl_l'},...
    {'glut_max_l','glut_max1_l','glut_max2_l','glut_max3_l'},...
    {'glut_med_min_l','glut_med1_l','glut_med2_l','glut_med3_l',...
     'glut_min1_l','glut_min2_l','glut_min3_l'},...
    {'iliopsoas_l','iliacus_l','psoas_l'},...
    {'quad_fem_l','quad_fem_l'},...
    {'gem_l','gem_l'},...
    {'peri_l','peri_l'},...
    {'hams_l','semimem_l','semiten_l','bifemlh_l'},...
    {'bifemsh_l','bifemsh_l'},...
    {'sar_l','sar_l'},...
    {'add_long_brev_l','add_long_l','add_brev_l'},...
    {'add_mag_l','add_mag1_l','add_mag2_l','add_mag3_l'},...
    {'tfl_l','tfl_l'},...
    {'pect_l','pect_l'},...
    {'grac_l','grac_l'},...
    {'rect_fem_l','rect_fem_l'},...
    {'vas_l','vas_med_l','vas_int_l','vas_lat_l'},...
    {'gas_l','med_gas_l','lat_gas_l'},...
    {'soleus_l','soleus_l'},...
    {'tib_post_l','tib_post_l'},...
    {'flex_dig_hal_l','flex_dig_l','flex_hal_l'},...
    {'tib_ant_l','tib_ant_l'},...
    {'per_l','per_brev_l','per_long_l','per_tert_l'},...
    {'ext_dig_hal_l','ext_dig_l','ext_hal_l'},...
    {'FX','FX'},...
    {'FY','FY'},...
    {'FZ','FZ'},...
    {'MX','MX'},...
    {'MY','MY'},...
    {'MZ','MZ'},...
    {'hip_flexion_r_reserve','hip_flexion_r_reserve'},...
    {'hip_adduction_r_reserve','hip_adduction_r_reserve'},...
    {'hip_rotation_r_reserve','hip_rotation_r_reserve'},...
    {'knee_angle_r_reserve','knee_angle_r_reserve'},...
    {'ankle_angle_r_reserve','ankle_angle_r_reserve'},...
    {'hip_flexion_l_reserve','hip_flexion_l_reserve'},...
    {'hip_adduction_l_reserve','hip_adduction_l_reserve'},...
    {'hip_rotation_l_reserve','hip_rotation_l_reserve'},...
    {'knee_angle_l_reserve','knee_angle_l_reserve'},...
    {'ankle_angle_l_reserve','ankle_angle_l_reserve'},...
    {'lumbar_extension_reserve','lumbar_extension_reserve'},...
    {'lumbar_bending_reserve','lumbar_bending_reserve'},...
    {'lumbar_rotation_reserve','lumbar_rotation_reserve'},...
    {'gravity','gravity'}};

% Search linearly through the comboList for a group with name groupName.
% This search can be made faster by sorting comboList by hand by group name
% above, and then using a binary search to look for a group with name
% groupName in comboList.
for i = 1 : length( comboList )
    ithGroup = comboList{i};
    ithGroupName = ithGroup{1};
    if strcmp( ithGroupName, groupName )
        actuatorsInGroup = ithGroup( 2 : end );
        return;
    end
end
