/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.19
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package simtkModel;


public class suMarkerSet extends suSetMarkers {
  private long swigCPtr;

  
  public  suMarkerSet(long cPtr, boolean cMemoryOwn) {
    super(ModelJNI.SWIGsuMarkerSetTosuSetMarkers(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      ModelJNI.delete_suMarkerSet(swigCPtr);
      swigCMemOwn = false;
      super.delete();
    }
    swigCPtr = 0;
  }

  public static long getCPtr(suMarkerSet obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public suMarkerSet() {
    this(ModelJNI.new_suMarkerSet__SWIG_0(), true);
  }

  public suMarkerSet(String markersFileName) {
    this(ModelJNI.new_suMarkerSet__SWIG_1(markersFileName), true);
  }

  public suMarkerSet(suMarkerSet aMarkerSet) {
    this(ModelJNI.new_suMarkerSet__SWIG_2(suMarkerSet.getCPtr(aMarkerSet)), true);
  }

  public boolean usesWeights() {
    return ModelJNI.suMarkerSet_usesWeights(swigCPtr);
  }

  public boolean bindMarkersToModel(rdModel model) {
    return ModelJNI.suMarkerSet_bindMarkersToModel(swigCPtr, rdModel.getCPtr(model));
  }

  public void getMarkerNames(rdArrayStr aMarkerNamesArray) {
    ModelJNI.suMarkerSet_getMarkerNames(swigCPtr, rdArrayStr.getCPtr(aMarkerNamesArray));
  }

  public void scale(suScaleSet scaleSet) {
    ModelJNI.suMarkerSet_scale(swigCPtr, suScaleSet.getCPtr(scaleSet));
  }

  public void makeRelativeToCom(rdModel model) {
    ModelJNI.suMarkerSet_makeRelativeToCom(swigCPtr, rdModel.getCPtr(model));
  }

  public suSetMarkers getMarkers() {
    return new suSetMarkers(ModelJNI.suMarkerSet_getMarkers(swigCPtr), false);
  }

}
