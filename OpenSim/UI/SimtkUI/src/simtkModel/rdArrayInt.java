/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.19
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package simtkModel;


public class rdArrayInt {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  
  public  rdArrayInt(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected rdArrayInt() {
    this(0, false);
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      ModelJNI.delete_rdArrayInt(swigCPtr);
      swigCMemOwn = false;
    }
    swigCPtr = 0;
  }

  public static long getCPtr(rdArrayInt obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public rdArrayInt(int aDefaultValue, int aSize, int aCapacity) {
    this(ModelJNI.new_rdArrayInt__SWIG_0(aDefaultValue, aSize, aCapacity), true);
  }

  public rdArrayInt(rdArrayInt aArray) {
    this(ModelJNI.new_rdArrayInt__SWIG_1(rdArrayInt.getCPtr(aArray)), true);
  }

  public boolean computeNewCapacity(int aMinCapacity, SWIGTYPE_p_int rNewCapacity) {
    return ModelJNI.rdArrayInt_computeNewCapacity(swigCPtr, aMinCapacity, SWIGTYPE_p_int.getCPtr(rNewCapacity));
  }

  public boolean ensureCapacity(int aCapacity) {
    return ModelJNI.rdArrayInt_ensureCapacity(swigCPtr, aCapacity);
  }

  public void trim() {
    ModelJNI.rdArrayInt_trim(swigCPtr);
  }

  public int getCapacity() {
    return ModelJNI.rdArrayInt_getCapacity(swigCPtr);
  }

  public void setCapacityIncrement(int aIncrement) {
    ModelJNI.rdArrayInt_setCapacityIncrement(swigCPtr, aIncrement);
  }

  public int getCapacityIncrement() {
    return ModelJNI.rdArrayInt_getCapacityIncrement(swigCPtr);
  }

  public boolean setSize(int aSize) {
    return ModelJNI.rdArrayInt_setSize(swigCPtr, aSize);
  }

  public int getSize() {
    return ModelJNI.rdArrayInt_getSize(swigCPtr);
  }

  public int append(int aValue) {
    return ModelJNI.rdArrayInt_append__SWIG_0(swigCPtr, aValue);
  }

  public int append(rdArrayInt aArray) {
    return ModelJNI.rdArrayInt_append__SWIG_1(swigCPtr, rdArrayInt.getCPtr(aArray));
  }

  public int append(int aSize, SWIGTYPE_p_int aArray) {
    return ModelJNI.rdArrayInt_append__SWIG_2(swigCPtr, aSize, SWIGTYPE_p_int.getCPtr(aArray));
  }

  public int insert(int aIndex, int aValue) {
    return ModelJNI.rdArrayInt_insert(swigCPtr, aIndex, aValue);
  }

  public int remove(int aIndex) {
    return ModelJNI.rdArrayInt_remove(swigCPtr, aIndex);
  }

  public void set(int aIndex, int aValue) {
    ModelJNI.rdArrayInt_set(swigCPtr, aIndex, aValue);
  }

  public SWIGTYPE_p_int get() {
    long cPtr = ModelJNI.rdArrayInt_get__SWIG_0(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public SWIGTYPE_p_int get(int aIndex) {
    return new SWIGTYPE_p_int(ModelJNI.rdArrayInt_get__SWIG_1(swigCPtr, aIndex), false);
  }

  public int getitem(int index) {
    return ModelJNI.rdArrayInt_getitem(swigCPtr, index);
  }

  public void setitem(int index, int val) {
    ModelJNI.rdArrayInt_setitem(swigCPtr, index, val);
  }

  public SWIGTYPE_p_int getLast() {
    return new SWIGTYPE_p_int(ModelJNI.rdArrayInt_getLast(swigCPtr), false);
  }

  public int searchBinary(int aValue, boolean aFindFirst, int aLo, int aHi) {
    return ModelJNI.rdArrayInt_searchBinary(swigCPtr, aValue, aFindFirst, aLo, aHi);
  }

}
