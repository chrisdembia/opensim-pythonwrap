/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package opensimModel;

public class RKF {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected RKF(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RKF obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_RKF(swigCPtr);
    }
    swigCPtr = 0;
  }

  public RKF(Integrand aIntegrand, double aTol, double aTolFine) {
    this(opensimModelJNI.new_RKF__SWIG_0(Integrand.getCPtr(aIntegrand), aTol, aTolFine), true);
  }

  public RKF(Integrand aIntegrand, double aTol) {
    this(opensimModelJNI.new_RKF__SWIG_1(Integrand.getCPtr(aIntegrand), aTol), true);
  }

  public RKF(Integrand aIntegrand) {
    this(opensimModelJNI.new_RKF__SWIG_2(Integrand.getCPtr(aIntegrand)), true);
  }

  public Integrand getIntegrand() {
    long cPtr = opensimModelJNI.RKF_getIntegrand(swigCPtr);
    return (cPtr == 0) ? null : new Integrand(cPtr, false);
  }

  public void setTolerance(double aTol, double aTolFine) {
    opensimModelJNI.RKF_setTolerance__SWIG_0(swigCPtr, aTol, aTolFine);
  }

  public void setTolerance(double aTol) {
    opensimModelJNI.RKF_setTolerance__SWIG_1(swigCPtr, aTol);
  }

  public double getTolerance() {
    return opensimModelJNI.RKF_getTolerance(swigCPtr);
  }

  public void setFineTolerance(double aFineTol) {
    opensimModelJNI.RKF_setFineTolerance(swigCPtr, aFineTol);
  }

  public double getFineTolerance() {
    return opensimModelJNI.RKF_getFineTolerance(swigCPtr);
  }

  public int step(double dt, double t, SWIGTYPE_p_double y) {
    return opensimModelJNI.RKF_step(swigCPtr, dt, t, SWIGTYPE_p_double.getCPtr(y));
  }

  public int stepFixed(double dt, double t, SWIGTYPE_p_double y) {
    return opensimModelJNI.RKF_stepFixed(swigCPtr, dt, t, SWIGTYPE_p_double.getCPtr(y));
  }

  public final static class status {
    public final static status RKF_NORMAL = new status("RKF_NORMAL", opensimModelJNI.RKF_RKF_NORMAL_get());
    public final static status RKF_FINE = new status("RKF_FINE", opensimModelJNI.RKF_RKF_FINE_get());
    public final static status RKF_POOR = new status("RKF_POOR", opensimModelJNI.RKF_RKF_POOR_get());
    public final static status RKF_NAN = new status("RKF_NAN", opensimModelJNI.RKF_RKF_NAN_get());
    public final static status RKF_ERROR = new status("RKF_ERROR", opensimModelJNI.RKF_RKF_ERROR_get());
    public final static status RKF_TOO_MANY_STEPS = new status("RKF_TOO_MANY_STEPS", opensimModelJNI.RKF_RKF_TOO_MANY_STEPS_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static status swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + status.class + " with value " + swigValue);
    }

    private status(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private status(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private status(String swigName, status swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static status[] swigValues = { RKF_NORMAL, RKF_FINE, RKF_POOR, RKF_NAN, RKF_ERROR, RKF_TOO_MANY_STEPS };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
