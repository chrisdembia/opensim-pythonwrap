/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package opensimModel;

public class SimmBone extends VisibleObject {
  private long swigCPtr;

  protected SimmBone(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGSimmBoneUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SimmBone obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_SimmBone(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public SimmBone() {
    this(opensimModelJNI.new_SimmBone__SWIG_0(), true);
  }

  public SimmBone(SWIGTYPE_p_DOMElement aElement) {
    this(opensimModelJNI.new_SimmBone__SWIG_1(SWIGTYPE_p_DOMElement.getCPtr(aElement)), true);
  }

  public SimmBone(SimmBone aBone) {
    this(opensimModelJNI.new_SimmBone__SWIG_2(SimmBone.getCPtr(aBone)), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.SimmBone_copy__SWIG_0(swigCPtr);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public OpenSimObject copy(SWIGTYPE_p_DOMElement aElement) {
    long cPtr = opensimModelJNI.SimmBone_copy__SWIG_1(swigCPtr, SWIGTYPE_p_DOMElement.getCPtr(aElement));
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void copyData(SimmBone aBone) {
    opensimModelJNI.SimmBone_copyData(swigCPtr, SimmBone.getCPtr(aBone));
  }

  public void setup(SimmKinematicsEngine aEngine) {
    opensimModelJNI.SimmBone_setup(swigCPtr, SimmKinematicsEngine.getCPtr(aEngine));
  }

  public void scale(ArrayDouble aScaleFactors) {
    opensimModelJNI.SimmBone_scale(swigCPtr, ArrayDouble.getCPtr(aScaleFactors));
  }

  public void writeSIMM(SWIGTYPE_p_std__ofstream out) {
    opensimModelJNI.SimmBone_writeSIMM(swigCPtr, SWIGTYPE_p_std__ofstream.getCPtr(out));
  }

  public void peteTest() {
    opensimModelJNI.SimmBone_peteTest(swigCPtr);
  }

}
