/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package opensimModel;

public class SimmJoint extends OpenSimObject {
  private long swigCPtr;

  protected SimmJoint(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.SWIGSimmJointUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SimmJoint obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      opensimModelJNI.delete_SimmJoint(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public SimmJoint() {
    this(opensimModelJNI.new_SimmJoint__SWIG_0(), true);
  }

  public SimmJoint(SWIGTYPE_p_DOMElement aElement) {
    this(opensimModelJNI.new_SimmJoint__SWIG_1(SWIGTYPE_p_DOMElement.getCPtr(aElement)), true);
  }

  public SimmJoint(SimmJoint aJoint) {
    this(opensimModelJNI.new_SimmJoint__SWIG_2(SimmJoint.getCPtr(aJoint)), true);
  }

  public OpenSimObject copy() {
    long cPtr = opensimModelJNI.SimmJoint_copy__SWIG_0(swigCPtr);
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public OpenSimObject copy(SWIGTYPE_p_DOMElement aElement) {
    long cPtr = opensimModelJNI.SimmJoint_copy__SWIG_1(swigCPtr, SWIGTYPE_p_DOMElement.getCPtr(aElement));
    return (cPtr == 0) ? null : new OpenSimObject(cPtr, false);
  }

  public void setup(SimmKinematicsEngine aEngine) {
    opensimModelJNI.SimmJoint_setup(swigCPtr, SimmKinematicsEngine.getCPtr(aEngine));
  }

  public void copyData(SimmJoint aJoint) {
    opensimModelJNI.SimmJoint_copyData(swigCPtr, SimmJoint.getCPtr(aJoint));
  }

  public void invalidate() {
    opensimModelJNI.SimmJoint_invalidate(swigCPtr);
  }

  public ArrayStr getBodyNames() {
    return new ArrayStr(opensimModelJNI.SimmJoint_getBodyNames(swigCPtr), false);
  }

  public SWIGTYPE_p_OpenSim__ArrayPtrsTOpenSim__SimmDof_t getDofs() {
    return new SWIGTYPE_p_OpenSim__ArrayPtrsTOpenSim__SimmDof_t(opensimModelJNI.SimmJoint_getDofs(swigCPtr), false);
  }

  public SimmBody getChildBody() {
    long cPtr = opensimModelJNI.SimmJoint_getChildBody(swigCPtr);
    return (cPtr == 0) ? null : new SimmBody(cPtr, false);
  }

  public SimmBody getParentBody() {
    long cPtr = opensimModelJNI.SimmJoint_getParentBody(swigCPtr);
    return (cPtr == 0) ? null : new SimmBody(cPtr, false);
  }

  public Transform getForwaTransform() {
    return new Transform(opensimModelJNI.SimmJoint_getForwaTransform(swigCPtr), false);
  }

  public Transform getInverseTransform() {
    return new Transform(opensimModelJNI.SimmJoint_getInverseTransform(swigCPtr), false);
  }

  public boolean isCoordinateUsed(SimmCoordinate aCoordinate) {
    return opensimModelJNI.SimmJoint_isCoordinateUsed(swigCPtr, SimmCoordinate.getCPtr(aCoordinate));
  }

  public void identifyDpType(SimmModel aModel) {
    opensimModelJNI.SimmJoint_identifyDpType(swigCPtr, SimmModel.getCPtr(aModel));
  }

  public void makeSdfastJoint(SWIGTYPE_p_std__ofstream out, SWIGTYPE_p_OpenSim__ArrayPtrsTSimmSdfastBody_t sdfastBodies, SWIGTYPE_p_int dofCount, SWIGTYPE_p_int constrainedCount, boolean writeFile) {
    opensimModelJNI.SimmJoint_makeSdfastJoint(swigCPtr, SWIGTYPE_p_std__ofstream.getCPtr(out), SWIGTYPE_p_OpenSim__ArrayPtrsTSimmSdfastBody_t.getCPtr(sdfastBodies), SWIGTYPE_p_int.getCPtr(dofCount), SWIGTYPE_p_int.getCPtr(constrainedCount), writeFile);
  }

  public void scale(ScaleSet aScaleSet) {
    opensimModelJNI.SimmJoint_scale(swigCPtr, ScaleSet.getCPtr(aScaleSet));
  }

  public void writeSIMM(SWIGTYPE_p_std__ofstream out, SWIGTYPE_p_int aFunctionIndex) {
    opensimModelJNI.SimmJoint_writeSIMM(swigCPtr, SWIGTYPE_p_std__ofstream.getCPtr(out), SWIGTYPE_p_int.getCPtr(aFunctionIndex));
  }

  public void peteTest() {
    opensimModelJNI.SimmJoint_peteTest(swigCPtr);
  }

}
