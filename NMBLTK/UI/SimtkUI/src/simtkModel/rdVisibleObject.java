/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.19
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package simtkModel;


public class rdVisibleObject extends rdObject {
  private long swigCPtr;

  
  public  rdVisibleObject(long cPtr, boolean cMemoryOwn) {
    super(ModelJNI.SWIGrdVisibleObjectTordObject(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      ModelJNI.delete_rdVisibleObject(swigCPtr);
      swigCMemOwn = false;
      super.delete();
    }
    swigCPtr = 0;
  }

  public static long getCPtr(rdVisibleObject obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public rdVisibleObject() {
    this(ModelJNI.new_rdVisibleObject__SWIG_0(), true);
  }

  public rdVisibleObject(String aFileName) {
    this(ModelJNI.new_rdVisibleObject__SWIG_1(aFileName), true);
  }

  public rdVisibleObject(SWIGTYPE_p_DOMElement aNode) {
    this(ModelJNI.new_rdVisibleObject__SWIG_2(SWIGTYPE_p_DOMElement.getCPtr(aNode)), true);
  }

  public rdVisibleObject(rdVisibleObject aVisibleObject) {
    this(ModelJNI.new_rdVisibleObject__SWIG_3(rdVisibleObject.getCPtr(aVisibleObject)), true);
  }

  public rdObject copy() {
    long cPtr = ModelJNI.rdVisibleObject_copy__SWIG_0(swigCPtr);
    return (cPtr == 0) ? null : new rdObject(cPtr, false);
  }

  public rdObject copy(SWIGTYPE_p_DOMElement aElement) {
    long cPtr = ModelJNI.rdVisibleObject_copy__SWIG_1(swigCPtr, SWIGTYPE_p_DOMElement.getCPtr(aElement));
    return (cPtr == 0) ? null : new rdObject(cPtr, false);
  }

  public void setNumGeometryFiles(int n) {
    ModelJNI.rdVisibleObject_setNumGeometryFiles(swigCPtr, n);
  }

  public void setGeometryFileName(int i, String aGeometryFileName) {
    ModelJNI.rdVisibleObject_setGeometryFileName(swigCPtr, i, aGeometryFileName);
  }

  public int getNumGeometryFiles() {
    return ModelJNI.rdVisibleObject_getNumGeometryFiles(swigCPtr);
  }

  public String getGeometryFileName(int i) {
    return ModelJNI.rdVisibleObject_getGeometryFileName(swigCPtr, i);
  }

  public void setVisibleProperties(rdVisibleProperties aVisibleProperties) {
    ModelJNI.rdVisibleObject_setVisibleProperties(swigCPtr, rdVisibleProperties.getCPtr(aVisibleProperties));
  }

  public rdVisibleProperties getVisibleProperties() {
    return new rdVisibleProperties(ModelJNI.rdVisibleObject_getVisibleProperties(swigCPtr), false);
  }

  public void setTransform(rdTransform aTransform) {
    ModelJNI.rdVisibleObject_setTransform(swigCPtr, rdTransform.getCPtr(aTransform));
  }

  public rdTransform getTransform() {
    return new rdTransform(ModelJNI.rdVisibleObject_getTransform(swigCPtr), false);
  }

  public void setScaleFactors(SWIGTYPE_p_double aScaleFactors) {
    ModelJNI.rdVisibleObject_setScaleFactors(swigCPtr, SWIGTYPE_p_double.getCPtr(aScaleFactors));
  }

  public void getScaleFactors(SWIGTYPE_p_double aScaleFactors) {
    ModelJNI.rdVisibleObject_getScaleFactors(swigCPtr, SWIGTYPE_p_double.getCPtr(aScaleFactors));
  }

  public void rotateRadians(SWIGTYPE_p_double rR) {
    ModelJNI.rdVisibleObject_rotateRadians__SWIG_0(swigCPtr, SWIGTYPE_p_double.getCPtr(rR));
  }

  public void rotateRadians(SWIGTYPE_p_double rR, int order) {
    ModelJNI.rdVisibleObject_rotateRadians__SWIG_1(swigCPtr, SWIGTYPE_p_double.getCPtr(rR), order);
  }

  public void rotateRadiansX(double rR) {
    ModelJNI.rdVisibleObject_rotateRadiansX(swigCPtr, rR);
  }

  public void rotateRadiansY(double rR) {
    ModelJNI.rdVisibleObject_rotateRadiansY(swigCPtr, rR);
  }

  public void rotateRadiansZ(double rR) {
    ModelJNI.rdVisibleObject_rotateRadiansZ(swigCPtr, rR);
  }

  public void rotateRadiansAxis(double rR, SWIGTYPE_p_double axis) {
    ModelJNI.rdVisibleObject_rotateRadiansAxis(swigCPtr, rR, SWIGTYPE_p_double.getCPtr(axis));
  }

  public void rotateDegrees(SWIGTYPE_p_double rR) {
    ModelJNI.rdVisibleObject_rotateDegrees__SWIG_0(swigCPtr, SWIGTYPE_p_double.getCPtr(rR));
  }

  public void rotateDegrees(SWIGTYPE_p_double rR, int order) {
    ModelJNI.rdVisibleObject_rotateDegrees__SWIG_1(swigCPtr, SWIGTYPE_p_double.getCPtr(rR), order);
  }

  public void rotateDegreesX(double rR) {
    ModelJNI.rdVisibleObject_rotateDegreesX(swigCPtr, rR);
  }

  public void rotateDegreesY(double rR) {
    ModelJNI.rdVisibleObject_rotateDegreesY(swigCPtr, rR);
  }

  public void rotateDegreesZ(double rR) {
    ModelJNI.rdVisibleObject_rotateDegreesZ(swigCPtr, rR);
  }

  public void rotateDegreesAxis(double rR, SWIGTYPE_p_double axis) {
    ModelJNI.rdVisibleObject_rotateDegreesAxis(swigCPtr, rR, SWIGTYPE_p_double.getCPtr(axis));
  }

  public void translate(SWIGTYPE_p_double t) {
    ModelJNI.rdVisibleObject_translate(swigCPtr, SWIGTYPE_p_double.getCPtr(t));
  }

  public void setupProperties() {
    ModelJNI.rdVisibleObject_setupProperties(swigCPtr);
  }

}
