/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.19
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package simtkModel;


public class suIndAcc extends rdAnalysis {
  private long swigCPtr;

  
  public  suIndAcc(long cPtr, boolean cMemoryOwn) {
    super(ModelJNI.SWIGsuIndAccTordAnalysis(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected suIndAcc() {
    this(0, false);
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      ModelJNI.delete_suIndAcc(swigCPtr);
      swigCMemOwn = false;
      super.delete();
    }
    swigCPtr = 0;
  }

  public static long getCPtr(suIndAcc obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public suIndAcc(rdModel aModel) {
    this(ModelJNI.new_suIndAcc__SWIG_0(rdModel.getCPtr(aModel)), true);
  }

  public suIndAcc(rdModel aModel, rdStorage aStates, rdStorage aControls, String aBaseName, String aDir, String aExtension) {
    this(ModelJNI.new_suIndAcc__SWIG_1(rdModel.getCPtr(aModel), rdStorage.getCPtr(aStates), rdStorage.getCPtr(aControls), aBaseName, aDir, aExtension), true);
  }

  public int getNumComponents() {
    return ModelJNI.suIndAcc_getNumComponents(swigCPtr);
  }

  public int getNumIndependentComponents() {
    return ModelJNI.suIndAcc_getNumIndependentComponents(swigCPtr);
  }

  public int getNumElements() {
    return ModelJNI.suIndAcc_getNumElements(swigCPtr);
  }

  public int getLastActuatorIndex() {
    return ModelJNI.suIndAcc_getLastActuatorIndex(swigCPtr);
  }

  public int getGravityIndex() {
    return ModelJNI.suIndAcc_getGravityIndex(swigCPtr);
  }

  public int getVelocityIndex() {
    return ModelJNI.suIndAcc_getVelocityIndex(swigCPtr);
  }

  public int getInertialIndex() {
    return ModelJNI.suIndAcc_getInertialIndex(swigCPtr);
  }

  public int getAllActuatorsIndex() {
    return ModelJNI.suIndAcc_getAllActuatorsIndex(swigCPtr);
  }

  public int getAllIndex() {
    return ModelJNI.suIndAcc_getAllIndex(swigCPtr);
  }

  public void setContactThreshold(double aThreshold) {
    ModelJNI.suIndAcc_setContactThreshold(swigCPtr, aThreshold);
  }

  public double getContactThreshold() {
    return ModelJNI.suIndAcc_getContactThreshold(swigCPtr);
  }

  public String getComponentName(int aC) {
    return ModelJNI.suIndAcc_getComponentName(swigCPtr, aC);
  }

  public void setStorageCapacityIncrements(int aIncrement) {
    ModelJNI.suIndAcc_setStorageCapacityIncrements(swigCPtr, aIncrement);
  }

  public SWIGTYPE_p_p_rdStorage getForceStorage() {
    long cPtr = ModelJNI.suIndAcc_getForceStorage(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_rdStorage(cPtr, false);
  }

  public boolean getUseNullDecomposition() {
    return ModelJNI.suIndAcc_getUseNullDecomposition(swigCPtr);
  }

  public void setComputeNormalizedAccelerations(boolean aBool) {
    ModelJNI.suIndAcc_setComputeNormalizedAccelerations(swigCPtr, aBool);
  }

  public boolean getComputeNormalizedAccelerations() {
    return ModelJNI.suIndAcc_getComputeNormalizedAccelerations(swigCPtr);
  }

  public int computeAccelerations() {
    return ModelJNI.suIndAcc_computeAccelerations(swigCPtr);
  }

  public void sumForceResults() {
    ModelJNI.suIndAcc_sumForceResults(swigCPtr);
  }

  public void sumAccelerationResults() {
    ModelJNI.suIndAcc_sumAccelerationResults(swigCPtr);
  }

  public void sumDecomposition() {
    ModelJNI.suIndAcc_sumDecomposition(swigCPtr);
  }

  public void store() {
    ModelJNI.suIndAcc_store(swigCPtr);
  }

  public int printResults(String aBaseName, String aDir, double aDT, String aExtension) {
    return ModelJNI.suIndAcc_printResults(swigCPtr, aBaseName, aDir, aDT, aExtension);
  }

}
