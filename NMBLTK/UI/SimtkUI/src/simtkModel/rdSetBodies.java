/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.19
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package simtkModel;


public class rdSetBodies extends rdObject {
  private long swigCPtr;

  
  public  rdSetBodies(long cPtr, boolean cMemoryOwn) {
    super(ModelJNI.SWIGrdSetBodiesTordObject(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      ModelJNI.delete_rdSetBodies(swigCPtr);
      swigCMemOwn = false;
      super.delete();
    }
    swigCPtr = 0;
  }

  public static long getCPtr(rdSetBodies obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public rdSetBodies() {
    this(ModelJNI.new_rdSetBodies__SWIG_0(), true);
  }

  public rdSetBodies(String aFileName) {
    this(ModelJNI.new_rdSetBodies__SWIG_1(aFileName), true);
  }

  public rdSetBodies(rdSetBodies aSet) {
    this(ModelJNI.new_rdSetBodies__SWIG_2(rdSetBodies.getCPtr(aSet)), true);
  }

  public rdObject copy() {
    long cPtr = ModelJNI.rdSetBodies_copy(swigCPtr);
    return (cPtr == 0) ? null : new rdObject(cPtr, false);
  }

  public void setMemoryOwner(boolean aTrueFalse) {
    ModelJNI.rdSetBodies_setMemoryOwner(swigCPtr, aTrueFalse);
  }

  public boolean getMemoryOwner() {
    return ModelJNI.rdSetBodies_getMemoryOwner(swigCPtr);
  }

  public boolean computeNewCapacity(int aMinCapacity, SWIGTYPE_p_int rNewCapacity) {
    return ModelJNI.rdSetBodies_computeNewCapacity(swigCPtr, aMinCapacity, SWIGTYPE_p_int.getCPtr(rNewCapacity));
  }

  public boolean ensureCapacity(int aCapacity) {
    return ModelJNI.rdSetBodies_ensureCapacity(swigCPtr, aCapacity);
  }

  public void trim() {
    ModelJNI.rdSetBodies_trim(swigCPtr);
  }

  public int getCapacity() {
    return ModelJNI.rdSetBodies_getCapacity(swigCPtr);
  }

  public void setCapacityIncrement(int aIncrement) {
    ModelJNI.rdSetBodies_setCapacityIncrement(swigCPtr, aIncrement);
  }

  public int getCapacityIncrement() {
    return ModelJNI.rdSetBodies_getCapacityIncrement(swigCPtr);
  }

  public boolean setSize(int aSize) {
    return ModelJNI.rdSetBodies_setSize(swigCPtr, aSize);
  }

  public int getSize() {
    return ModelJNI.rdSetBodies_getSize(swigCPtr);
  }

  public int getIndex(rdBody aObject, int aStartIndex) {
    return ModelJNI.rdSetBodies_getIndex__SWIG_0(swigCPtr, rdBody.getCPtr(aObject), aStartIndex);
  }

  public int getIndex(String aName, int aStartIndex) {
    return ModelJNI.rdSetBodies_getIndex__SWIG_1(swigCPtr, aName, aStartIndex);
  }

  public boolean append(rdBody aObject) {
    return ModelJNI.rdSetBodies_append__SWIG_0(swigCPtr, rdBody.getCPtr(aObject));
  }

  public boolean append(SWIGTYPE_p_rdArrayPtrsTrdBody_t aArray) {
    return ModelJNI.rdSetBodies_append__SWIG_1(swigCPtr, SWIGTYPE_p_rdArrayPtrsTrdBody_t.getCPtr(aArray));
  }

  public boolean insert(int aIndex, rdBody aObject) {
    return ModelJNI.rdSetBodies_insert(swigCPtr, aIndex, rdBody.getCPtr(aObject));
  }

  public boolean remove(int aIndex) {
    return ModelJNI.rdSetBodies_remove__SWIG_0(swigCPtr, aIndex);
  }

  public boolean remove(rdBody aObject) {
    return ModelJNI.rdSetBodies_remove__SWIG_1(swigCPtr, rdBody.getCPtr(aObject));
  }

  public boolean set(int aIndex, rdBody aObject) {
    return ModelJNI.rdSetBodies_set(swigCPtr, aIndex, rdBody.getCPtr(aObject));
  }

  public rdBody get(int aIndex) {
    long cPtr = ModelJNI.rdSetBodies_get__SWIG_0(swigCPtr, aIndex);
    return (cPtr == 0) ? null : new rdBody(cPtr, false);
  }

  public rdBody get(String aName) {
    long cPtr = ModelJNI.rdSetBodies_get__SWIG_1(swigCPtr, aName);
    return (cPtr == 0) ? null : new rdBody(cPtr, false);
  }

  public rdBody getLast() {
    long cPtr = ModelJNI.rdSetBodies_getLast(swigCPtr);
    return (cPtr == 0) ? null : new rdBody(cPtr, false);
  }

  public int searchBinary(rdBody aObject, boolean aFindFirst, int aLo, int aHi) {
    return ModelJNI.rdSetBodies_searchBinary(swigCPtr, rdBody.getCPtr(aObject), aFindFirst, aLo, aHi);
  }

}
