/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.19
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package simtkModel;


public class rdActuatorSet extends rdSetActuators {
  private long swigCPtr;

  
  public  rdActuatorSet(long cPtr, boolean cMemoryOwn) {
    super(ModelJNI.SWIGrdActuatorSetTordSetActuators(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      ModelJNI.delete_rdActuatorSet(swigCPtr);
      swigCMemOwn = false;
      super.delete();
    }
    swigCPtr = 0;
  }

  public static long getCPtr(rdActuatorSet obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public rdActuatorSet() {
    this(ModelJNI.new_rdActuatorSet__SWIG_0(), true);
  }

  public rdActuatorSet(String aFileName) {
    this(ModelJNI.new_rdActuatorSet__SWIG_1(aFileName), true);
  }

  public void setModel(rdModel aModel) {
    ModelJNI.rdActuatorSet_setModel(swigCPtr, rdModel.getCPtr(aModel));
  }

  public rdModel getModel() {
    long cPtr = ModelJNI.rdActuatorSet_getModel(swigCPtr);
    return (cPtr == 0) ? null : new rdModel(cPtr, false);
  }

  public boolean remove(int aIndex) {
    return ModelJNI.rdActuatorSet_remove(swigCPtr, aIndex);
  }

  public boolean append(rdActuator aActuator) {
    return ModelJNI.rdActuatorSet_append(swigCPtr, rdActuator.getCPtr(aActuator));
  }

  public boolean set(int aIndex, rdActuator aActuator) {
    return ModelJNI.rdActuatorSet_set(swigCPtr, aIndex, rdActuator.getCPtr(aActuator));
  }

  public int getNX() {
    return ModelJNI.rdActuatorSet_getNX(swigCPtr);
  }

  public int mapActuatorToControl(int aActuatorIndex) {
    return ModelJNI.rdActuatorSet_mapActuatorToControl(swigCPtr, aActuatorIndex);
  }

  public int mapControlToActuator(int aControlIndex) {
    return ModelJNI.rdActuatorSet_mapControlToActuator(swigCPtr, aControlIndex);
  }

  public int getControlIndex(String aName) {
    return ModelJNI.rdActuatorSet_getControlIndex(swigCPtr, aName);
  }

  public String getControlName(int aIndex) {
    return ModelJNI.rdActuatorSet_getControlName(swigCPtr, aIndex);
  }

  public void setControl(int aIndex, double aValue) {
    ModelJNI.rdActuatorSet_setControl__SWIG_0(swigCPtr, aIndex, aValue);
  }

  public void setControl(String aName, double aValue) {
    ModelJNI.rdActuatorSet_setControl__SWIG_1(swigCPtr, aName, aValue);
  }

  public void setControls(SWIGTYPE_p_double aX) {
    ModelJNI.rdActuatorSet_setControls(swigCPtr, SWIGTYPE_p_double.getCPtr(aX));
  }

  public double getControl(int aIndex) {
    return ModelJNI.rdActuatorSet_getControl__SWIG_0(swigCPtr, aIndex);
  }

  public double getControl(String aName) {
    return ModelJNI.rdActuatorSet_getControl__SWIG_1(swigCPtr, aName);
  }

  public void getControls(SWIGTYPE_p_double rX) {
    ModelJNI.rdActuatorSet_getControls(swigCPtr, SWIGTYPE_p_double.getCPtr(rX));
  }

  public int getNY() {
    return ModelJNI.rdActuatorSet_getNY(swigCPtr);
  }

  public int mapActuatorToState(int aActuatorIndex) {
    return ModelJNI.rdActuatorSet_mapActuatorToState(swigCPtr, aActuatorIndex);
  }

  public int mapStateToActuator(int aStateIndex) {
    return ModelJNI.rdActuatorSet_mapStateToActuator(swigCPtr, aStateIndex);
  }

  public int getStateIndex(String aName) {
    return ModelJNI.rdActuatorSet_getStateIndex(swigCPtr, aName);
  }

  public String getStateName(int aIndex) {
    return ModelJNI.rdActuatorSet_getStateName(swigCPtr, aIndex);
  }

  public void setState(int aIndex, double aValue) {
    ModelJNI.rdActuatorSet_setState__SWIG_0(swigCPtr, aIndex, aValue);
  }

  public void setState(String aName, double aValue) {
    ModelJNI.rdActuatorSet_setState__SWIG_1(swigCPtr, aName, aValue);
  }

  public void setStates(SWIGTYPE_p_double aY) {
    ModelJNI.rdActuatorSet_setStates(swigCPtr, SWIGTYPE_p_double.getCPtr(aY));
  }

  public double getState(int aIndex) {
    return ModelJNI.rdActuatorSet_getState__SWIG_0(swigCPtr, aIndex);
  }

  public double getState(String aName) {
    return ModelJNI.rdActuatorSet_getState__SWIG_1(swigCPtr, aName);
  }

  public void getStates(SWIGTYPE_p_double rY) {
    ModelJNI.rdActuatorSet_getStates(swigCPtr, SWIGTYPE_p_double.getCPtr(rY));
  }

  public int getNYP() {
    return ModelJNI.rdActuatorSet_getNYP(swigCPtr);
  }

  public int mapActuatorToPseudoState(int aActuatorIndex) {
    return ModelJNI.rdActuatorSet_mapActuatorToPseudoState(swigCPtr, aActuatorIndex);
  }

  public int mapPseudoStateToActuator(int aPseudoStateIndex) {
    return ModelJNI.rdActuatorSet_mapPseudoStateToActuator(swigCPtr, aPseudoStateIndex);
  }

  public int getPseudoStateIndex(String aName) {
    return ModelJNI.rdActuatorSet_getPseudoStateIndex(swigCPtr, aName);
  }

  public String getPseudoStateName(int aIndex) {
    return ModelJNI.rdActuatorSet_getPseudoStateName(swigCPtr, aIndex);
  }

  public void setPseudoState(int aIndex, double aValue) {
    ModelJNI.rdActuatorSet_setPseudoState__SWIG_0(swigCPtr, aIndex, aValue);
  }

  public void setPseudoState(String aName, double aValue) {
    ModelJNI.rdActuatorSet_setPseudoState__SWIG_1(swigCPtr, aName, aValue);
  }

  public void setPseudoStates(SWIGTYPE_p_double aY) {
    ModelJNI.rdActuatorSet_setPseudoStates(swigCPtr, SWIGTYPE_p_double.getCPtr(aY));
  }

  public double getPseudoState(int aIndex) {
    return ModelJNI.rdActuatorSet_getPseudoState__SWIG_0(swigCPtr, aIndex);
  }

  public double getPseudoState(String aName) {
    return ModelJNI.rdActuatorSet_getPseudoState__SWIG_1(swigCPtr, aName);
  }

  public void getPseudoStates(SWIGTYPE_p_double rY) {
    ModelJNI.rdActuatorSet_getPseudoStates(swigCPtr, SWIGTYPE_p_double.getCPtr(rY));
  }

  public void promoteControlsToStates(SWIGTYPE_p_double aX, double aDT) {
    ModelJNI.rdActuatorSet_promoteControlsToStates(swigCPtr, SWIGTYPE_p_double.getCPtr(aX), aDT);
  }

  public void computeActuation() {
    ModelJNI.rdActuatorSet_computeActuation(swigCPtr);
  }

  public void computeStateDerivatives(SWIGTYPE_p_double rDY) {
    ModelJNI.rdActuatorSet_computeStateDerivatives(swigCPtr, SWIGTYPE_p_double.getCPtr(rDY));
  }

  public void updatePseudoStates() {
    ModelJNI.rdActuatorSet_updatePseudoStates(swigCPtr);
  }

  public void apply() {
    ModelJNI.rdActuatorSet_apply(swigCPtr);
  }

  public boolean check() {
    return ModelJNI.rdActuatorSet_check(swigCPtr);
  }

}
