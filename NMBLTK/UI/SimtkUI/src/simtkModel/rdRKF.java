/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.19
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package simtkModel;


public class rdRKF {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  
  public  rdRKF(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected rdRKF() {
    this(0, false);
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      ModelJNI.delete_rdRKF(swigCPtr);
      swigCMemOwn = false;
    }
    swigCPtr = 0;
  }

  public static long getCPtr(rdRKF obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public rdRKF(Integrand aIntegrand, double aTol, double aTolFine) {
    this(ModelJNI.new_rdRKF(Integrand.getCPtr(aIntegrand), aTol, aTolFine), true);
  }

  public Integrand getIntegrand() {
    long cPtr = ModelJNI.rdRKF_getIntegrand(swigCPtr);
    return (cPtr == 0) ? null : new Integrand(cPtr, false);
  }

  public void setTolerance(double aTol, double aTolFine) {
    ModelJNI.rdRKF_setTolerance(swigCPtr, aTol, aTolFine);
  }

  public double getTolerance() {
    return ModelJNI.rdRKF_getTolerance(swigCPtr);
  }

  public void setFineTolerance(double aFineTol) {
    ModelJNI.rdRKF_setFineTolerance(swigCPtr, aFineTol);
  }

  public double getFineTolerance() {
    return ModelJNI.rdRKF_getFineTolerance(swigCPtr);
  }

  public int step(double dt, double t, SWIGTYPE_p_double y) {
    return ModelJNI.rdRKF_step(swigCPtr, dt, t, SWIGTYPE_p_double.getCPtr(y));
  }

  public int stepFixed(double dt, double t, SWIGTYPE_p_double y) {
    return ModelJNI.rdRKF_stepFixed(swigCPtr, dt, t, SWIGTYPE_p_double.getCPtr(y));
  }

  // enums and constants
  public final static int rdRKF_NORMAL = ModelJNI.get_rdRKF_rdRKF_NORMAL();
  public final static int rdRKF_FINE = ModelJNI.get_rdRKF_rdRKF_FINE();
  public final static int rdRKF_POOR = ModelJNI.get_rdRKF_rdRKF_POOR();
  public final static int rdRKF_NAN = ModelJNI.get_rdRKF_rdRKF_NAN();
  public final static int rdRKF_ERROR = ModelJNI.get_rdRKF_rdRKF_ERROR();
  public final static int rdRKF_TOO_MANY_STEPS = ModelJNI.get_rdRKF_rdRKF_TOO_MANY_STEPS();
}
