/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.19
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package simtkModel;


public class rdModelIntegrand extends Integrand {
  private long swigCPtr;

  
  public  rdModelIntegrand(long cPtr, boolean cMemoryOwn) {
    super(ModelJNI.SWIGrdModelIntegrandToIntegrand(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected rdModelIntegrand() {
    this(0, false);
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      ModelJNI.delete_rdModelIntegrand(swigCPtr);
      swigCMemOwn = false;
      super.delete();
    }
    swigCPtr = 0;
  }

  public static long getCPtr(rdModelIntegrand obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public rdModelIntegrand(rdModel aModel) {
    this(ModelJNI.new_rdModelIntegrand(rdModel.getCPtr(aModel)), true);
  }

  public int getSize() {
    return ModelJNI.rdModelIntegrand_getSize(swigCPtr);
  }

  public rdModel getModel() {
    long cPtr = ModelJNI.rdModelIntegrand_getModel(swigCPtr);
    return (cPtr == 0) ? null : new rdModel(cPtr, false);
  }

  public void setControlSet(rdControlSet aControlSet) {
    ModelJNI.rdModelIntegrand_setControlSet(swigCPtr, rdControlSet.getCPtr(aControlSet));
  }

  public rdControlSet getControlSet() {
    long cPtr = ModelJNI.rdModelIntegrand_getControlSet(swigCPtr);
    return (cPtr == 0) ? null : new rdControlSet(cPtr, false);
  }

  public void setControlStorage(rdStorage aStorage) {
    ModelJNI.rdModelIntegrand_setControlStorage(swigCPtr, rdStorage.getCPtr(aStorage));
  }

  public rdStorage getControlStorage() {
    long cPtr = ModelJNI.rdModelIntegrand_getControlStorage(swigCPtr);
    return (cPtr == 0) ? null : new rdStorage(cPtr, false);
  }

  public void setStateStorage(rdStorage aStorage) {
    ModelJNI.rdModelIntegrand_setStateStorage(swigCPtr, rdStorage.getCPtr(aStorage));
  }

  public rdStorage getStateStorage() {
    long cPtr = ModelJNI.rdModelIntegrand_getStateStorage(swigCPtr);
    return (cPtr == 0) ? null : new rdStorage(cPtr, false);
  }

  public void setPseudoStateStorage(rdStorage aStorage) {
    ModelJNI.rdModelIntegrand_setPseudoStateStorage(swigCPtr, rdStorage.getCPtr(aStorage));
  }

  public rdStorage getPseudoStateStorage() {
    long cPtr = ModelJNI.rdModelIntegrand_getPseudoStateStorage(swigCPtr);
    return (cPtr == 0) ? null : new rdStorage(cPtr, false);
  }

  public void setController(SWIGTYPE_p_rdController aController) {
    ModelJNI.rdModelIntegrand_setController(swigCPtr, SWIGTYPE_p_rdController.getCPtr(aController));
  }

  public SWIGTYPE_p_rdController getController() {
    long cPtr = ModelJNI.rdModelIntegrand_getController(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_rdController(cPtr, false);
  }

  public rdControlSet constructControlSet() {
    long cPtr = ModelJNI.rdModelIntegrand_constructControlSet(swigCPtr);
    return (cPtr == 0) ? null : new rdControlSet(cPtr, false);
  }

  public void convertStatesIntegrandToModel(double t, SWIGTYPE_p_double y, SWIGTYPE_p_double yModel) {
    ModelJNI.rdModelIntegrand_convertStatesIntegrandToModel(swigCPtr, t, SWIGTYPE_p_double.getCPtr(y), SWIGTYPE_p_double.getCPtr(yModel));
  }

  public void convertStatesModelToIntegrand(SWIGTYPE_p_double yModel, SWIGTYPE_p_double y) {
    ModelJNI.rdModelIntegrand_convertStatesModelToIntegrand(swigCPtr, SWIGTYPE_p_double.getCPtr(yModel), SWIGTYPE_p_double.getCPtr(y));
  }

  public void setInitialStates(double ti, SWIGTYPE_p_double yi) {
    ModelJNI.rdModelIntegrand_setInitialStates(swigCPtr, ti, SWIGTYPE_p_double.getCPtr(yi));
  }

  public void getInitialStates(SWIGTYPE_p_double yi) {
    ModelJNI.rdModelIntegrand_getInitialStates(swigCPtr, SWIGTYPE_p_double.getCPtr(yi));
  }

  public void compute(double t, SWIGTYPE_p_double y, SWIGTYPE_p_double dydt) {
    ModelJNI.rdModelIntegrand_compute(swigCPtr, t, SWIGTYPE_p_double.getCPtr(y), SWIGTYPE_p_double.getCPtr(dydt));
  }

  public void initialize(int step, SWIGTYPE_p_double dt, double ti, double tf, SWIGTYPE_p_double y) {
    ModelJNI.rdModelIntegrand_initialize(swigCPtr, step, SWIGTYPE_p_double.getCPtr(dt), ti, tf, SWIGTYPE_p_double.getCPtr(y));
  }

  public void processAfterStep(int step, SWIGTYPE_p_double dt, double t, SWIGTYPE_p_double y) {
    ModelJNI.rdModelIntegrand_processAfterStep(swigCPtr, step, SWIGTYPE_p_double.getCPtr(dt), t, SWIGTYPE_p_double.getCPtr(y));
  }

  public void finalize(int step, double t, SWIGTYPE_p_double y) {
    ModelJNI.rdModelIntegrand_finalize(swigCPtr, step, t, SWIGTYPE_p_double.getCPtr(y));
  }

}
