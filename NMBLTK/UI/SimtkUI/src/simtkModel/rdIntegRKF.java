/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.19
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package simtkModel;


public class rdIntegRKF extends rdRKF {
  private long swigCPtr;

  
  public  rdIntegRKF(long cPtr, boolean cMemoryOwn) {
    super(ModelJNI.SWIGrdIntegRKFTordRKF(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected rdIntegRKF() {
    this(0, false);
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      ModelJNI.delete_rdIntegRKF(swigCPtr);
      swigCMemOwn = false;
      super.delete();
    }
    swigCPtr = 0;
  }

  public static long getCPtr(rdIntegRKF obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public rdIntegRKF(rdModel aModel, double aTol, double aTolFine) {
    this(ModelJNI.new_rdIntegRKF(rdModel.getCPtr(aModel), aTol, aTolFine), true);
  }

  public void setMinDT(double aMin) {
    ModelJNI.rdIntegRKF_setMinDT(swigCPtr, aMin);
  }

  public double getMinDT() {
    return ModelJNI.rdIntegRKF_getMinDT(swigCPtr);
  }

  public void setMaxDT(double aMax) {
    ModelJNI.rdIntegRKF_setMaxDT(swigCPtr, aMax);
  }

  public double getMaxDT() {
    return ModelJNI.rdIntegRKF_getMaxDT(swigCPtr);
  }

  public void setMaximumNumberOfSteps(int aMaxSteps) {
    ModelJNI.rdIntegRKF_setMaximumNumberOfSteps(swigCPtr, aMaxSteps);
  }

  public int getMaximumNumberOfSteps() {
    return ModelJNI.rdIntegRKF_getMaximumNumberOfSteps(swigCPtr);
  }

  public int getStatus() {
    return ModelJNI.rdIntegRKF_getStatus(swigCPtr);
  }

  public void setUseSpecifiedDT(boolean aTrueFalse) {
    ModelJNI.rdIntegRKF_setUseSpecifiedDT(swigCPtr, aTrueFalse);
  }

  public boolean getUseSpecifiedDT() {
    return ModelJNI.rdIntegRKF_getUseSpecifiedDT(swigCPtr);
  }

  public void setUseConstantDT(boolean aTrueFalse) {
    ModelJNI.rdIntegRKF_setUseConstantDT(swigCPtr, aTrueFalse);
  }

  public boolean getUseConstantDT() {
    return ModelJNI.rdIntegRKF_getUseConstantDT(swigCPtr);
  }

  public void setDT(double aDT) {
    ModelJNI.rdIntegRKF_setDT(swigCPtr, aDT);
  }

  public double getDT() {
    return ModelJNI.rdIntegRKF_getDT(swigCPtr);
  }

  public rdArrayDouble getDTArray() {
    return new rdArrayDouble(ModelJNI.rdIntegRKF_getDTArray(swigCPtr), false);
  }

  public void setDTArray(int aN, SWIGTYPE_p_double aDT, double aTI) {
    ModelJNI.rdIntegRKF_setDTArray(swigCPtr, aN, SWIGTYPE_p_double.getCPtr(aDT), aTI);
  }

  public double getDTArrayDT(int aStep) {
    return ModelJNI.rdIntegRKF_getDTArrayDT(swigCPtr, aStep);
  }

  public void printDTArray(String aFileName) {
    ModelJNI.rdIntegRKF_printDTArray(swigCPtr, aFileName);
  }

  public rdArrayDouble getTimeArray() {
    return new rdArrayDouble(ModelJNI.rdIntegRKF_getTimeArray(swigCPtr), false);
  }

  public double getTimeArrayTime(int aStep) {
    return ModelJNI.rdIntegRKF_getTimeArrayTime(swigCPtr, aStep);
  }

  public int getTimeArrayStep(double aTime) {
    return ModelJNI.rdIntegRKF_getTimeArrayStep(swigCPtr, aTime);
  }

  public void printTimeArray(String aFileName) {
    ModelJNI.rdIntegRKF_printTimeArray(swigCPtr, aFileName);
  }

  public void resetTimeAndDTArrays(double aTime) {
    ModelJNI.rdIntegRKF_resetTimeAndDTArrays(swigCPtr, aTime);
  }

  public void setControlStorage(rdStorage aStorage) {
    ModelJNI.rdIntegRKF_setControlStorage(swigCPtr, rdStorage.getCPtr(aStorage));
  }

  public rdStorage getControlStorage() {
    long cPtr = ModelJNI.rdIntegRKF_getControlStorage(swigCPtr);
    return (cPtr == 0) ? null : new rdStorage(cPtr, false);
  }

  public void setStateStorage(rdStorage aStorage) {
    ModelJNI.rdIntegRKF_setStateStorage(swigCPtr, rdStorage.getCPtr(aStorage));
  }

  public rdStorage getStateStorage() {
    long cPtr = ModelJNI.rdIntegRKF_getStateStorage(swigCPtr);
    return (cPtr == 0) ? null : new rdStorage(cPtr, false);
  }

  public void setPseudoStateStorage(rdStorage aStorage) {
    ModelJNI.rdIntegRKF_setPseudoStateStorage(swigCPtr, rdStorage.getCPtr(aStorage));
  }

  public rdStorage getPseudoStateStorage() {
    long cPtr = ModelJNI.rdIntegRKF_getPseudoStateStorage(swigCPtr);
    return (cPtr == 0) ? null : new rdStorage(cPtr, false);
  }

  public void setController(SWIGTYPE_p_rdController aController) {
    ModelJNI.rdIntegRKF_setController(swigCPtr, SWIGTYPE_p_rdController.getCPtr(aController));
  }

  public SWIGTYPE_p_rdController getController() {
    long cPtr = ModelJNI.rdIntegRKF_getController(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_rdController(cPtr, false);
  }

  public String toString() {
    return ModelJNI.rdIntegRKF_toString(swigCPtr);
  }

  public boolean integrate(double ti, double tf, rdControlSet x, SWIGTYPE_p_double y, double dtFirst) {
    return ModelJNI.rdIntegRKF_integrate(swigCPtr, ti, tf, rdControlSet.getCPtr(x), SWIGTYPE_p_double.getCPtr(y), dtFirst);
  }

  public void halt() {
    ModelJNI.rdIntegRKF_halt(swigCPtr);
  }

  public void clearHalt() {
    ModelJNI.rdIntegRKF_clearHalt(swigCPtr);
  }

  public boolean checkHalt() {
    return ModelJNI.rdIntegRKF_checkHalt(swigCPtr);
  }

}
